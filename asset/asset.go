package asset

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path"
	"path/filepath"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindata_file_info struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindata_file_info) Name() string {
	return fi.name
}
func (fi bindata_file_info) Size() int64 {
	return fi.size
}
func (fi bindata_file_info) Mode() os.FileMode {
	return fi.mode
}
func (fi bindata_file_info) ModTime() time.Time {
	return fi.modTime
}
func (fi bindata_file_info) IsDir() bool {
	return false
}
func (fi bindata_file_info) Sys() interface{} {
	return nil
}

var _api_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xe4\x54\x4b\x8f\xd3\x30\x10\xbe\x23\xf1\x1f\x46\x3e\x25\x22\xdb\xee\x8a\x1b\x2b\x90\x50\x41\x94\xe7\xae\x60\x0f\x2b\x21\x0e\x81\x4c\x5b\x4b\x66\xec\xb5\x27\x94\x68\x95\xff\x8e\xed\x54\x8d\x93\xd2\x50\xce\xeb\x4b\xad\xce\xe3\x7b\xcc\xc4\xbf\x4a\x0b\xd7\x56\xff\x6e\x16\x4a\x22\x31\x3c\x87\x6c\x55\xd3\x0f\x96\x9a\x20\xcb\xe1\xfe\xf1\x23\xf0\x67\xff\x57\x92\xda\x47\xdb\xee\x27\x89\xcd\x8c\xd5\xac\xb9\x31\x38\x73\x48\x95\xef\xda\x37\xfd\x89\xbc\xd1\x55\x01\xa6\xe4\x4d\x01\xdf\x75\xd5\xec\x1b\x85\x13\x08\x59\xbc\xf3\x25\x84\x5b\xb8\xfd\xf8\x61\xc9\x6c\x3e\xe3\x5d\x8d\xce\x43\x5e\x0e\x13\x6b\xab\x7c\xe2\x56\x52\xa5\xb7\x5f\x85\x07\xb6\x8d\xd1\x92\x58\x7c\x83\x27\x11\x20\xc9\xf7\x4d\x67\xda\x20\xed\x09\xf8\xe2\x02\xd8\xd6\x98\x8f\xb2\x1c\xf2\x0e\x70\x89\x65\x85\x36\x13\xb7\x67\x51\xdc\xd9\x42\x7b\x08\xad\x44\x01\xe2\x42\xa4\x65\x72\x05\xd9\x81\x94\xbe\x1f\x55\x5d\x34\xa9\x68\xfb\x2b\x2a\x87\x47\xeb\x8e\xd4\x58\xe4\xda\x52\x48\xdb\xc5\xdb\xcb\xa9\x29\x74\x8e\x4e\x0d\xa1\x80\x4a\x13\x16\xb0\x2a\xa5\x3a\x32\x10\xde\x48\xd7\x91\xfa\xcb\x0c\xc7\x4e\x93\xd2\xe5\x70\xf0\x78\x60\x4e\x70\x2d\x0a\xe5\x92\x6b\x07\x73\xb8\x38\x3f\x87\x17\xf0\xf4\x20\x31\xee\xa0\x27\x96\xbd\xfb\x72\xf5\x69\x66\x4a\xeb\x30\x16\x5a\x74\x46\x93\xc3\x3c\x85\x1f\x39\x15\x4e\x90\x76\x52\x6d\x7b\x92\x9b\x4a\x3a\xbe\xb2\x72\x2d\xc9\x0d\x14\xfe\x87\x83\xe2\xcd\xeb\x9b\xb0\x46\x73\xdd\xf5\xf1\x77\xaa\x95\x7a\x50\x36\xd6\xa6\x2a\x19\x3b\x23\x07\x12\x3b\x4f\xde\xbe\x2a\xc0\x5b\x15\x3f\xe8\xf7\x78\x7c\x41\xa3\xa9\x9e\x4a\x26\xae\x5f\xde\x2c\x96\xa9\xab\x73\xe1\xdf\x81\xbe\x5b\xa4\xee\xd8\x4a\x5a\xcb\x55\x93\xdd\x83\x48\xfa\x8b\x67\x29\x1a\xb4\xf9\x00\xf0\x24\x41\x6b\xe4\x49\x35\xff\x14\x30\x5a\x8a\x11\xfd\xb0\x20\x53\xa4\x76\x6f\x42\xc2\xcd\x07\xda\x3c\x3e\x21\x7f\x02\x00\x00\xff\xff\x53\x21\xa1\x14\xe8\x05\x00\x00")

func api_js_bytes() ([]byte, error) {
	return bindata_read(
		_api_js,
		"api.js",
	)
}

func api_js() (*asset, error) {
	bytes, err := api_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "api.js", size: 1512, mode: os.FileMode(420), modTime: time.Unix(1428553272, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _api_ts = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x53\xcd\x6e\xdb\x3c\x10\xbc\xeb\x29\x16\x3c\x49\x88\x62\x27\xf8\x6e\xfa\xd0\x02\x85\x93\xd4\x6d\xdd\x26\x48\x53\x20\x80\xe1\x03\x6b\xad\x6d\xa2\x32\xa9\x90\x94\x5d\x23\xd0\xbb\x77\x45\x52\x96\x7f\xe2\x36\x3d\xf6\x92\x58\xcb\xd9\xd9\x99\xe1\x52\x48\x8b\x7a\xc6\xa7\x08\x57\x4a\xe2\x4d\x25\xa7\xf0\x1c\x01\xc4\x1a\x4d\xa9\xa4\xc1\x0c\x6e\xb5\x98\x0b\x99\x64\xb0\x52\x22\xff\x3f\xaa\xa3\xa8\xeb\x19\x09\x63\x7f\xdf\x37\x9e\xbc\xdc\x79\xc3\x45\xd1\x75\xa1\xd6\x4a\x67\xae\x78\x1a\xee\xa0\x4b\x34\x86\xcf\x89\xde\x58\x2d\xe4\xfc\x00\x76\x2d\xf3\x52\xd1\xa7\x83\x02\xfc\xc0\x4d\x07\x6c\x0a\x95\x2e\x4e\x74\x7a\xb5\xa1\x4f\xf2\x25\xee\x37\x62\x20\x36\xd9\x76\xc6\x78\xb2\x7f\xf4\xe9\x70\x58\x7b\xf0\xed\x7e\xb4\x37\x74\x5a\x70\x63\xe0\x4e\xab\x9f\x9b\x41\x21\x30\xa8\x2d\xb5\x58\x71\x8b\x60\xa8\x2d\x5e\xa2\x5d\xa8\xbc\xed\x4a\xa1\xe4\x76\xd1\x7d\x7d\x57\x39\x8d\xe2\x72\x43\x59\x3d\x7e\x1e\x0d\xad\x2d\xef\xf1\xa9\x42\xd3\xfa\x5e\x71\x0d\x1a\x9f\xe0\x0d\x48\x5c\x1f\x40\xe2\x64\x0b\xa1\x34\x08\xb2\x16\x32\x57\xeb\x31\x23\x21\x7a\xe3\x04\xb3\xc9\x59\x33\xd0\xe1\x88\xa6\xa7\x4a\x94\x41\x52\xda\x34\xa5\x60\x75\x85\xc9\xf6\xdc\xa0\x0d\xe4\x43\xe4\x39\xea\x98\x3d\x9e\x3b\x7b\xe7\x03\x45\xa4\xaa\x60\x29\xb0\x4b\xe6\x1b\xc4\x0c\xe2\xc6\x40\x12\xb4\xb6\x14\xe4\xda\x95\x5d\xb1\x06\x2c\x0c\x1e\x23\xc2\x69\x98\x6c\x2b\x2d\x9b\xb3\xc8\x97\xda\x04\xa9\xf2\xda\x00\x53\xc8\x69\x7b\xb3\xed\xee\xa7\x30\xa3\x45\xcb\xb6\xdb\x99\x1c\x05\x6a\x17\xc2\xf4\x76\xee\xc8\x53\x7b\xca\x2e\x11\x25\x0b\xc5\x73\x82\xcf\x88\xc4\x0a\x25\x63\xec\xfc\x36\x09\x38\x47\x96\xdb\xca\x40\x1f\x2e\x2f\x2e\xe0\x2d\xfc\xd7\x21\xc0\xc9\x88\x3f\x7e\xbd\xfd\xd2\x2b\xb9\x36\xe8\xf0\xed\xd3\x4a\x92\x00\xab\xc3\xff\xc6\xc3\x1f\xc0\xb5\xcb\x88\xfe\x14\xf4\x62\xfd\xae\x9b\xd8\x7b\xdf\x7d\xc3\x47\xfe\x4f\xdb\x67\xef\xaf\x1f\x9a\x7b\xed\x2b\xcf\x46\xbf\x65\x55\x14\xff\x42\x06\x55\x99\xd3\x9e\xf8\x14\x62\x2f\xff\xc3\x55\xb7\x1d\x2f\x3c\xe8\xd7\xee\x89\x8b\xa7\xd9\x3f\x76\xf7\xee\x61\x30\xdc\xcd\xa7\xcf\xce\xda\x51\x29\x38\xa1\x9e\x5a\xcc\x36\xf1\x33\xb0\x9d\xa1\x2c\xdb\x95\x00\x75\xe2\xa7\xfb\x99\x49\x6b\x62\x8e\xf6\xa4\x83\xbf\x15\x7b\x70\x95\x7b\x52\x9b\x4b\x3d\x16\x50\x47\xbf\x02\x00\x00\xff\xff\x86\xf6\x4a\xa8\x39\x06\x00\x00")

func api_ts_bytes() ([]byte, error) {
	return bindata_read(
		_api_ts,
		"api.ts",
	)
}

func api_ts() (*asset, error) {
	bytes, err := api_ts_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "api.ts", size: 1593, mode: os.FileMode(420), modTime: time.Unix(1428553272, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _button_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x55\x3d\x6f\x1c\x21\x10\xed\x23\xe5\x3f\x90\x2d\x2c\x4e\x72\xb6\x88\xa2\x34\xa7\x34\x8e\xdd\x45\x4e\x91\x74\x49\x0a\x0c\x63\x1f\xf2\x1e\xac\x80\xbd\xd8\xb2\xf6\xbf\x67\x80\xdb\x0f\x96\xe5\x72\x56\x68\x8e\x83\x79\xf3\x1e\xf3\xb5\x07\x66\xc8\x55\xe7\x9c\x56\xe4\x33\xa1\xf7\x9d\xe2\x4e\xe2\x9e\x6e\xc8\xcb\xdb\x37\x04\xd7\x78\x14\xad\xa6\x0b\xbf\xdc\x4e\xda\x1a\x1a\xd8\x83\x72\x88\x17\x9a\x77\x7e\x5b\x73\x03\xcc\xc1\x4d\xbc\xa0\x95\x90\x87\x6a\xb3\x5d\x87\xd5\xbc\x61\xd6\xde\xb2\x3d\xa0\x83\x4a\xb7\xa0\xde\xdf\x05\xa6\xaa\x04\x60\x42\xdc\x1c\x70\xf3\x55\x5a\x07\x0a\x0c\xad\x78\x23\xf9\x63\x75\x19\xcd\xbc\x8b\xfa\x4e\x2a\x41\xfd\xdf\x4d\xc6\xcb\x1b\x6d\x07\x69\xaf\xd5\x3c\xc7\xa6\xc2\xc3\x4d\x49\x79\x02\x63\x2d\x0a\x14\x5f\x76\xb2\x11\x74\x41\xfe\x03\x9e\xdc\xad\x16\x40\xab\x5f\xdd\x87\x4f\xd7\x1f\xab\xd3\xea\xff\x15\x89\x60\x7b\x2a\x14\xb0\x22\x29\x63\xc9\x50\x42\xda\x96\x39\xbe\x03\x83\x0f\x57\xf0\x87\x04\x0d\xd7\xe3\x29\xcd\x10\xd6\x31\xd7\x59\xb0\x68\xff\xd2\x1f\x2f\xfb\xf8\x13\xab\xaa\x6e\x8d\x76\xda\x3d\xb7\x90\xbd\x09\x31\x53\x55\x3e\xc2\xf3\x25\x69\x8e\x37\x58\x89\x4b\x41\x79\x44\x52\xc4\x96\x0c\xf4\x19\xef\xe0\x24\xc0\x73\x52\x66\x1e\xd6\xf8\x12\xd4\x64\x79\x82\xc7\xc0\x5e\x1f\xe0\x3f\x9e\xb8\xe2\xe0\xfc\x57\x5a\x70\xdf\x8c\x7c\x90\x2a\xe1\xd4\xe1\x28\xe9\x6c\x3f\x17\x62\xda\xae\xf4\x13\x1a\x27\x79\xfc\x19\x01\xb5\xc2\xe2\xff\x3d\x4b\xb6\xbc\x27\xf4\xdd\x88\x4a\xfc\xf9\x35\xf7\xe7\xeb\xe6\xfb\xf0\x7f\x10\xb0\x2d\xd8\xd7\x6d\xe7\xe8\xbc\x62\x97\x96\x65\x75\x48\x35\xba\x99\x81\xfa\x69\x3b\xb1\x8c\xc1\x59\xe8\x29\x46\x93\x37\xc0\x4c\x84\xd8\x24\xa0\xe3\xd3\x8b\x50\x3f\xa5\x12\x08\xe4\x83\x35\x2d\xae\x30\x1b\xb1\xb5\xe1\x0c\x59\xd8\xbd\xaf\x74\x1e\x30\x67\x79\xc7\x5c\x24\xbe\x5b\x66\x7c\x46\xe6\x04\xf1\x28\x1f\x2b\x8b\xec\x95\x7b\x11\x0d\x1d\xac\x47\x74\xa8\xb3\xe4\xd3\x73\x71\x91\x0e\xb4\x28\xc0\x8f\xd2\xac\x08\x0b\x76\xc7\xb6\x2a\x8b\x9d\x55\xcd\xa0\xdb\x80\xeb\xcc\xf0\x61\xc4\xb3\x7e\x13\x46\xdf\xdf\x00\x00\x00\xff\xff\x72\xf7\x97\xf0\x53\x07\x00\x00")

func button_js_bytes() ([]byte, error) {
	return bindata_read(
		_button_js,
		"button.js",
	)
}

func button_js() (*asset, error) {
	bytes, err := button_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "button.js", size: 1875, mode: os.FileMode(420), modTime: time.Unix(1428555305, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _button_ts = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x54\xc1\x4e\xdc\x30\x10\xbd\xe7\x2b\xa6\x39\x20\x47\xa2\x41\xaa\xaa\x1e\x82\x7a\xa1\xac\xd4\x03\xd0\x43\xb9\x51\x0e\x26\x9e\xee\x5a\x64\xed\xc8\x76\xb6\xa0\xd5\xfe\x7b\x27\x8e\x93\x8d\x63\xa0\xad\xd4\xd3\x6e\x3c\x6f\xde\xbc\xf1\xbc\x71\xdd\x70\x6b\xe1\xa2\x73\x4e\x2b\xd8\x67\x00\xad\x91\x3b\xee\x10\xb0\xc1\x2d\x2a\x57\xc1\xd7\xdb\xeb\xab\xd5\xf0\x31\x0b\xd7\x8d\xb6\xb8\x7a\x1b\x23\xa4\x6d\xb9\xab\x37\x68\x2a\x58\xed\x28\x76\x39\x1d\xcc\x50\xd6\x71\xd7\x59\xb4\x15\xec\xe1\x4e\xf1\x2d\x56\x74\x64\xa4\x5a\xdf\x57\xf0\xdd\xc7\x2e\xf4\xd3\x39\x1c\x32\xca\xa9\xb5\xa2\x58\x57\x3b\x6d\x58\xe1\xe5\x02\xb8\x8d\xb4\x65\x50\x0b\x9f\x41\xe8\xba\xeb\xff\x96\xb5\x41\xa2\x0f\xaa\x58\x2e\xe4\x2e\x2f\x92\x84\xd2\xf7\x7f\x43\x55\x29\x35\xd7\x2d\xaa\xf7\x0f\xfe\x2e\xf2\x14\xca\x85\xf0\x5d\x5c\x49\xeb\x50\xa1\x61\x79\xdd\xc8\xfa\x31\x3f\x1d\x60\x7d\x72\xf9\x20\x95\x60\xfd\x67\x51\x64\x47\x86\xf9\x65\xfd\xbd\xc4\x79\x56\xac\xd3\x47\x52\xa1\x51\x02\x6f\x49\x8f\xf8\xb2\x91\x8d\x60\x8b\x82\xb7\xf8\xe4\x6e\xb4\x40\x96\xff\xe8\x3e\x7c\xba\xfc\x98\x17\xaf\x55\xfd\x43\xcb\x1e\x1b\xf5\x9c\x5e\xda\x4c\x46\xc2\x3f\xbf\xa3\xa3\x59\xa8\x43\x85\xbf\x96\x8e\x61\x73\xf0\xe8\x19\x82\xee\x0f\xe7\x74\xee\xdd\x91\xa8\x7d\xc4\xe7\xd1\x4c\xa7\xd0\x84\xd3\xe0\xc5\x11\x44\x36\x5a\x0a\x48\xdb\x26\xa2\x23\x41\x41\xd5\x60\x32\xb7\x07\xc6\x95\xb8\x59\x87\x22\x45\x05\x5c\x3d\xbf\x50\x21\xc9\xf6\x59\x03\xb3\xc1\xad\xde\xe1\xff\xe9\xe4\x15\xae\xb8\x19\xaa\x69\xd1\x7d\x33\x72\x2d\x15\xd3\xfe\xa7\x82\xe1\x73\x5c\xb2\x1d\x37\x61\x51\x69\x19\xe9\xd6\xa3\x29\xdc\x0d\x39\x65\xbf\xbc\xf7\x1e\x2e\x7f\x02\x7b\x37\xe1\x47\x12\x88\x28\xfa\x19\x4f\xfb\x1d\xca\x16\x4b\x5c\xd9\x76\x8e\xcd\x0d\x15\x5c\x00\x6f\x28\x20\xee\x29\xdf\x83\x0f\x59\xcc\xb9\x6c\xb6\x18\x0d\x54\x37\xc8\xcd\x10\xb2\xd3\xfb\x72\x76\x06\x4e\x0b\x5d\x05\x82\x11\xdb\xaf\x3b\xa3\xb7\xea\x5a\x93\x80\x68\xd8\xa9\xa7\x87\x29\xfb\xe7\x85\x56\x07\x67\xf5\x68\x17\xfe\x91\xc4\xe7\x44\x2c\xfd\x15\xb5\xdc\x2c\x1f\xe2\x51\xff\x10\x4a\x17\x71\xba\xd0\x40\x23\xe8\xc0\xe1\xd4\x76\x3f\xc2\xe8\x69\x3d\x39\x89\x37\x7b\xe0\xed\xdf\x91\x62\x3f\x9f\x49\x1a\x0f\x2e\x7c\xb9\xf6\x30\x9e\x43\x76\xc8\x7e\x07\x00\x00\xff\xff\xcb\x76\x02\xfc\x8b\x06\x00\x00")

func button_ts_bytes() ([]byte, error) {
	return bindata_read(
		_button_ts,
		"button.ts",
	)
}

func button_ts() (*asset, error) {
	bytes, err := button_ts_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "button.ts", size: 1675, mode: os.FileMode(420), modTime: time.Unix(1428555305, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _control_box_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x55\xcd\x6e\x1b\x21\x10\xbe\x57\xea\x3b\xa0\x3d\x44\x6b\x29\xd9\x17\xb0\x7a\x49\xea\x5b\x9b\xf6\x15\x30\x8c\xbd\x28\x18\x10\xcc\x3a\x8d\x2a\xbf\x7b\x59\xd8\x1f\x63\x76\xd7\xae\x2c\xb5\xbe\x24\x3b\xcc\x7c\x3f\x03\x0c\x47\x6a\xc9\x8b\x56\x68\xb5\x7c\xd6\xbf\xc8\x17\x52\xee\x1a\xc5\x50\x68\x45\xca\x15\xf9\xfd\xf9\x13\xf1\xbf\x21\x34\x66\x8e\x8b\xed\x0f\x6b\xe1\x2a\x90\x70\x00\x85\x1e\x83\x6b\xd6\xb4\xff\x56\xcc\x02\x45\xd8\xc4\x85\xb2\xe0\xe2\x58\xac\xd6\xd3\x65\x15\x93\xd4\xb9\x57\x7a\x00\x0f\x50\xb0\x48\xf4\xb4\xf5\x9a\x6a\xc1\xe1\x49\x5b\xb1\x17\xca\x15\x97\xd5\x5d\x3c\x6a\x57\xf0\x4e\x7e\x0c\x81\x32\xa3\x1a\x93\x2b\xca\xf9\xe6\xe8\x69\xbf\x09\x87\xa0\xc0\x96\x85\xf3\x42\x18\x6e\x14\x37\x5a\x28\x2c\x1e\x63\x49\x1a\xad\xb6\x42\xf1\xb2\x5d\x58\x2d\x81\x9b\x06\xcb\x73\x6f\x59\xee\xb6\x41\xf4\xed\x8c\x8a\x9f\xc3\x47\xae\x36\x26\xdd\x0a\x36\xe1\x48\x1b\x50\x83\x8f\x5a\xbf\x7f\x07\xd5\x2c\x39\xe8\x77\x22\x47\x62\x52\xb0\xb7\x1e\xaa\xdd\x8f\x6b\x50\xb3\x9a\x98\xd4\x0e\x7a\xa4\xf0\xb1\x04\xc3\x85\x33\x14\x59\x0d\xb6\xeb\x55\x40\xfb\x3a\x44\x87\xa6\x9d\xe2\x9f\xf1\x7c\x56\xc6\x6a\xd4\xf8\x61\x20\x13\xe1\xa1\xc6\x33\xfe\x06\x1f\x8f\x44\x76\x2b\xfe\x4c\x5f\xf2\xe6\x16\xd2\x8a\x35\x39\xad\x17\xb8\x7b\xa0\x00\x91\x13\x53\xbb\x9f\xe2\x4c\xaa\xc6\xcc\x2b\x5c\x16\x0e\xfa\x08\x77\x58\x9d\x00\xf8\x3b\xb7\x0e\x30\x5e\xbf\x84\x37\x5e\x8c\x7c\x5e\x9c\x5d\x98\xa1\xb0\x4f\x9e\x39\x4f\x73\x79\x8b\xaa\x98\x04\x6a\xbb\xb1\x90\x08\x5b\x94\x14\xaa\xca\x9b\x08\xd2\x19\x91\x50\x40\xce\x91\x6e\x6e\x3e\x76\xe0\x36\xce\xee\x3e\x5f\x63\xbb\x3a\x5d\x5b\xa0\xa9\xe9\x0a\x9e\x0c\xc2\x6d\x83\x1d\x6d\x24\x26\xf3\xc9\xf3\xa3\x36\x3f\xad\x36\x74\x4f\x5b\xee\x64\xd5\x02\x36\x56\x91\x1d\x95\x0e\x6e\xdb\x20\x3f\x06\xee\x36\x12\x50\xf8\x7f\xb2\xd0\xcf\xc4\xbb\x5d\xcc\x3d\x76\xff\xd0\x8b\x7f\x70\x12\x1b\x86\xda\xf6\xd9\x39\xf7\x12\x43\x15\x35\xfe\x85\xe1\x2f\xb5\x90\x7c\xf2\x89\x5a\x1e\x8d\x3e\x19\x61\xfe\x42\x8a\x1d\x49\x40\xc9\xc3\x43\xda\xc3\x28\xe2\x55\xf3\xb4\xcf\x59\xaf\xc7\xbc\x6e\xc2\xcd\x0b\x0e\xa2\x53\xed\x5d\xf7\x46\x0b\x3e\x7e\x5a\x85\x06\xff\x09\x00\x00\xff\xff\xe8\x7c\x24\x76\x3c\x09\x00\x00")

func control_box_js_bytes() ([]byte, error) {
	return bindata_read(
		_control_box_js,
		"control_box.js",
	)
}

func control_box_js() (*asset, error) {
	bytes, err := control_box_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "control_box.js", size: 2364, mode: os.FileMode(420), modTime: time.Unix(1428554806, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _control_box_ts = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x55\xcd\x6e\xdb\x30\x0c\xbe\xe7\x29\x08\x1f\x0a\x1b\x68\xfd\x00\x06\x76\x69\x17\x60\x87\xa6\xdb\x61\x2f\xa0\x48\x4c\x22\xd4\x91\x04\x49\x4e\x57\x04\x79\xf7\xe9\xcf\x3f\x8a\x1d\x60\x43\x73\xb2\x2d\x92\x1f\x3f\x52\xfc\x68\xda\x12\x63\xe0\x45\x0a\xab\x65\xfb\x2c\xff\xc0\x79\x05\xa0\x34\x3f\x11\x8b\x80\x2d\x1e\x51\xd8\x06\x7e\xfc\xde\xbc\xae\xe3\xc7\x6a\x62\xdf\x76\xd6\x4a\xd1\xc0\x73\x78\x4e\x0c\x52\xf3\x3d\x17\xc6\xe1\x35\xf0\x73\x78\x9f\x86\x32\x6e\x14\xb1\xf4\x80\xba\x81\xf5\xc9\xe1\x7e\x1f\x0e\xbc\x1b\x95\xc2\x58\xdd\x51\x2b\x75\x59\x79\x4a\x00\xf6\xc0\x4d\x9d\x18\xc1\x37\x60\x92\x76\xfe\xb5\xa6\x1a\x1d\x60\x62\x57\x16\x8c\x9f\x8a\x6a\x16\x50\x87\x3a\xdf\xc8\x11\x5d\x68\x41\x63\xb9\x4f\x5b\x57\xef\x81\x33\x7c\x4a\x7c\x8b\xd5\x18\x38\x96\xe0\x22\x04\x7e\x4c\xea\x28\xab\x25\xb7\x9a\x30\x16\x2a\x79\xe5\xc6\xa2\x40\x5d\x16\xc6\x65\xa7\x76\x2d\x98\x92\x5c\xd8\xe2\x31\x86\xe4\xa7\xf5\x96\x0b\x56\x7a\x43\xb5\x0c\xab\x3a\x5b\x4e\x4b\xa9\x26\x24\xe3\x05\x24\x82\xf1\x16\xa6\xe4\xa2\xf9\x1f\x10\x16\xb8\x4b\x85\x62\x60\x7c\x90\x1f\x1b\x14\xdd\x32\xd7\xbe\xc5\x73\x0c\xda\x72\xfa\xde\x83\xf8\x46\xdf\x06\xb9\xc9\x83\xb6\xd2\x60\x8f\x11\x3e\x32\x80\x11\x61\x9c\xa8\xd4\x8f\xab\xb1\x0a\x8d\xb9\xf8\x80\x59\x92\x77\xfc\x6c\xc0\xcd\x1b\x17\xfb\x47\x68\xd3\x69\x9a\xcb\xde\xa9\x82\xf3\x75\x9e\x39\x5b\x07\x34\x02\x54\x2e\x1b\x0c\x83\x1e\x1c\xf3\x4c\x44\xef\x53\x92\xaa\x01\x22\x3e\x17\x32\xcc\xa2\x43\x54\x44\xd6\x78\x94\x27\xbc\x4f\x25\x37\xb0\xf2\x62\x5c\x4e\x83\x36\xea\xa0\x8c\x13\xda\xcb\xbb\x82\xf3\xe2\xf0\x5e\xfb\xcf\x6f\x7c\xc9\x23\xa4\xa2\x2d\x12\x9d\x44\x57\xde\xc2\x0f\x4e\xe3\xcd\xe6\xd2\x2a\xb1\x6f\xef\x34\x3a\x6f\xe9\x5c\xa3\x38\xa2\xa5\xb1\xf7\x38\x1b\xd9\x19\xcc\xee\xea\x3f\x76\x8c\x07\x1a\x77\x8c\x8f\xc3\x5a\x69\x0c\xf3\x89\x3b\xd2\xb5\x36\xa9\x16\x6b\x63\xa5\xfa\xa5\xa5\x22\x7b\x62\xf9\xa0\x66\x8d\xb6\xd3\x02\x76\xa4\x35\x38\xf6\xc7\x69\xe1\xcb\xd4\x02\x0a\xbb\x1b\xa9\x5e\xe4\x5f\xe6\x95\xaf\xe5\x3b\xb1\xf3\x8b\x50\x11\x7d\xfd\x4b\x4b\x3f\x98\x68\xa9\x89\x72\x9b\x8f\xbd\x1c\x78\xcb\xae\xb6\x66\x42\x61\xee\xc0\xe2\x30\x92\x7c\x07\x99\x1f\x3c\x3c\xe4\x35\x46\xdc\x37\xc9\x30\x25\x82\x5b\xf6\x24\xc3\xe5\xdc\x10\x44\x7f\x59\x5d\x56\x7f\x03\x00\x00\xff\xff\x69\x0e\x10\x0e\xb4\x07\x00\x00")

func control_box_ts_bytes() ([]byte, error) {
	return bindata_read(
		_control_box_ts,
		"control_box.ts",
	)
}

func control_box_ts() (*asset, error) {
	bytes, err := control_box_ts_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "control_box.ts", size: 1972, mode: os.FileMode(420), modTime: time.Unix(1428554806, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _endpoint_box_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x55\xc1\x8e\xd3\x30\x10\xbd\x23\xf1\x0f\x26\x87\x95\x23\xad\xf2\x03\x15\x17\xa0\x27\xd0\x8a\x03\x37\xc4\xc1\xc4\xd3\xd6\xda\xd4\xb6\xec\x49\xd9\x15\xea\xbf\x33\xa9\x9d\x36\x53\x27\x4b\x57\x88\x5c\x1a\x79\xde\xcc\x9b\x37\x79\x9e\x1e\x54\x10\x6b\xab\xbd\x33\x16\x3f\xb8\x27\xf1\x5e\xc8\x4d\x6f\x5b\x34\xce\x0a\x59\x8b\xdf\x6f\xdf\x08\x7a\xce\x47\x13\xa8\x84\xfc\x7e\x46\x0d\x0f\xee\x4c\x6c\xa0\x83\x3d\x58\xa4\x62\xda\xb5\xfd\xf0\xda\xb4\x01\x14\xc2\x3a\x05\x64\x85\xa1\xaa\x57\xf3\x59\x4d\xdb\xa9\x18\x1f\xd4\x1e\x28\xbf\x1a\x49\xaa\x6b\xf4\x23\x3c\xa7\x7e\x17\x29\x74\x49\x91\x92\x38\x03\x9d\x2d\x14\x6f\x94\xd6\xeb\x03\x15\xfb\x62\x22\x82\x85\x20\xab\xb6\x33\xed\x63\x75\x9f\x50\x91\x3a\x6e\xb1\xf9\x69\xac\x96\xc3\x41\xbd\x28\x49\x79\x4f\x42\x3e\xee\x4c\x97\x90\x99\xa0\xc0\xf7\xa1\x7b\xbd\xa8\x94\xc4\x45\xd1\x59\x21\x2a\xe3\xfe\x9f\xa8\x44\x50\xe0\xb5\x89\x5e\x61\xbb\x83\x40\x9d\x59\xf8\x25\x4e\xf4\x9f\xce\xa7\xb2\xc8\x88\x80\xa3\xd1\x2e\x2e\xcb\xa0\x63\xfa\x99\x18\xb1\xf1\xc1\xa1\xc3\x67\x0f\x85\x36\x22\xbc\xb8\x99\x66\x7e\x2f\xba\x1c\x21\xd3\x5e\x77\x57\x4e\x86\x67\xac\xc4\x71\xf5\x12\xf9\x58\xe9\x54\xa3\x64\x56\x61\x3b\x47\xca\xb2\x2e\xc8\xbf\x91\x05\xd8\xbb\x03\xfc\x83\xd8\x99\x02\xaf\xd4\x3b\xf9\x4a\x8c\x7a\x76\x2f\x98\x8d\x90\xef\x66\x23\xc3\x13\x00\xfb\x60\x27\x36\x38\xce\x5f\x48\x63\xa9\xb1\x6f\xf0\x34\x10\x8e\xc5\x86\xd8\x82\xd5\x67\xe1\x14\x2b\x1c\x7d\x91\x31\xbe\x8e\x6e\x7b\x71\x02\xdb\x85\x09\x30\x7d\x49\x1b\x27\xba\xa9\x7a\xba\x89\x7c\xb4\xac\x32\x7c\x3f\xaf\xc7\xcf\xb4\xc4\x7e\x10\x94\xb1\xcc\x4d\x86\xdb\xad\x4a\x1c\x74\xf7\x61\x7a\x09\x81\xba\x80\xd3\x25\x85\x8d\xea\x3b\x94\x3c\x18\xd1\xf9\xaf\xc1\x79\xb5\x55\x43\x5b\x2c\x9a\xd5\x6e\x54\x17\xe1\x26\x95\xbe\xe7\x12\xbd\x0a\x70\xe5\x90\x74\x54\xee\x9b\xbc\x88\xea\x9b\x78\x34\xa1\x11\x96\x3f\xd3\x60\x50\xf6\xe7\x75\x77\xc7\xd7\x5d\xea\xe2\xc1\x69\x28\xec\xbb\x80\xcb\x77\x6c\xb9\xe3\x89\xd3\xc7\xe6\xf3\xfc\x26\x1a\x28\x70\xac\x4f\x33\xfe\x13\x00\x00\xff\xff\x27\x17\xac\x9d\xac\x07\x00\x00")

func endpoint_box_js_bytes() ([]byte, error) {
	return bindata_read(
		_endpoint_box_js,
		"endpoint_box.js",
	)
}

func endpoint_box_js() (*asset, error) {
	bytes, err := endpoint_box_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "endpoint_box.js", size: 1964, mode: os.FileMode(420), modTime: time.Unix(1428552595, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _endpoint_box_ts = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x54\xc1\x6e\xdb\x30\x0c\xbd\xfb\x2b\x38\x1f\x0a\x1b\x28\xfc\x01\x06\x76\xd9\x56\x60\xc0\xda\x62\x87\xde\x86\x1d\x34\x9b\x49\x84\x3a\x92\x20\xc9\x59\x8b\x20\xff\x3e\xda\x92\x1c\x29\x72\x82\x1d\xb6\x5b\x42\x3e\x3e\x3e\x9a\x8f\xea\x06\x66\x0c\x3c\x88\x5e\x49\x2e\xec\x27\xf9\x06\xc7\x02\x40\x69\x7e\x60\x16\x01\x07\xdc\xa3\xb0\x2d\x7c\x7d\x79\x7a\x7c\x70\x7f\xa2\xb4\x60\x7b\xa4\x92\x6b\xe9\x57\x7c\xbf\x91\x1d\xf5\x70\x23\x8b\x5e\x51\xbb\x68\x2b\xa2\x6c\xcf\x8d\x62\xb6\xdb\xa1\xa6\xfc\x81\x2a\xbf\x2c\x81\x09\xd6\x49\x61\xac\x1e\x3b\x2b\x75\x95\x13\xd5\xd3\x84\x00\x76\xc7\x4d\xe3\x07\x84\x8f\xd0\xcb\x6e\x9c\x7e\x36\x9d\x46\x6a\xe1\x15\x55\xa5\xd5\x65\x9d\xe1\x9b\xf9\xb3\x3d\xd3\xf8\x54\x59\x86\x16\x65\x71\x06\xba\xd9\x6f\xf1\xf6\x31\xaf\x83\xa7\xb4\x14\x2b\x33\x04\xeb\xfb\x79\xe0\x47\x6e\x2c\x0a\xd4\x55\xd9\x0d\xbc\x7b\x2d\xef\x1d\xca\x90\xc0\xce\x36\xbf\xb8\xe8\xab\x29\x50\xaf\x68\x67\x4a\x91\xe2\xcf\x3b\x3e\x38\x8c\xa7\xae\x23\xf5\x6e\x37\x7f\xad\xde\xc1\x53\xf5\x14\x2b\x33\xc4\xff\x50\xef\xa8\x63\xf5\x67\x77\x90\x10\x81\xbf\x2f\x2d\x52\xc5\x60\x83\x36\x18\x63\xf1\xca\xd4\xf6\x34\x61\x32\xbd\xf4\xa9\x5a\x20\x6f\x71\xb1\xbd\x87\xc1\x47\xbd\x07\x03\xa8\x86\xe3\xa5\x8e\x7c\x70\x22\x3a\x13\xd4\xd4\x0d\x16\x53\xcf\xc0\xb4\x13\xd3\x5b\xdf\xa4\x6e\x81\x89\xf7\x95\x0e\x59\xf5\x5c\xe5\x98\x35\xee\xe5\x01\xff\xcd\x24\x57\xb8\xd2\x61\xa8\xe7\xda\x77\x8d\x6e\x10\xdc\x11\xf2\x0d\x54\x1f\xf0\x22\x38\x09\xb6\xa3\x16\xf3\x9f\x53\x76\x54\x0d\x17\xd4\xe6\x05\xdf\xa6\xb3\x0d\xb5\x53\x2e\xb3\xdb\x2a\x90\x72\x11\x65\x08\x47\x88\xb0\xfc\x6d\x34\x41\x7d\x96\xee\x45\x3a\x89\x29\x49\xa8\x74\x3e\xae\xb0\x85\x27\x39\x1a\x4c\x16\x37\x17\xe3\x8f\xe5\xd1\xf8\x46\x57\xfe\x93\xba\x27\x44\xe9\x34\xe9\x6a\x4b\xc7\x4e\x37\x83\xde\xc7\xd8\x28\x8d\xb3\xc5\x71\xc3\xc6\x81\xd4\xfa\xb0\xb1\x52\x7d\xd7\x52\xb1\x2d\xb3\x5c\x0a\x1f\xf7\xca\x37\x6c\x30\x18\x14\xab\xd1\x56\x8a\xe9\xcb\xb7\xde\x3f\x95\x2e\x93\x9f\x9e\xbf\xc9\xe5\x5c\x7a\x0a\x58\xac\xe2\xe5\x26\xaf\xec\xdd\x5d\x7a\xcb\x8e\xf7\x59\xf6\x58\x87\xcd\x5f\xc9\x7b\xdb\xad\xf7\x86\xd9\xe4\xa7\xe2\x54\xfc\x09\x00\x00\xff\xff\x67\xc5\x91\xb4\xce\x06\x00\x00")

func endpoint_box_ts_bytes() ([]byte, error) {
	return bindata_read(
		_endpoint_box_ts,
		"endpoint_box.ts",
	)
}

func endpoint_box_ts() (*asset, error) {
	bytes, err := endpoint_box_ts_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "endpoint_box.ts", size: 1742, mode: os.FileMode(420), modTime: time.Unix(1428552595, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _endpoints_box_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x55\x4d\x6f\xdc\x20\x10\xbd\x57\xea\x7f\xa0\x3e\x44\x5e\x29\xe5\x0f\xac\x7a\x69\xbb\xb7\x2a\xea\xbd\xea\x81\x98\x71\x16\x95\x05\x04\xe3\x6d\xa3\xc8\xff\xbd\x83\xbd\xc4\xe0\x8f\xdd\x54\xf5\x25\x84\x61\xde\x7b\x33\xf3\x60\xcf\xc2\xb3\x83\x91\xce\x2a\x83\xe1\xb3\xfd\xc3\x3e\xb1\xba\xed\x4c\x83\xca\x1a\x56\xef\xd8\xcb\xfb\x77\x8c\xbe\xd7\xad\xfc\xec\x14\x8e\x1f\x1e\x55\xe0\xa0\xe1\x04\x06\x09\x45\xda\xa6\x8b\x4b\xde\x78\x10\x08\x87\x31\x50\x57\x28\x1e\x35\x54\xbb\xfd\x7a\x22\x6f\xb4\x08\xe1\x41\x9c\x80\x20\x2a\xad\x02\x7e\x84\xc4\x58\xcd\x73\xa4\x0a\x4e\x60\x73\x04\x4f\x87\x0d\xfc\x66\x87\x33\x41\x7c\x7d\xdd\xad\x97\x2c\x09\x8b\x12\x5e\xfa\x4b\xb4\x1f\xff\xe4\x95\x71\xe7\x2d\x5a\x7c\x76\xc0\x85\x94\x03\xec\x37\xd2\x02\x66\xa0\x9a\xfa\xf3\x0b\x9e\xef\x99\xbe\x44\xa8\x1b\x73\x5d\x8b\xec\x59\xc6\x9e\x25\x11\x1b\xec\x09\x6a\x00\x59\x52\x0b\xff\xb4\xc6\x5a\x64\x4d\x27\x6f\xb2\x79\x38\xd9\x33\xfc\x47\xb9\x2b\x00\xff\x5a\x71\x00\x4c\x91\x82\x3b\x8d\xae\xf0\x5c\x74\x6f\x0a\x8c\xe6\x2d\xc7\xfc\x23\xad\x38\xa9\xf8\x99\xb9\x41\xb5\xac\xfe\x90\x65\x16\xa8\xf1\x2b\x51\x07\x73\x4d\x3b\x93\x98\xfd\x66\x16\x77\x1d\xd6\xb9\xb5\xaf\x9d\x5d\xd8\xa4\x0a\x94\xd5\x60\x75\x3f\x16\x34\xfe\xc7\x1f\x95\x91\x03\xe6\x6e\x0e\x76\xad\x6c\xd2\x9f\x71\x65\x89\xfd\xb4\xcc\xc5\x64\x13\x58\x14\x7a\x73\x78\x51\x67\x39\xb7\xe5\x23\x51\xda\x73\x2a\x15\xf2\xaa\x80\x60\x61\xb8\xcf\xd0\x8a\x4e\x63\x5d\x06\x03\x5a\xf7\xdd\x5b\x27\x9e\x44\xe4\x29\xa2\x1e\xb0\xf3\x86\xb5\x42\x07\x78\x9b\xee\x46\x83\x28\xad\x5e\xa8\x6e\xad\x67\x75\xf4\x1a\xb5\x93\x29\x33\xeb\xf6\xc2\x3b\xb3\x61\xc4\x19\x70\x49\x45\x22\x14\x32\xfb\x37\x3d\x4e\xd7\x85\x93\xc9\x0a\xd9\x4e\x78\x98\xdd\x91\x71\x8b\x0b\xe7\x88\xe0\xcb\x51\x69\xb9\x6a\xcb\x5b\x0f\xd1\xa0\x7f\xbb\x45\xf1\x42\x15\xbf\x00\x77\x77\xe5\xc3\x3e\xca\x78\xb0\x12\x36\xfa\xb5\x38\x77\x79\x4d\xb6\x25\x67\x4d\x4c\xea\x2f\xa3\xcf\x8b\xa0\x48\xbf\x1b\x1a\xff\x37\x00\x00\xff\xff\xd7\x5a\x3c\xe5\xec\x06\x00\x00")

func endpoints_box_js_bytes() ([]byte, error) {
	return bindata_read(
		_endpoints_box_js,
		"endpoints_box.js",
	)
}

func endpoints_box_js() (*asset, error) {
	bytes, err := endpoints_box_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "endpoints_box.js", size: 1772, mode: os.FileMode(420), modTime: time.Unix(1428552440, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _endpoints_box_ts = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x54\x3b\x6e\xdc\x30\x10\xed\x75\x8a\x89\x0a\x43\x04\x1c\x1d\x40\x86\x9b\x24\x06\x52\xd8\x46\x8a\x74\x86\x0b\x5a\x9a\xdd\x25\xa2\x25\x09\x92\xda\xc4\x58\xe8\xee\x19\xf1\xa3\xbf\x3b\x77\x12\x39\xef\x33\xc3\x47\xd6\x2d\xb7\x16\x1e\x64\xa3\x95\x90\xce\x7e\x53\xff\xe0\x9a\x01\x68\x23\x2e\xdc\x21\x60\x8b\x67\x94\xae\x82\x9f\xbf\x9f\x1e\x1f\xc2\xcf\x7c\x3b\xe1\x2a\xb8\xc2\xcb\x1f\x7c\xaf\xc0\x3a\x23\xe4\xf1\xb5\x1a\x39\x89\xf2\x0e\xfa\x6c\x86\x6a\x84\xd5\xdc\xd5\x27\x34\x54\x75\x21\xc6\x1f\xe3\xc2\x50\x56\x2b\x49\x24\x5d\xed\x94\x29\xd8\x60\x06\xc0\x9d\x84\x2d\xa3\x17\xb8\x87\x46\xd5\xdd\xf0\x59\xd6\x06\x89\x30\xfa\x2a\x72\xc7\xdf\x5a\xcc\xd9\x06\x52\xfa\x2e\x9f\xf9\x19\x09\x9c\xb7\xc2\xba\xaf\xa3\xf3\x3c\x9b\xca\x27\x63\x54\x27\xf1\xef\xda\x5d\xc1\x66\xc5\x23\x03\xd5\x5e\xfb\x3b\xda\xf0\x4d\xf2\xa6\xf1\xa8\x47\x52\x41\x49\x98\xd9\x54\x6e\xa1\x8d\xab\xb1\xf1\x54\xc4\x68\x7c\x2b\x07\xe5\x1e\xd1\x44\xc0\x48\x0d\xc6\x49\xfa\xc2\xa5\x12\x37\xc7\x28\xc2\x2a\xe0\xf2\x7d\x47\x61\x83\xf6\xa8\xc0\x6c\xf0\xac\x2e\xf8\x39\x9d\x7c\xc0\xb5\x6c\x86\x34\x2d\xba\x14\x9a\x22\x4d\x77\xca\x11\x83\x90\x85\x0b\x37\x63\xee\x86\xb8\xde\xaf\x8e\xe3\x25\x7d\x95\xa4\xf1\xea\x21\xe2\x00\xc5\x97\x19\x26\x51\xc1\x8a\xc8\x1f\xf9\xb4\x32\x9a\x60\xdb\xea\x52\x77\xae\x98\x67\x6c\xaf\x66\x73\x84\xb9\xa5\xea\xda\xe5\xb7\xc1\x73\xf8\x2b\xdf\x84\x6c\x3c\x17\x8b\xf9\x5a\x27\x6c\xd9\x12\x19\x9d\x89\x78\x40\x9f\xad\xa5\xf7\x66\xc9\x52\x46\x83\x6e\x81\x15\x3c\xa9\xce\xe2\x22\x25\xdb\xdb\x10\xe2\x31\x59\xc7\xe8\x12\x4b\x6d\xd0\x5f\x10\x3c\xf0\xae\x75\x05\x8b\xcb\xd6\x29\xfd\xcb\x28\xcd\x8f\xdc\x09\x25\xe3\xba\x41\xd7\x19\x09\x07\xde\x5a\x4c\x46\xea\x16\x39\xdd\xaa\xa8\x7a\x50\x06\x8a\xe1\x78\xa9\x4b\x10\x72\x35\x84\xe9\xd0\x56\xc3\x19\x66\x52\x36\xe4\xce\x61\x94\xea\x3f\xba\xa5\x49\x77\x38\x3c\xcd\xcd\xfa\x65\x8b\xaf\x4d\xd8\x29\xb9\xd6\x84\xfe\x7e\x12\x6d\xb3\x39\x69\xcf\x92\x34\xa3\xb1\x21\x65\x8b\x87\xea\xe6\x66\xf9\x0a\x05\xde\x67\xd5\x20\x5b\xb6\xb2\xd9\x8f\x57\x66\x5f\x3b\xf4\xd7\x67\x7d\xf6\x3f\x00\x00\xff\xff\xcb\xb6\x59\xf0\xbd\x05\x00\x00")

func endpoints_box_ts_bytes() ([]byte, error) {
	return bindata_read(
		_endpoints_box_ts,
		"endpoints_box.ts",
	)
}

func endpoints_box_ts() (*asset, error) {
	bytes, err := endpoints_box_ts_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "endpoints_box.ts", size: 1469, mode: os.FileMode(420), modTime: time.Unix(1428552440, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _event_dispatcher_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x52\xcb\x6e\x83\x30\x10\xbc\x57\xea\x3f\x6c\x6e\x46\xaa\xfc\x03\x56\x6e\xcd\xad\x7f\x10\xe5\x60\xc1\x52\xac\x52\x1b\xd9\x0b\x52\x14\xf9\xdf\x6b\x13\xc2\xc3\xa1\x41\xc2\x17\xd0\xce\x8c\x77\x66\xd7\x9d\xb4\x70\xea\x50\xd3\xa7\x72\x8d\xa4\xbc\x42\x0b\x47\x60\x65\xab\x73\x52\x46\x03\xcb\xe0\xf6\xfe\x06\xe1\x8c\xa5\x84\x3e\x31\xe2\xa1\x4a\x39\x8e\x91\xe1\xc2\x3d\x37\x2f\xee\x90\xbf\x7f\x12\x29\x6f\xac\x21\x43\xd7\x06\xb9\x2c\x8a\x1e\xfc\x52\x8e\x50\xf7\x26\x26\x0f\x3f\x78\xfd\x80\x7a\x40\x16\xed\xa2\xfd\x07\xe0\xc4\x54\x57\x25\xb0\x43\xd4\x81\xd2\x73\x4f\xd9\x42\x9d\x18\x3e\x07\xfe\x25\x34\x3e\x5f\x66\x37\xf9\xe9\x77\x6c\x14\x38\xa9\x4c\xac\xd0\x78\xd3\xba\x8a\x8d\xbe\x1f\xa3\x10\x5b\xb3\x28\x86\x62\xcf\x78\x1e\x84\xb4\xdf\x8b\x14\x31\xeb\x4a\xd2\xad\xa0\xbc\x34\xf6\x24\xf3\x6a\xb6\xeb\x3a\x88\xc0\x22\xb5\x56\x43\xcd\x62\x1f\x01\x3e\x7b\x1e\xc6\x76\x04\x8b\xbf\xa6\xc3\x3d\x1b\xdd\x99\x66\x65\x25\xbc\x54\x35\x85\xf7\xf9\x4f\x3e\x38\x1c\x47\x07\xaf\x63\x0e\x8a\x24\x6d\x00\x7d\xc6\xa2\xec\x2f\x00\x00\xff\xff\x2c\x8d\xd4\x63\x44\x03\x00\x00")

func event_dispatcher_js_bytes() ([]byte, error) {
	return bindata_read(
		_event_dispatcher_js,
		"event_dispatcher.js",
	)
}

func event_dispatcher_js() (*asset, error) {
	bytes, err := event_dispatcher_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "event_dispatcher.js", size: 836, mode: os.FileMode(420), modTime: time.Unix(1428547162, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _event_dispatcher_ts = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x92\x4d\x6e\x83\x30\x14\x84\xf7\x9c\x62\xb2\xb3\xa5\x8a\x03\x10\xd1\x55\xb3\xeb\x0d\x22\x16\x96\x79\x04\xab\xd4\x20\xdb\x20\x45\x88\xbb\xd7\x98\x1f\xe1\x34\x5d\x34\x1b\x24\x9e\x87\x99\x6f\x1e\x56\xda\x91\xa9\x84\x24\x5c\x06\xd2\xee\x53\x59\x47\x9a\x0c\xc6\x04\x60\x94\x2d\x53\x9e\x41\xe8\xfb\x39\x99\x92\x44\x36\xc2\xda\x65\xfa\xa1\x6c\x27\x9c\xac\x57\x75\x67\xd4\x20\x1c\x81\xe6\x33\x9b\x61\xc4\xf5\x8b\xee\x19\xac\x33\x4a\xdf\x8a\x2c\x0e\xb8\x16\x67\x78\x3b\x40\xb6\xda\x2b\x7a\xe9\x5a\xc3\x78\x30\x02\x5c\xad\x6c\xba\xf8\x20\xc7\x38\xf9\x61\xd0\x8a\xb2\x8c\x4c\xd8\x21\xe0\x0d\xcd\x3a\x7d\x48\xda\x4c\x07\x61\x76\x89\xfd\x45\x13\x24\xaa\x02\x3b\xcd\xa6\x50\xfa\x08\xc1\x37\x8f\x08\x6d\xae\x57\x78\xbe\xf5\xe3\x29\x3c\xf7\x04\x7f\xf0\xa8\x8d\x05\x69\xd7\xdb\x9a\x6d\xaf\x7c\xeb\x58\xae\x5b\x0d\x7c\x71\x41\x61\x6e\xd1\x0f\x19\x77\xe8\x27\xc8\x7f\x12\xa7\x55\x6b\x2e\x42\xfa\x68\xe4\xef\x68\x98\x77\xe5\x7c\x6f\x10\x18\x0c\x7d\xb7\x03\xbd\xbe\xea\xff\x22\x3d\xd9\x55\x5a\xa9\xc6\xdf\xcc\x05\x72\xf4\x44\xae\x37\x1a\x0d\x4e\xf9\x1e\x8e\xe9\x88\x3d\x25\x3f\x01\x00\x00\xff\xff\xad\xc7\x35\xdf\xcb\x02\x00\x00")

func event_dispatcher_ts_bytes() ([]byte, error) {
	return bindata_read(
		_event_dispatcher_ts,
		"event_dispatcher.ts",
	)
}

func event_dispatcher_ts() (*asset, error) {
	bytes, err := event_dispatcher_ts_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "event_dispatcher.ts", size: 715, mode: os.FileMode(420), modTime: time.Unix(1428547162, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _init_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x91\xcf\x6e\xc2\x30\x0c\xc6\xef\x93\xf6\x0e\x56\x2f\x04\x09\xf5\x05\xd0\x2e\x43\x9c\x36\x6d\xbb\x23\x0e\xa1\x31\x53\xb4\x60\x57\x4e\x0a\xad\xa6\xbd\xfb\x92\x52\xfa\x67\xc0\x72\x40\xc6\xf9\xf9\xf3\xf7\xa5\x27\x4b\x86\x4f\xb9\x36\x66\x7d\x44\x0a\xaf\xd6\x07\x24\x14\x35\x73\xac\xcd\x6c\x01\xfb\x8a\x8a\x60\x99\x40\xe1\x1c\xbe\x1f\x1f\x20\x9e\xa3\x16\x28\x85\xeb\x66\xe5\x6c\x9c\x81\x27\x20\x3c\xc1\xc7\xd0\x51\xf3\xe5\x40\xee\xb8\xee\x88\x15\x53\x10\x76\xcf\x5c\xf7\x40\xbc\xbc\xde\x9d\x79\x74\x58\x84\x35\x99\x92\x2d\x85\xec\xb6\x8b\x74\x46\x2e\xf2\xaa\x34\x3a\xe0\xbb\xd8\x4f\x4b\x0a\x37\x19\xb7\xd5\x9b\x3e\x60\xb6\x5d\x40\x6c\x60\xa7\xf7\x82\x4d\xea\x0c\x9a\x67\x72\x22\x7c\xf1\xe6\x31\x74\x8a\x1d\xb4\x9c\x32\x8e\x0b\x9d\x44\x72\xc1\xf4\x60\x2a\x48\x85\x63\xe6\x67\xe2\x5d\xe4\x6a\x49\xc1\xe4\xd9\x61\x1e\xef\x58\x5a\x62\x3c\x7d\xf9\xd3\x17\xe3\xc0\x2e\xbe\xd7\xd9\x9c\x57\x7f\xc3\xf8\xc9\xa2\x3d\x0b\xa8\xf4\x2d\xbe\xb0\x01\x4b\x70\x8b\xb9\x97\xd8\x6f\xe2\xd0\x76\xe2\x6a\x28\xd3\x40\x59\x05\x65\xb8\xa8\x0e\xc9\xd3\x8e\x4d\xd3\x9b\xfe\x2f\xfb\xdd\xdc\x6d\xd4\xf6\xe7\x37\x00\x00\xff\xff\xca\x06\x47\x25\x9b\x02\x00\x00")

func init_js_bytes() ([]byte, error) {
	return bindata_read(
		_init_js,
		"init.js",
	)
}

func init_js() (*asset, error) {
	bytes, err := init_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "init.js", size: 667, mode: os.FileMode(420), modTime: time.Unix(1428553344, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _init_ts = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x91\xc1\x6e\xc2\x30\x0c\x86\xef\x3c\x85\xd5\x0b\x89\x84\xfa\x00\x93\xd8\x61\x88\xd3\xa6\x6d\x77\xc4\x21\x34\x66\x8a\x16\xec\x2a\x49\x81\x0a\xf1\xee\x4b\x9a\x00\xdd\xd8\x76\xaa\xea\xff\xb7\x7f\x7f\xce\xc1\x90\xe6\x43\xad\xb4\x5e\xee\x91\xc2\x8b\xf1\x01\x09\x9d\x98\x5a\x56\x7a\x3a\x83\x6d\x47\x4d\x30\x4c\x02\xe5\x69\x02\xb0\x57\x0e\x5a\xc7\xc7\x7e\x61\x4d\xb4\xc3\x1c\x08\x0f\xf0\x7e\xab\x08\x39\x29\xb6\x0d\x1f\x8b\xbc\x60\x0a\x8e\xed\x13\x1f\xa3\x0a\x49\xb8\xcf\xab\x3c\x5a\x6c\xc2\x92\x74\xcb\x86\x42\x35\x03\x84\xf9\x23\xa4\x4c\x18\x27\xd6\x5d\xab\x55\xc0\x37\x67\x3e\x0c\x89\x41\x05\xc0\x55\xc5\x43\xe1\x55\xed\xb0\x5a\xcf\x6e\x65\x2c\xf3\x9e\xb1\xbf\xd5\xaf\x4c\xb9\xe9\x01\xf2\x34\x79\x2a\x7a\x5e\xd1\x63\x28\x29\xd9\x26\xaf\xaa\xe5\x46\xa5\xfe\xda\x61\xba\x92\x08\xae\xc3\x8b\x7a\xbe\x0b\x41\xe7\x46\x93\x1b\x26\xcf\x16\xeb\x58\x65\x37\x68\x97\xc6\xe1\x9b\xfe\xce\xc3\x09\xc7\xcc\x36\x5e\x29\xef\xe2\x33\xf2\x0f\x02\x7f\x41\x58\xad\xaf\x51\x5b\x76\x20\xd2\x3b\x7c\x62\x0f\x86\xa0\x38\x25\xfc\x4f\xe9\x57\xd1\xbf\xfe\xbe\x54\x76\xb6\x5d\x10\x9a\x9b\x6e\x97\x36\xda\xb0\xee\xb3\xa9\x00\xff\x8a\xfb\x07\x6c\x9a\x2a\x27\x11\xf3\x2b\x00\x00\xff\xff\x48\xc0\x6f\xb7\x7d\x02\x00\x00")

func init_ts_bytes() ([]byte, error) {
	return bindata_read(
		_init_ts,
		"init.ts",
	)
}

func init_ts() (*asset, error) {
	bytes, err := init_ts_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "init.ts", size: 637, mode: os.FileMode(420), modTime: time.Unix(1428553344, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _layout_css = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x56\xc9\x6e\xdb\x3c\x10\xbe\xfb\x29\x88\x9c\xfe\xbf\x08\x05\xc9\x88\xd2\x44\x06\x7a\xe8\x73\xf4\x42\x89\x94\x45\x84\x26\x05\x92\x8a\x95\x14\x7d\xf7\x72\xd1\xbe\x78\x69\xbc\xc0\x02\x39\xe2\xcc\x7c\xdf\x6c\x74\x90\x09\xae\xa5\x60\x30\x15\x35\xf8\xbd\x01\xa0\x14\x8a\x6a\x2a\x78\x02\x72\x5a\x13\xbc\x33\xa2\xdc\x1c\x81\x8a\x7e\x92\x04\x6c\xc3\x52\x5b\xd1\x27\xa4\x1c\x93\x3a\x01\xaf\xfe\x63\x65\x9a\xd4\x1a\x22\x46\xf7\x46\x97\x91\x5c\x77\xaa\x39\x3a\x50\xf6\x91\x80\x77\x22\x31\xe2\xc8\xca\x31\x55\x25\x43\x46\x96\x32\x91\xbd\x59\x89\x28\x51\x46\xb5\x91\x84\xc1\xf7\xdd\xe6\xcf\x66\x33\x44\x16\x14\x14\x13\x28\x24\xdd\x53\xae\x1c\xcc\x54\x68\x2d\x0e\x0e\x50\x6d\xd5\xad\xc3\x76\x37\x55\x56\x85\x38\x8e\x94\xb5\x28\x8d\x9f\x5e\xcd\x2d\xcd\xfb\xa2\x5d\xb7\xd6\xfd\x06\x65\x6f\x7b\x29\x2a\x8e\x61\x26\x98\x90\x16\x34\xb2\xa0\xa7\x7e\x32\x26\x14\xc1\xce\x43\xc7\x8f\x0b\x4e\x66\x27\xc1\x0f\x10\x30\xaa\xf4\x84\x91\xc4\x44\x42\x89\x30\xad\x94\xa1\xe2\x79\xcd\x9d\x1f\x0b\xaa\xc9\xae\x57\x30\x62\x86\x4a\x65\x92\xd3\xae\xec\xcb\x12\x61\x4c\xf9\x3e\x01\xb1\xb7\xb3\x90\xd6\x6b\x42\x38\x8a\xff\x12\xfa\xf3\x84\x45\x49\x38\x4c\x2b\xe3\x93\x37\x7c\x6b\xa8\x0a\x84\xc5\x31\x01\x51\x59\xbb\x9f\x21\x0d\xe4\x3e\x45\xff\x85\x8f\xee\x1b\xc4\xff\x9f\x09\x42\x56\x49\x65\x05\xa5\xa0\x5c\x13\xb9\xdb\xac\x44\x72\x18\x92\x67\xcf\x77\x5e\x83\x8c\x72\x02\x0b\xe2\x0b\xa1\x0d\xcb\xb8\xfa\xe7\xb1\x99\x72\x33\x5b\xa5\x91\xae\x7c\x5c\x3a\xa7\xab\xf9\x94\x3e\x1b\x53\x62\xce\xed\xb1\xc1\xf2\x1a\x86\x13\x28\x51\x9b\xb4\x21\xe4\x28\xbe\x06\x5f\x60\x68\x23\xe6\x50\x36\xce\x31\x92\x06\x1c\xfa\x38\x13\xf3\x11\xb4\x68\x06\xed\x65\x09\xd9\xf6\x32\x64\xae\x85\x86\x55\xd2\xd7\xad\x24\x0c\x69\xfa\xee\x10\xb8\x06\x86\xd1\xf3\xb0\x70\xbb\xed\x38\xae\x2d\x02\x87\xf2\x48\xb1\x2e\x9a\xf5\x30\x98\xcf\x67\xc7\xc6\x42\x01\x9f\x2e\xf9\x99\xfa\xa8\x65\xac\x39\xb7\x34\xab\x6f\xc3\xf6\x77\xcc\x6c\x2b\x60\xd3\x9d\x66\x98\x0c\x53\xd2\xd4\x92\x3f\xf3\xd4\xf4\x75\x23\x6b\x9b\xf9\xe9\x12\x26\xcb\x50\x92\x9c\x4a\x23\xcf\x0a\xca\xf0\x22\xac\xcb\x66\xd9\x90\x5a\xc0\xd1\x81\x38\x3b\x4b\xe5\xdc\xf5\xc6\x93\x6d\xff\xb5\xde\x5a\x37\x4e\x38\x76\x6d\x0f\xdf\xc8\xc7\xb0\x8c\x9b\xcc\xdf\xd2\xfc\xa9\x5e\xf9\x27\xa3\x93\xe9\x10\x5e\x0b\xd0\x4f\xe4\xde\xda\xba\x69\xcb\x3e\xfc\x0a\x75\x45\x18\xc9\x34\x4a\x99\xcf\xe4\x6c\xe2\xde\xc2\x72\x52\x08\xf3\xef\x60\x1a\xdf\x94\x55\x64\x65\x68\xda\x4b\x62\xbb\x0d\x1f\x81\x7f\xc4\xf1\x23\xf0\xb7\xc5\x4d\xd0\xa0\xcc\x4e\x9a\x21\x9c\xfe\xd6\x5d\xc6\x12\x59\x04\xee\x71\x73\x2c\xb9\x6e\x22\x73\x40\xd2\x9c\x85\x7e\xdc\xc5\xed\xb0\x33\x49\xe0\x66\xff\xf0\x6b\x1b\xff\x7c\x79\xb8\xc6\x69\xe7\xb2\xeb\xf6\x2f\xe4\x76\x6e\xec\x8e\x13\xed\x12\x1c\x37\x1f\x67\xbd\x65\x5f\xac\x9d\xcd\xbb\x54\x67\xef\xad\x29\xc6\xbb\xba\x3b\x39\x4e\x5a\xad\xf1\x80\x99\x5d\x7f\x7f\x03\x00\x00\xff\xff\x1c\x10\xf0\x37\x4b\x0c\x00\x00")

func layout_css_bytes() ([]byte, error) {
	return bindata_read(
		_layout_css,
		"layout.css",
	)
}

func layout_css() (*asset, error) {
	bytes, err := layout_css_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "layout.css", size: 3147, mode: os.FileMode(420), modTime: time.Unix(1428558770, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _origin_box_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\xc1\x6e\xdb\x30\x0c\xbd\x0f\xd8\x3f\x68\x3e\x14\x0e\xda\x1a\xd8\x39\xd8\x0e\xdb\x72\x5a\xd7\x0d\xc3\x76\x2a\x7a\x50\x6d\x26\x16\xea\x4a\x86\x24\xa7\x0d\x86\xfc\xfb\x28\xcb\x72\x2c\x4b\x76\x93\x6c\xbe\xc4\x91\xc8\xf7\x1e\x49\x89\xf4\x96\x4a\xf2\x5d\xb2\x0d\xe3\x9f\xc4\x0b\xf9\x40\xd2\x75\xc3\x73\xcd\x04\x27\xe9\x82\xfc\x79\xfb\x86\xe0\xd3\x2f\xf5\x86\xa9\x68\xdf\x7a\x0b\xf3\xe8\x92\xa9\x0c\x2a\x78\x02\xae\x11\xa8\x10\x79\x63\x5e\xb3\x5c\x02\xd5\xb0\xb2\x1b\x69\xa2\x65\xb2\x58\xc6\xbd\xb2\xbc\xa2\x4a\xdd\xd2\x27\x40\xff\xc4\x52\x90\x92\x15\x70\x0d\xbc\xa8\x05\xe3\x5a\x25\x63\x57\x8e\xd6\xab\xd7\x49\x8b\x90\x74\xe0\xe9\x13\x9b\x8d\x80\xc7\x49\xa4\x75\x8d\x62\x3e\x97\xac\x2a\xd2\x31\x4c\x40\xf1\x08\xbb\xf3\xb4\x1d\x1c\x7d\x69\x2e\x0f\xd7\x68\x10\x48\x1c\x38\xd1\xa2\x58\x6d\xf1\xe5\x86\x29\x0d\x1c\x64\x9a\xe4\x15\xcb\x1f\x93\x2b\x6b\xa9\x4a\xf1\xfc\x0d\x78\x93\x3d\x30\x6e\xc3\x58\x4c\xd6\x24\x08\xf8\x40\x13\xfa\x74\xf2\xce\x0b\x7a\xe4\x1d\x8f\x3c\x3c\x01\x93\x42\x47\x78\x93\x7c\x0a\xf1\x39\x3c\x93\x95\xfb\x6f\x0e\xf8\xb4\x75\x24\xb9\x0a\x35\xe4\xba\xcf\x6e\xfb\xcf\xa1\xcd\xe6\xb8\xc7\xac\x1b\x7d\x9c\xe8\x82\xa9\x9a\xea\xbc\x04\xe9\x54\x1b\x29\x5f\xfa\xd5\x50\xb8\x02\x6d\xef\xad\xbb\xb4\x9d\xc1\xde\xfe\xf4\x77\x3a\xab\xa5\xd0\x42\xef\x6a\x08\x22\x44\xaa\x43\x5b\xc0\xfa\x5f\x91\xaa\xdb\xc1\x0e\x30\xd6\x15\xe6\xc7\xf7\x58\x92\xfd\x72\x9a\xda\xe1\xb4\x08\x21\x2f\x95\x9b\x18\xa5\xe7\x75\xb0\x9c\xa7\x92\xf0\x24\xb6\xf0\x0f\x81\x46\x00\x4e\x8a\xb5\xaf\x8c\x47\x1b\x69\xad\x6c\x4d\xd2\x77\x91\x75\xf3\x48\xd0\x8d\xe4\x83\xa2\xef\x67\xfa\x1c\xe3\xa8\xea\x17\xbc\x98\xcc\x5a\xbc\x76\x7b\xa6\x93\x44\x3c\xdc\x11\xfd\x0a\xbb\x73\xfa\x16\x49\xc8\xe5\x69\x50\x9a\xe9\x0a\x42\xfe\xdf\x3f\x6f\x96\x7e\x8e\x46\x06\x8a\x5c\x5c\x8c\x9d\x54\x56\x01\xdf\xe8\x92\x7c\x24\xef\x83\x5c\x4e\xc7\x70\x89\x41\x10\x7b\xb1\xe9\x43\xe5\x8d\x87\x41\xbe\xd7\x42\x92\xd4\x4c\x54\x13\x26\x96\x75\xcc\x1d\x27\x3c\x48\xc3\x03\xe1\xda\x46\x10\xcb\x1d\x62\xde\x2f\x66\xea\x2c\xdc\x51\xb2\x2f\xee\x96\xcf\x9c\xbf\x4d\xf4\xfc\x79\x22\xed\xe9\x1a\x12\x1c\x81\xeb\xc6\x8b\x07\x0b\x93\x1f\x0b\xd1\xb1\x6f\x30\xe2\x63\x1f\x90\x09\xda\xa6\x07\x6b\xda\x54\xda\xeb\x78\x48\xae\x45\xfd\x43\x8a\x9a\x6e\xa8\x21\xf6\x77\xef\x3a\x78\x43\x96\xdc\x23\xdd\x20\xb0\xe8\x4d\xf0\x1b\x4b\x62\x54\x61\x9b\x87\x21\x68\x97\xa2\x35\xad\x14\x1c\x91\x1c\xf3\x3d\x13\x24\xe7\xb4\xdc\xc4\x3f\x89\xe6\x3b\xcd\x70\x24\xbd\x56\x17\x27\xf1\x3f\xe7\xce\xd3\x30\xcc\xe2\x9c\x72\x1c\x8c\x9e\xdc\x9a\x4a\x33\x16\x87\x9a\xed\x52\x64\xfe\xfb\x23\x74\x76\xea\xa0\xad\x86\xe9\x92\x98\xe6\xe2\x7d\xdf\x62\x63\xf1\xca\x64\x35\xdc\x8a\x02\x26\xee\x78\x60\xd7\x4d\x8f\x69\xbd\x83\x3b\xee\xa4\x77\x47\xad\x8f\x00\x97\xf7\x8b\xb6\x4a\x7f\x03\x00\x00\xff\xff\x41\x40\x80\x5b\xc7\x0b\x00\x00")

func origin_box_js_bytes() ([]byte, error) {
	return bindata_read(
		_origin_box_js,
		"origin_box.js",
	)
}

func origin_box_js() (*asset, error) {
	bytes, err := origin_box_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "origin_box.js", size: 3015, mode: os.FileMode(420), modTime: time.Unix(1428552823, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _origin_box_ts = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\xc1\x4e\xdc\x30\x10\xbd\xef\x57\x4c\x73\x40\x89\x80\x48\xbd\xae\xd4\x1e\xda\x22\x55\x2a\xd0\xaa\xa2\x27\xc4\xc1\x24\xb3\xbb\x16\xc1\x8e\x6c\x67\x61\x85\xf6\xdf\x6b\xc7\x76\x62\x27\x5e\x58\xd4\xde\x76\xed\x99\xf7\xde\x8c\x3d\xcf\xa9\x1a\x22\x25\xfc\x14\x74\x4d\xd9\x17\xfe\x0c\x2f\x0b\x80\x56\xd0\x2d\x51\x08\xd8\xe0\x23\x32\xb5\x84\xef\x37\x57\x97\x17\xf6\x4f\xb0\xcd\xc8\x23\x5e\xbc\x1e\xf2\x80\xbb\x37\x22\x90\xd5\x2d\xa7\x4c\x25\xc3\x12\x71\x72\x09\x17\xfe\xa7\xd6\x1b\x44\xf0\xbe\x86\xa5\xab\x25\xcc\xad\xa9\x6c\x89\xaa\x36\x28\x74\xf2\x56\x03\x7f\x1b\x16\x4c\x58\xc5\x99\x54\xa2\xab\x14\x17\x79\x0c\x52\x98\x6e\x00\xa8\x0d\x95\xa5\x6b\x06\x7c\x82\x9a\x57\x9d\xf9\x59\x56\x02\x35\xbc\x13\x9b\x67\x4a\x64\xc5\x2c\xbe\xec\x1b\x7c\xad\x5b\xa5\x33\x33\x0b\x0f\x1b\x5a\xe3\xf9\x50\x51\xb6\x18\xb3\x82\x9e\xbe\xc6\x54\x87\x4c\x41\x4e\xcc\x66\x36\xb2\xb9\x22\xd2\xb6\x9a\xfb\xeb\x86\x36\x75\x3e\x05\x28\x02\x2d\xe3\xe1\x1d\x2d\x65\x4c\x89\x95\xf8\x5a\xcf\x75\x40\x96\x0c\x27\x75\xdd\x1f\xcd\x25\x95\x0a\x19\x8a\x3c\xab\x1a\x5a\x3d\x64\x67\x36\x52\x6e\xf8\xd3\x15\xb2\xae\xbc\xa7\xcc\xaa\x2e\x12\xbd\x9e\x55\x36\x12\x84\x85\x4d\xee\xdc\xd1\xd5\x4d\xf2\xd2\x25\xca\x63\x3a\x3e\x41\x4a\x89\x93\x1a\x94\xe1\x53\x74\xdb\xf3\x84\x18\x99\x68\x9d\xd4\xc4\x95\x1a\x7a\xd7\xff\xf3\x38\x07\x3a\x38\xa0\xb5\x9d\x7a\x53\xe3\x38\x50\x5e\x64\x3c\x55\x79\x18\x2c\x51\xd9\x69\x72\xc3\x65\x58\xf7\x66\x7f\xa6\x5b\x9f\xd6\x12\xf4\x28\x52\xb6\x3e\x83\xc6\xad\xba\x91\xf5\x41\x05\xbc\x4c\x35\xcc\x1b\xa0\x81\x46\x80\x42\xb3\xc1\xe0\x01\x7d\x60\xcc\x44\xc4\xda\x91\x14\x4b\x20\x6c\x97\x60\x98\x65\xf7\x59\x16\x59\xe0\x23\xdf\xe2\xff\xa9\xe4\x00\x56\x5c\x8c\xe6\x9c\xf6\x74\x30\x2c\xb0\x8e\x45\x57\x90\x7f\xe0\xd1\x92\x11\xaa\x3a\xc1\xfa\x3f\xfb\xb4\x7b\x50\xa6\x29\x6e\xf0\xd9\x8c\x84\xcd\xee\xb7\x93\x9e\x90\x0a\xf6\x57\xe6\x07\xee\xde\xe7\x09\x90\x9d\x26\x20\x92\x18\x8a\xaa\x06\xe7\x94\x7f\x7e\x5f\x0e\x95\x4f\xb6\x24\x9c\x9c\x4c\xc3\x65\xd9\x20\x5b\xab\x0d\x7c\x86\x8f\x63\x87\x0e\xeb\x3d\xd5\x82\xc1\x0e\x12\xb9\x6f\x9c\xab\xee\xad\xc2\x15\x17\x90\x6f\x89\x30\xaf\x1d\x68\x77\x9f\x52\x4d\xf0\x47\x09\xfa\x14\xfd\x54\xce\x34\xdf\x6a\xb0\xbb\x22\xa4\xe9\x93\xdd\x03\xe2\xcb\xf7\xa3\xb4\x1e\xee\x43\xe1\xaf\x82\x23\xb5\x87\x1e\x26\xfb\x1c\x6f\xa9\x39\x2e\xe1\x8a\x77\x12\xa3\x11\x38\xee\x21\x33\x18\xe7\x13\xe7\xc3\xb2\x15\xd8\xfb\x01\xae\x48\xd7\x28\x67\x5a\x58\x4a\xc5\xdb\x5f\x82\xb7\x64\x4d\x14\xe5\xcc\xaf\xdf\x3a\x30\x03\x9d\xdd\x69\xf0\x40\xab\xbd\x7e\x33\xdf\xb1\x63\x98\x19\x76\x6d\x72\x58\x84\x95\xae\x48\x23\xd1\xd7\x68\x1e\xda\xbe\xc6\xf7\x95\x35\x7d\x9f\x7d\xc7\x22\x23\x35\x7d\x3b\xd0\xb2\x91\xf6\x9f\x4b\x8c\x28\x7d\xb1\xbd\x1a\x63\xd4\x2d\x11\xd3\x8f\x26\xf7\xcd\x62\x77\x12\x2f\x8f\x77\x73\x87\x52\xeb\x05\x85\x79\x68\x1c\xd1\xe7\x8e\x1e\x9d\xa8\x5d\x16\xf7\x9a\xd7\x58\xc4\xb7\x7a\xb6\xef\xcc\x2c\xcd\x6d\x2d\x68\xbf\xd8\x2f\xfe\x06\x00\x00\xff\xff\xe0\xe1\x79\x55\x81\x0a\x00\x00")

func origin_box_ts_bytes() ([]byte, error) {
	return bindata_read(
		_origin_box_ts,
		"origin_box.ts",
	)
}

func origin_box_ts() (*asset, error) {
	bytes, err := origin_box_ts_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "origin_box.ts", size: 2689, mode: os.FileMode(420), modTime: time.Unix(1428552823, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _origins_box_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x55\xc1\x6e\xdc\x20\x10\xbd\x57\xea\x3f\x10\x1f\x22\x5b\x4a\xf9\x81\x55\x2e\x6d\xf7\xd6\x26\x1f\x10\xe5\x40\xcc\xec\x1a\xd5\x0b\x16\xc6\x9b\x46\x91\xff\x3d\x60\x6c\x03\x06\x3b\x59\xad\x2f\xeb\x05\xe6\xcd\x9b\x37\x6f\xf0\x99\x48\xf4\x28\xd9\x91\xf1\xf6\xa7\xf8\x8f\xee\x51\x7e\xe8\x78\xa9\x98\xe0\x28\x2f\xd0\xfb\xf7\x6f\x48\x3f\xf3\x92\x3b\xe9\x36\xcd\xa3\x2a\xd6\x62\xa8\xe1\x04\x5c\x69\x0c\x2a\xca\xce\xbc\xe2\x52\x02\x51\xb0\xb7\x1b\x79\xa6\xc8\x4b\x0d\x59\xb1\x4b\x07\xe2\xb2\x26\x6d\xfb\x40\x4e\xa0\x21\xb2\x9a\xb5\xea\x87\xb0\xf9\xb2\x65\x04\x65\x6d\x43\x54\x59\x81\xd4\x47\x39\xbc\xa2\xfd\x59\x03\xfc\x9e\x57\xf3\x28\xc7\x88\xa4\x8f\xbf\xf7\xe3\x5e\x6f\x7f\x5c\x4d\xb8\x91\x42\x09\xf5\xd6\x00\x26\x94\x0e\x90\x7f\x34\x0b\xe0\x43\x1a\xa7\xcb\x3f\x78\xbb\x43\xf5\xb8\xa3\x75\x58\x72\x8a\xa2\x17\x11\x3b\x34\x51\x48\xe6\x9e\x80\x06\x88\x38\x31\x91\xc7\x54\xce\x20\xca\x9d\xfc\x24\x97\x84\x93\x38\xc3\x15\xa5\x26\x00\x2e\xab\xb6\x05\x65\xd7\x83\xbc\xb6\x5d\x81\xc7\x8c\x53\xed\xb2\x35\xaa\xdf\xd6\x27\xfb\x8b\xb9\x36\xcf\xb3\xd7\x7a\x76\x40\xf9\xcd\x1c\x14\xc0\x99\xc7\x87\x33\x2e\x7a\x9c\xfe\x4f\xf9\x77\x2b\xe7\x71\xd3\xa9\xdc\xf7\xee\xfa\xc9\xc8\x0b\x59\x5b\x89\xd7\xec\xce\xf2\xaf\x18\x85\xbf\xc0\x3b\xfc\xc2\x38\x1d\x10\x8b\x8b\xa0\x74\xfa\x52\xed\x39\x6d\x04\xe3\x6a\x02\x0d\x57\x37\xa0\x57\x25\xd4\x7a\xcc\x69\xbd\x98\xde\xbd\x3a\x56\x73\x03\x17\xa2\x6d\x76\x7d\xaa\x3b\x68\x3a\x04\x0d\x3a\x08\x89\x72\xd3\x74\xc3\x08\x69\x7f\xf8\x6c\xa3\x56\x3a\x77\x2c\xad\xb1\xf4\xc4\xe4\x8b\xb1\xde\xe3\x4c\xbf\x18\x6a\x47\x37\xf7\x08\x9e\x32\xbb\x6b\x2e\xa3\xec\x39\x4a\x16\x69\x37\xe4\x98\x8b\xca\x97\x3a\xf7\x91\x84\x9f\x8c\x84\xdf\xbf\x0d\x89\x82\x61\xb4\x83\x1f\x5b\x02\xbe\xd4\x90\xb2\x06\x12\x8e\xfe\x15\xcd\x48\x68\x43\x35\x2d\x05\x81\x32\xfd\x17\xae\xe8\x2d\xca\x7a\x06\x03\xc2\x0d\x91\x66\x12\x7d\x32\x76\x09\x93\xa6\x01\x4e\x7f\x55\xac\xa6\xc9\xa9\xdd\xbe\x8e\x07\xe6\xeb\xd2\x18\x2f\x05\xdf\xbf\xdb\xdb\xf0\xb3\x66\x49\x3c\x08\x0a\x69\xa1\xe2\x73\xe3\xad\xba\x4e\x38\xe1\x24\x09\xaa\x93\xfe\x17\x5a\xaf\xf7\xc5\x20\xf8\x47\x00\x00\x00\xff\xff\xad\xd3\x9e\x50\xe4\x07\x00\x00")

func origins_box_js_bytes() ([]byte, error) {
	return bindata_read(
		_origins_box_js,
		"origins_box.js",
	)
}

func origins_box_js() (*asset, error) {
	bytes, err := origins_box_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "origins_box.js", size: 2020, mode: os.FileMode(420), modTime: time.Unix(1428552913, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _origins_box_ts = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x54\xcd\x6e\xdb\x3c\x10\xbc\xeb\x29\x36\x3a\x04\x22\x90\x4f\x0f\xa0\xc0\x97\xaf\x35\xd0\x43\x92\x5e\x7a\x33\x7c\x60\xc4\x8d\x45\x54\x26\x05\x8a\x76\x1a\x18\x7a\xf7\xf2\x57\x12\x25\x05\x68\x81\x9e\x12\x93\xbb\x33\xb3\x3b\x23\xd6\x2d\xed\x7b\xf8\xae\xf8\x89\x8b\xfe\x7f\xf9\x0b\x6e\x19\x40\xa7\xf8\x95\x6a\x04\x6c\xf1\x8c\x42\x57\xf0\xed\xc7\xf3\xd3\xde\xff\x98\x5d\x4b\xdf\x55\xc1\x0d\x0e\x82\x9e\xb1\x82\x5e\x2b\x2e\x4e\xc7\x2a\x00\x1a\xbc\x47\x18\xb2\x59\x0b\xe3\x7d\x47\x75\xdd\xa0\xaa\x60\x7f\x35\x70\x5f\xc7\x03\x5b\x56\x4b\x61\x20\x2e\xb5\x96\xaa\x20\x56\x09\x80\x6e\x78\x5f\x06\x21\xb0\x03\x26\xeb\x8b\xfd\xb7\xac\x15\x1a\xc0\x20\xaa\xc8\x35\x7d\x6d\x31\x27\xab\x96\xd2\x0d\xf8\x62\xd4\x99\xe6\xbc\xe5\xbd\xfe\x2f\xc8\xce\xb3\xa9\x78\x92\x65\xaa\x04\xbe\x2f\xb5\x15\x64\x56\x1c\xfa\x4d\xe5\x6d\x78\x34\xc7\x6e\x40\xca\x98\xeb\x79\x32\x0c\x28\x4c\xc7\x4f\xfc\x88\xfb\x78\x80\x36\x9c\x86\xa1\x63\x11\x31\x9b\x5b\xf0\x97\x5b\x40\x13\x00\x31\x6c\x30\x6e\xd1\x15\xa6\x4c\x54\x9d\x02\x09\xa9\x80\x8a\x8f\x0d\x86\x55\xb7\xeb\xf2\xc8\x0a\xcf\xf2\x8a\xff\x66\x92\x4f\xb0\xd2\x61\x0c\x67\x8f\xda\xc7\xa5\xf0\x9b\x8d\xe9\x21\xe0\x13\x70\xa5\x2a\x44\xcd\xe6\x73\x97\x98\x70\xf0\x7f\x4b\x1b\xbf\xa3\xab\xe6\x6f\x50\xdc\x8d\xe5\x11\x03\x12\x04\xeb\xf0\x98\xd0\xc0\x4a\x96\x75\x65\x77\xd1\xc5\x3c\x4a\xeb\x8a\x95\x57\x79\xdf\xc8\xf7\xfc\xc1\x4b\x6c\x38\xc3\x67\x14\x97\xf2\x95\x0b\xe6\x90\xc8\x1f\x41\x18\xba\x5a\xef\x05\xeb\x24\x17\x3a\x82\xa5\xa7\x09\x64\xc0\xfc\x74\x2d\x66\xe0\x91\xcf\xd5\x0e\x59\xaa\x61\x69\x00\x89\xa1\x8e\x13\x14\x18\x33\x15\xd6\xf9\x26\x15\x14\xd6\x17\x4b\x00\x5c\x24\xe4\xd3\xce\x27\xe7\x96\xb6\x4d\x7e\x79\xc7\x82\xde\xd3\xa8\x84\x38\xed\x70\xb7\x03\x3c\xe4\xfe\xd6\x7e\xc4\xf9\x71\x42\x87\x0d\xc8\x71\xe9\x45\x5c\xf5\x30\x8e\x1c\xc2\x36\xdf\xe3\x6a\xb0\x24\xc3\xfe\x03\x59\x1b\x82\xe3\x82\xea\x16\xa9\x79\x1c\xfe\x6e\x2b\x1b\xaa\x99\xa1\xd0\x18\x34\x0f\xdb\x4f\x4d\xe4\xb4\xb1\xec\xa8\x5a\xbe\xcb\xe1\xb9\xf4\x37\x25\xed\x3a\x14\xec\x4b\xc3\x5b\xb6\xca\xb0\x43\x89\x8c\x41\x95\xf5\x20\x79\x69\xef\xef\xd3\x67\xd4\xe3\xbe\x48\x86\x24\x99\x63\x7d\x1f\xbe\xfb\x6d\xee\xe8\xc4\x90\xfd\x0e\x00\x00\xff\xff\x4d\xd4\x61\x11\x79\x06\x00\x00")

func origins_box_ts_bytes() ([]byte, error) {
	return bindata_read(
		_origins_box_ts,
		"origins_box.ts",
	)
}

func origins_box_ts() (*asset, error) {
	bytes, err := origins_box_ts_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "origins_box.ts", size: 1657, mode: os.FileMode(420), modTime: time.Unix(1428552913, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _status_box_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x93\xcf\x4e\x02\x31\x10\xc6\xef\x26\xbe\x43\xdd\x03\x29\x31\xf6\x01\x24\x5e\x34\x9c\x34\x98\xf8\xe7\x01\x9a\xed\x20\x8d\x4b\xdb\xb4\xb3\x04\x62\x78\x77\x5b\x4a\x77\x29\x65\x11\x7b\xd9\xcd\xf0\xcd\x7c\x1f\xbf\xe9\xae\xb8\x25\xef\xc8\xb1\x75\x8f\x7a\x4d\x1e\x08\x9d\xb7\xaa\x46\xa9\x15\xa1\x63\xf2\x73\x7d\x45\xfc\xe9\x4a\x9d\x90\x6a\x2b\xbf\xa4\xea\x14\xe1\xe0\x42\x3a\x06\x0d\x2c\x41\xa1\x1f\x24\x74\xdd\x86\x57\x56\x5b\xe0\x08\xd3\xf8\x03\xad\x84\x5c\x55\xe3\xc9\xe9\x36\x56\x37\xdc\xb9\x19\x5f\x82\x1f\x50\xb9\x9d\x5b\x75\xac\xfd\x86\xcd\xf4\x4f\x17\x67\xb8\x2a\x6d\xfa\xd6\xdc\x09\x94\x30\x5a\x2a\xbc\xf3\x82\xc2\x2f\x65\xe3\xc6\x78\xdd\xd3\x42\x36\x82\x1e\x4d\x2b\x8c\x1c\xe0\xeb\x8e\x50\x02\xb5\x17\x6c\xe3\xa3\xe3\xc8\x8c\xd5\xa8\x71\x63\xa0\x6f\xf1\x81\xfa\x1d\x9c\xe0\x2c\xe7\x84\xde\x9c\xa8\x87\x63\x01\x5b\xab\x0e\xd2\x6c\x87\x09\x48\xa5\xc0\x7e\xc0\x3a\x60\x8c\xe3\x98\x0a\x3c\x6e\x49\x75\x4f\x2a\xff\xd8\x17\x13\x9c\x67\xd8\x9c\xe1\x89\x12\x1b\xb8\x70\xd2\xe7\xdb\xcb\x3f\x2e\xc0\x85\x59\x74\x82\x17\x5f\x12\xf0\xc9\x30\x71\xd3\x62\xc6\xda\x70\x1b\x76\x79\xc8\x34\x96\xca\xd5\x43\xbe\xf7\x73\x2e\xc2\x6b\x11\x32\xa3\x62\x9d\xd9\xa7\x33\x1a\xe5\x48\x62\x86\x99\x16\x50\xac\x7b\x40\xc7\x2c\x2c\xf5\x0a\x86\xf3\x1e\xdc\x8c\x14\x3d\xde\x9c\xfe\x1f\xf8\xf2\x76\x4c\x43\xc3\x6f\x00\x00\x00\xff\xff\xe6\x80\x00\x9e\x22\x04\x00\x00")

func status_box_js_bytes() ([]byte, error) {
	return bindata_read(
		_status_box_js,
		"status_box.js",
	)
}

func status_box_js() (*asset, error) {
	bytes, err := status_box_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "status_box.js", size: 1058, mode: os.FileMode(420), modTime: time.Unix(1428554359, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _status_box_ts = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x53\x41\x6e\x83\x30\x10\xbc\xf3\x8a\xad\x0f\x11\x28\x2a\xb9\x47\xea\xa5\x55\xa4\x4a\x4d\x53\xa9\x4d\x1f\x80\x60\xdb\x58\x25\x36\xb2\x97\x28\x51\xc5\xdf\x6b\x6c\x08\x31\x38\x55\x4e\x80\x67\x76\x76\x76\x07\xe7\x65\xa6\x35\x7c\x50\x46\xb5\x7e\x94\x47\xf8\x8d\x00\x2a\xc5\x0f\x19\x21\x60\x89\x7b\x14\xb4\x84\xe7\xed\xeb\x7a\xe5\x3e\x0c\xbc\x58\x9c\x19\x22\xdb\xe3\x2a\xcc\xea\x29\x3f\x78\x0a\x32\x2e\x28\x52\xf1\x6f\x2e\x96\xf0\x66\x9f\x2d\x92\x4b\xa1\x49\xd5\x39\x49\x15\xfb\x68\xd2\x1a\x04\xa0\x1d\xd7\x69\xe7\x0f\x1e\xa0\x90\x79\xdd\xbe\xa6\xb9\x42\xa3\xd8\xf5\x88\x59\xc1\x0f\x2c\x99\x14\xa4\x76\xe8\x8d\xf1\x6e\x4a\x99\xb6\xb3\xb3\xc8\xd2\xcc\x6c\x96\x79\x31\xd8\x3f\xf2\xba\xca\x44\xa7\x1f\x28\xf4\xdb\xb4\x00\xf3\xa8\xbd\x9b\xac\xaa\x50\x14\x4f\x3b\x5e\x16\xf1\x58\xa3\x17\x1f\x66\x18\xf6\x79\x9b\xb1\x51\x91\x6f\xca\xf4\xad\x24\x17\x74\x6f\x08\x6c\xba\xa7\x89\xb3\x41\x27\x89\x06\xba\x46\x72\xe1\x74\x59\xb5\x8d\x9b\x16\x1f\x03\xe7\x10\xc1\xa5\xc8\xbf\x20\xbe\x93\xde\x11\x80\x42\xaa\x95\xb0\x1f\xcd\xd5\xd5\x72\x21\x50\x6d\xf1\xd8\x2e\xc1\x09\x58\x38\x0a\x8e\x7c\x85\x0c\x73\x60\x4b\x60\xe6\xd1\x1d\xf6\xdb\x78\xc1\x53\x50\x87\x38\x95\x78\xa3\xc6\xe7\xfb\xfa\xa6\xff\x0e\xd8\x3c\xd0\x7d\x28\x75\xe0\xb9\x69\xbf\xd9\xaa\xa6\xb8\xca\xd4\xf8\x56\x75\xb7\xc3\x21\xd3\xf8\x70\xf8\xa9\xac\x4a\x61\x0e\x08\xe3\xcb\x38\xbc\x8b\x35\x9b\xf9\xfe\x9d\xee\x46\x16\x98\xf4\x69\x5d\xc1\x53\x85\x7b\x79\xc0\x70\x6f\x17\x6c\x13\x35\xd1\x5f\x00\x00\x00\xff\xff\x81\x99\xac\xa9\x7e\x04\x00\x00")

func status_box_ts_bytes() ([]byte, error) {
	return bindata_read(
		_status_box_ts,
		"status_box.ts",
	)
}

func status_box_ts() (*asset, error) {
	bytes, err := status_box_ts_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "status_box.ts", size: 1150, mode: os.FileMode(420), modTime: time.Unix(1428554359, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _tsconfig_json = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x90\xc1\x4a\xc4\x30\x10\x86\xef\xfb\x14\x6b\x8f\x8b\xa4\x2c\xe8\xc5\x9b\x78\x10\x41\xf0\x01\x44\x4a\xda\xce\xae\x23\xc9\x4c\xc8\x4c\x8b\x22\xfb\xee\xa6\xcd\xba\x76\xb7\xc5\x1c\xff\x6f\xbe\x3f\x99\x7c\xaf\xd6\xe9\x14\x3d\x44\x41\xa6\xe2\x6e\x5d\x6c\xcd\x8d\xd9\x16\xd7\x39\x6f\xd8\x07\x74\x10\x5f\x82\x26\x2c\x89\x67\x61\x84\x6a\xe3\x1e\x74\x70\x40\x6e\x8f\xc6\x08\x3c\xb7\x9d\x83\x01\x24\xdf\x33\x7d\xc8\x94\xb6\xd0\x38\x1b\xad\xe6\xfb\x76\xd6\x09\x4c\x28\xf1\x93\x0f\x0e\x1b\xd4\x7b\xfa\x5a\xe0\x11\x3c\xf7\xf0\x90\x7a\x81\x74\x78\x90\xc6\xee\xdc\x7f\xc6\xfa\xd7\x1b\xe3\xc3\x71\x97\x5d\x5a\x44\x1e\x1d\x0f\xf4\xf5\x4f\x30\xe5\x66\x53\x6e\x8c\x9e\xbd\xf1\xca\x94\xc4\x2d\x54\x79\x13\x39\x8d\x8c\x13\x6f\xd3\xc2\xcb\x32\x1b\xf0\xa2\xcb\x94\x75\xa7\xca\x34\x8b\x1b\x26\x8d\xec\xaa\x9a\x3f\x67\x0c\xa8\x0d\x8c\xa4\xff\x42\x59\xa6\x7d\xfa\x99\xaa\x45\x09\x56\x9b\x77\x88\xb3\x01\x24\xd4\x59\xc8\x11\xf7\x48\x8b\x85\x19\x2d\x5f\x26\x6a\xb5\x3b\xa1\xfc\x3d\xab\xc3\x4f\x00\x00\x00\xff\xff\x9c\xf6\x3f\x7c\x56\x02\x00\x00")

func tsconfig_json_bytes() ([]byte, error) {
	return bindata_read(
		_tsconfig_json,
		"tsconfig.json",
	)
}

func tsconfig_json() (*asset, error) {
	bytes, err := tsconfig_json_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "tsconfig.json", size: 598, mode: os.FileMode(420), modTime: time.Unix(1428553590, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"api.js": api_js,
	"api.ts": api_ts,
	"button.js": button_js,
	"button.ts": button_ts,
	"control_box.js": control_box_js,
	"control_box.ts": control_box_ts,
	"endpoint_box.js": endpoint_box_js,
	"endpoint_box.ts": endpoint_box_ts,
	"endpoints_box.js": endpoints_box_js,
	"endpoints_box.ts": endpoints_box_ts,
	"event_dispatcher.js": event_dispatcher_js,
	"event_dispatcher.ts": event_dispatcher_ts,
	"init.js": init_js,
	"init.ts": init_ts,
	"layout.css": layout_css,
	"origin_box.js": origin_box_js,
	"origin_box.ts": origin_box_ts,
	"origins_box.js": origins_box_js,
	"origins_box.ts": origins_box_ts,
	"status_box.js": status_box_js,
	"status_box.ts": status_box_ts,
	"tsconfig.json": tsconfig_json,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() (*asset, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"api.js": &_bintree_t{api_js, map[string]*_bintree_t{
	}},
	"api.ts": &_bintree_t{api_ts, map[string]*_bintree_t{
	}},
	"button.js": &_bintree_t{button_js, map[string]*_bintree_t{
	}},
	"button.ts": &_bintree_t{button_ts, map[string]*_bintree_t{
	}},
	"control_box.js": &_bintree_t{control_box_js, map[string]*_bintree_t{
	}},
	"control_box.ts": &_bintree_t{control_box_ts, map[string]*_bintree_t{
	}},
	"endpoint_box.js": &_bintree_t{endpoint_box_js, map[string]*_bintree_t{
	}},
	"endpoint_box.ts": &_bintree_t{endpoint_box_ts, map[string]*_bintree_t{
	}},
	"endpoints_box.js": &_bintree_t{endpoints_box_js, map[string]*_bintree_t{
	}},
	"endpoints_box.ts": &_bintree_t{endpoints_box_ts, map[string]*_bintree_t{
	}},
	"event_dispatcher.js": &_bintree_t{event_dispatcher_js, map[string]*_bintree_t{
	}},
	"event_dispatcher.ts": &_bintree_t{event_dispatcher_ts, map[string]*_bintree_t{
	}},
	"init.js": &_bintree_t{init_js, map[string]*_bintree_t{
	}},
	"init.ts": &_bintree_t{init_ts, map[string]*_bintree_t{
	}},
	"layout.css": &_bintree_t{layout_css, map[string]*_bintree_t{
	}},
	"origin_box.js": &_bintree_t{origin_box_js, map[string]*_bintree_t{
	}},
	"origin_box.ts": &_bintree_t{origin_box_ts, map[string]*_bintree_t{
	}},
	"origins_box.js": &_bintree_t{origins_box_js, map[string]*_bintree_t{
	}},
	"origins_box.ts": &_bintree_t{origins_box_ts, map[string]*_bintree_t{
	}},
	"status_box.js": &_bintree_t{status_box_js, map[string]*_bintree_t{
	}},
	"status_box.ts": &_bintree_t{status_box_ts, map[string]*_bintree_t{
	}},
	"tsconfig.json": &_bintree_t{tsconfig_json, map[string]*_bintree_t{
	}},
}}

// Restore an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// Restore assets under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        if err != nil { // File
                return RestoreAsset(dir, name)
        } else { // Dir
                for _, child := range children {
                        err = RestoreAssets(dir, path.Join(name, child))
                        if err != nil {
                                return err
                        }
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

