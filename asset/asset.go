package asset

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path"
	"path/filepath"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindata_file_info struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindata_file_info) Name() string {
	return fi.name
}
func (fi bindata_file_info) Size() int64 {
	return fi.size
}
func (fi bindata_file_info) Mode() os.FileMode {
	return fi.mode
}
func (fi bindata_file_info) ModTime() time.Time {
	return fi.modTime
}
func (fi bindata_file_info) IsDir() bool {
	return false
}
func (fi bindata_file_info) Sys() interface{} {
	return nil
}

var _common_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x8e\x4d\x6a\xc3\x30\x10\x85\xf7\x3e\xc5\x43\x2b\x1b\x8a\x2f\x50\xba\xea\x15\xba\x2b\x5d\xc8\xd2\x33\x08\xd4\x19\x90\x14\x08\x04\xdf\x3d\x92\x12\x27\xde\x78\x16\xfa\xe1\x7d\xf3\xf1\xd6\x8b\xb8\x12\x54\x90\x59\x7e\x78\x2d\xa3\xd7\xff\x0f\x94\xfa\x9a\x70\x1b\x50\x27\xac\x18\x4d\x10\x61\x6a\xb9\x41\x10\x54\x66\x4f\xdb\xd4\xef\xef\x81\xf8\xc3\x57\x17\x7c\x76\x60\xeb\x27\x63\xe6\xc3\xd4\x92\x6f\x95\x42\x39\x77\x1d\x99\x53\xdb\x7b\xc7\xa9\x64\x8d\x9c\x99\x92\xa6\xd1\xac\x36\x44\x7a\x14\x85\x75\x8e\x39\x37\x27\x7a\xbd\x2e\x9a\x71\xd0\xc3\x8a\xc7\xab\x3a\x6c\x22\x44\xeb\xbd\x44\x36\xc1\xc2\xa7\x83\xde\x4c\x7b\x83\x6d\xb8\x07\x00\x00\xff\xff\x1d\x42\xb3\x8e\x35\x01\x00\x00")

func common_js_bytes() ([]byte, error) {
	return bindata_read(
		_common_js,
		"_common.js",
	)
}

func common_js() (*asset, error) {
	bytes, err := common_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "_common.js", size: 309, mode: os.FileMode(420), modTime: time.Unix(1435907756, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _common_ts = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x8e\xb1\x6a\xc5\x30\x0c\x45\xf7\x7c\xc5\xc5\x53\x02\x25\x1f\x90\xd2\xa9\x14\x3a\xb4\x5b\xb6\xd2\xc1\xb1\x95\x62\x70\x24\xb0\x55\x28\x94\xfc\xfb\xb3\x9d\xc7\x23\x43\x26\x1b\x5d\x9d\xa3\xbb\xfe\xb2\xd3\x20\x8c\x4c\x3a\xd3\x9f\xf6\x5e\xb6\x09\xef\xf3\xe7\xc7\x5b\xa4\x8d\x58\x9f\xa0\x65\x3c\x21\x6b\x0a\xfc\x33\xe0\xbf\x03\xc2\x8a\xde\x04\x66\x4a\x15\x31\x08\x8c\x82\x1d\x19\xea\xf7\xeb\x94\x7e\xe3\xa5\x29\x9e\x4b\xb8\x83\x62\xa6\x83\xaf\xb3\x57\x61\x2d\x37\x2e\x0d\xe7\xfc\xc2\x71\x6c\x3a\xe1\x2c\x91\x46\x4a\x49\x52\x6f\x56\x1b\x22\x79\xa8\xc0\x3a\x47\x39\x57\x13\x5a\x95\x86\x8f\x38\x49\x61\xd9\xe3\x51\x13\x36\x11\x58\xca\xbb\x44\xaa\x82\x85\xee\x0e\xf2\x66\x68\x77\xbb\xbd\xbb\x05\x00\x00\xff\xff\x4d\x99\x71\x6f\x2e\x01\x00\x00")

func common_ts_bytes() ([]byte, error) {
	return bindata_read(
		_common_ts,
		"_common.ts",
	)
}

func common_ts() (*asset, error) {
	bytes, err := common_ts_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "_common.ts", size: 302, mode: os.FileMode(420), modTime: time.Unix(1435907487, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _api_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xe4\x54\xcd\x8e\xd3\x30\x10\xbe\xef\x53\x8c\x7c\x4a\x44\xb6\xdd\x15\x37\x2a\x90\x50\x41\x94\xdf\x5d\xc1\x1e\x56\x42\x1c\x02\x99\xb6\x96\xcc\xd8\x6b\x4f\x28\xd1\x2a\xef\x8e\xed\x94\xc6\x89\xda\x92\x3b\x3e\x54\x56\x3d\xf3\xfd\x79\x9c\x5f\xa5\x85\x5b\xab\x7f\x37\x4b\x25\x91\x18\x9e\x43\xb6\xae\xe9\x07\x4b\x4d\x90\xe5\xf0\x78\x01\x7e\x1d\xfe\x49\x2a\x0f\x87\x6d\xfc\x4d\x4e\x66\xc6\x6a\xd6\xdc\x18\x9c\x39\xa4\xca\x43\xf6\x88\x3f\x91\xb7\xba\x2a\xc0\x94\xbc\x2d\xe0\xbb\xae\x9a\xbf\x30\x61\x05\x31\x16\x1f\x7c\x07\xe1\x0e\xee\x3f\x7e\x58\x31\x9b\xcf\xf8\x50\xa3\xf3\x7c\x8b\x41\x5d\x6d\x95\xaf\xdb\x49\xaa\xf4\xee\xab\xf0\xb4\xb6\x31\x5a\x12\x8b\x6f\xf0\x24\xc2\xf7\xe5\x1e\x72\xa6\x0d\xd2\x81\xdd\xf7\x16\xc0\xb6\xc6\x7c\x58\xe4\x90\xf7\x6c\x2b\x2c\x2b\xb4\x99\xb8\xbf\x8c\xc6\x2e\x97\xda\x13\x68\x25\x0a\x10\xd7\x22\xe9\x92\x6b\xc8\xc6\x2e\x7a\x34\xaa\xba\xc3\xbe\xbe\x3d\xec\x50\x39\x3c\xd5\x74\xb4\xc1\x22\xd7\x96\x42\x51\x77\xda\x2e\xce\x04\xdf\xa5\x78\x2e\xf7\x02\x2a\x4d\x58\xc0\xba\x94\xea\xf8\x1d\xf0\x56\xba\x4e\xcf\x91\x5b\x1b\xa5\x4b\x4a\x97\xc3\x9b\xc6\x71\x24\x21\xaa\xe8\x90\x4b\xae\x1d\xcc\xe1\xfa\xea\x0a\x5e\xc0\xd3\x71\x5d\x1c\x38\x2f\x2a\x7b\xf7\xe5\xe6\xd3\xcc\x94\xd6\x61\xec\xb3\xe8\x8c\x26\x87\x79\xc2\x3d\x4c\x28\xac\x60\x6a\x4a\x67\x3b\x21\x44\x25\x1d\xdf\x58\xb9\x91\xe4\x06\xd6\xa6\x07\x27\xde\xbc\xbe\x0b\x33\x33\xd7\x1d\x8c\xdf\x53\xad\xd4\x7f\x91\x5e\x6d\xaa\x92\xb1\xcb\x6f\xe0\xad\xcb\xe2\xed\xab\x02\x7c\x44\xf1\xcd\xbe\xc7\x93\xe3\x18\xb3\xf4\x32\x32\x71\xfb\xf2\x6e\xb9\x4a\xc3\x9c\x0b\xff\xd2\x7b\xb0\x28\xdb\xb1\x95\xb4\x91\xeb\x26\x7b\x04\x91\xc0\x8b\x67\x29\x19\xb4\xf9\x80\x6f\x82\x9b\x0d\xf2\x59\x2b\xff\x52\x3f\x1a\x84\x91\xf6\x30\x14\xa7\x15\xed\x5f\x7e\x22\x6c\x71\xd1\xe6\xe1\x2b\xf1\x27\x00\x00\xff\xff\x15\x03\x0c\xed\xbe\x05\x00\x00")

func api_js_bytes() ([]byte, error) {
	return bindata_read(
		_api_js,
		"api.js",
	)
}

func api_js() (*asset, error) {
	bytes, err := api_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "api.js", size: 1470, mode: os.FileMode(420), modTime: time.Unix(1435907756, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _api_ts = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x53\x4b\x6f\x13\x31\x10\xbe\xe7\x57\x8c\x7c\xda\x55\xb7\x49\x2b\x6e\x5b\x81\x84\xd2\x96\x00\x81\x56\xa5\x48\x95\xa2\x1c\x4c\x76\x92\x58\x6c\xec\xad\xed\x4d\x88\xaa\xfd\xef\xcc\xda\xfb\xca\x0b\xca\x91\x4b\x94\xb5\xbf\x99\xef\xe1\x19\x21\x2d\xea\x39\x9f\x21\x5c\x2b\x89\xb7\xb9\x9c\xc1\x4b\x0f\x20\xd0\x68\x32\x25\x0d\xc6\x70\xa7\xc5\x42\xc8\x30\x86\xb5\x12\xc9\x55\xaf\xe8\xf5\xda\x9a\xb1\x30\xf6\xcf\x75\x93\xe9\xf1\xca\x5b\x2e\xd2\xb6\x0a\xb5\x56\x3a\x76\x87\xa7\xe1\x0e\xba\x42\x63\xf8\x82\xda\x1b\xab\x85\x5c\xec\xc1\x6e\x64\x92\x29\xfa\x74\x50\x80\x9f\xb8\x6d\x81\xe5\x41\xae\xd3\x13\x95\x5e\x6d\x55\x27\xf9\x0a\x77\x0b\xb1\x6a\x6c\xe2\x86\x63\x32\xdd\xbd\xfa\xbc\x4f\x56\x5f\x7c\x7f\x18\xef\x90\xce\x52\x6e\x0c\xdc\x6b\xf5\x6b\x3b\x4c\x05\x56\x6a\x33\x2d\xd6\xdc\x22\x18\x2a\x0b\x56\x68\x97\x2a\xa9\xab\x22\xc8\xb8\x5d\xb6\x5f\x3f\x54\x42\x54\x5c\x6e\x29\xab\xa7\x2f\xe3\x91\xb5\xd9\x03\x3e\xe7\x68\x6a\xdf\x6b\xae\x41\xe3\x33\xbc\x05\x89\x9b\x3d\x48\x10\x5e\x35\x18\x8a\x83\x30\x1b\x21\x13\xb5\x99\x30\x52\xa2\xb7\x4e\x31\x9b\x9e\x95\x8c\x1e\x48\x8d\xfa\x2a\x43\x59\x89\x8a\xca\xaa\x08\xac\xce\x31\x6c\x01\x06\x6d\xd5\x7f\x84\x3c\x41\x1d\xb0\xa7\x73\xe7\xf0\x7c\xa8\xa8\xad\x4a\x59\x04\xec\x92\x55\x15\x62\x0e\x41\x69\x22\xac\xf4\xd6\x3d\xc8\xb9\x3b\xf6\xa8\x02\x30\x35\x78\x08\xa9\xaf\x2b\x72\x9b\x6b\x59\x5e\x96\xa7\x45\x27\x48\x3a\x7a\x6d\x8e\x11\x24\x34\xc4\x71\xb3\x02\x11\xcc\x69\xde\xe2\x66\x48\xc3\x83\x5c\xed\x52\x98\x7e\xe7\xa9\x7c\x6b\xdf\xb2\x13\x8b\x92\xa9\xe2\x09\xe1\xe7\xd4\xc5\x0a\x25\x03\x6c\x3d\x97\x29\x38\x53\x96\xdb\xdc\xc0\x00\x2e\x2f\x2e\xe0\x1d\xbc\x69\x11\xe0\x74\x04\x9f\xbe\xdd\x7d\xed\x67\x5c\x1b\x74\xf8\x7a\xc5\xc2\x8a\xa8\x8e\x02\x9c\x8b\xbf\xa1\x0b\x9f\x13\xfd\xa4\xb4\xbc\x7e\xec\x4d\xe0\xfd\x77\xd7\xf9\x20\x83\xd3\x11\xb0\x0f\x37\x8f\xe5\xfb\x0e\x94\xef\x46\xff\x65\x9e\xa6\xff\x4b\x0e\x79\x96\xd0\xbc\xf8\x24\x02\x6f\xe1\xe3\x75\x3b\x25\x47\xf6\xfb\xb5\xf3\xe2\x22\x2a\xe7\x90\xdd\xbf\x7f\x1c\x8e\xba\x19\x0d\xd8\x59\x4d\x15\x81\x93\xea\x5b\x8b\xf9\x36\x78\x01\xd6\x21\x65\x71\x57\x02\x14\xa1\x67\xf7\x9c\x61\xe3\x62\x81\xf6\xa4\x85\x7f\x55\xbb\xf7\x9e\x3b\x5a\xcb\x97\x3d\xa2\xa0\xe8\xfd\x0e\x00\x00\xff\xff\x08\x54\x0b\x03\x4a\x06\x00\x00")

func api_ts_bytes() ([]byte, error) {
	return bindata_read(
		_api_ts,
		"api.ts",
	)
}

func api_ts() (*asset, error) {
	bytes, err := api_ts_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "api.ts", size: 1610, mode: os.FileMode(420), modTime: time.Unix(1435907487, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _button_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x55\x4b\x6f\xdc\x2e\x10\xbf\xef\xa7\xe0\xef\x43\xc4\x4a\xf9\x3b\x52\x55\xf5\xd0\x55\x2f\x69\x72\xab\xd2\x43\x7b\x6b\x7b\x20\x30\xc9\xa2\x78\xc1\x82\xf1\x36\x51\xb4\xdf\xbd\x3c\xfc\xc2\x36\x4e\x57\x2a\x87\x15\x0b\xf3\x7b\x30\x0c\xe3\x23\x33\xe4\xba\x41\xd4\x8a\x7c\x22\xf4\xa1\x51\x1c\xa5\x9b\xd3\x2d\x79\xdd\x10\x37\xfa\x95\x18\xd4\xaf\xfb\x81\x7b\x69\x4b\xa8\xe0\x00\x0a\x1d\x5a\x68\xde\xf8\x69\xc9\x0d\x30\x84\xdb\xb8\x41\x0b\x21\x8f\xc5\x76\xb7\x88\x2a\x79\xc5\xac\xbd\x63\x07\x70\xf8\x42\xd7\xa0\xfe\xbf\x0f\x3a\x45\x26\x9e\x09\x71\x7b\x74\x93\x2f\xd2\x22\x28\x30\xb4\xe0\x95\xe4\x4f\xc5\x65\x0c\xf3\x0c\xe5\xbd\x54\x82\xfa\xbf\xdb\xa9\x2a\xaf\xb4\xed\x7c\x9d\x69\x78\x0c\x4d\x5d\x87\x9d\x8c\xed\x04\xc5\x6a\xe7\x4e\x7c\xde\xcb\x4a\xd0\x89\xf4\x77\x78\xc6\x3b\x2d\x80\x16\x3f\x9b\x77\x1f\x6e\xde\x17\xab\xd6\xdf\xca\x42\x88\x5d\x49\x03\x2c\x18\x9a\x89\x4c\x41\x42\xda\x9a\x21\xdf\x83\x71\x87\x56\xf0\x9b\x04\x07\x37\xfd\x2a\x9d\x02\x2c\x32\x6c\x2c\x58\x17\xfe\x7a\x8a\x7b\xa7\xf0\x1b\x2b\xa9\xac\x8d\x46\x8d\x2f\x35\xcc\x8e\xe3\x10\x43\x21\x3e\xc1\xcb\x25\xa9\xda\x9d\x59\xf5\x0d\xae\xe6\x49\x49\x91\xad\x83\xdd\xb2\x85\x8e\x27\x30\xcc\xf5\x99\x79\x5c\x93\x4e\xd0\x03\x62\x5d\xd2\xc0\x41\x1f\xe1\x1f\x1c\x7c\x81\xe8\xac\xb3\x5b\xc0\xaf\x46\x3e\x4a\x95\xc8\xeb\xb0\x34\xd6\xf5\xad\x22\x5e\xea\xb5\x7e\x76\xb1\xc9\x2d\xff\x88\xf1\xa5\x72\xaf\xe2\xd7\x50\x09\xf2\x81\xd0\xff\x7a\xd0\x98\xcd\x8f\x31\x9b\x2f\xa9\x6f\xdd\xff\x4e\x7d\xb7\x1c\x5e\xd6\x0d\xd2\x71\x29\x4f\x02\xf3\xce\x9c\x50\xcf\x32\x60\x4e\x9b\xb9\x44\x9f\x95\xd4\x4b\x2e\x89\xbc\x02\x66\x22\xc0\x26\x79\x1c\x9f\xf9\xea\x8a\xa0\x16\xfa\x63\x2b\xb3\x4a\xe8\x5b\x59\x42\x04\xd9\x1a\x88\x65\x17\xda\xa7\x6b\x01\xf0\xa6\x53\xf7\xc8\xcf\x63\x0e\x90\xbf\xa0\x76\xd7\x92\x10\xd7\xcc\xf8\xcb\x19\xb1\xc7\x95\x79\xe7\x49\xef\x31\xfb\x4a\x5d\x18\x42\x36\xbd\xbe\xd8\x92\x6f\xd2\xc5\x45\xda\xf0\xa2\xba\x6f\xb4\xd3\x4a\xcc\x84\xb5\x6f\x2b\x6b\x74\x28\x9e\xd6\xb2\x01\x6c\x4c\xf7\xb1\xdc\x6d\x4e\x5b\xdf\x16\xff\x04\x00\x00\xff\xff\xac\x3b\x28\x3e\x64\x07\x00\x00")

func button_js_bytes() ([]byte, error) {
	return bindata_read(
		_button_js,
		"button.js",
	)
}

func button_js() (*asset, error) {
	bytes, err := button_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "button.js", size: 1892, mode: os.FileMode(420), modTime: time.Unix(1435907756, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _button_ts = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x54\x4d\x4f\xdc\x30\x10\xbd\xef\xaf\x98\xe6\x80\x12\x89\x06\xa9\xaa\x7a\xc8\xaa\x17\x0a\x52\x0f\x40\x0f\xe5\x46\x39\x98\x78\x0a\x16\x59\x3b\xb2\x9d\x2d\x68\x95\xff\xde\xf1\x47\xb2\x71\xb2\x5b\x84\xd4\xd3\x6e\x3c\x33\xef\xbd\x19\xbf\x71\xdd\x30\x63\xe0\xbc\xb3\x56\x49\xd8\xad\x00\x5a\x2d\xb6\xcc\x22\x60\x83\x1b\x94\xb6\x82\xef\xb7\xd7\x57\x97\xe1\x63\x3d\x89\xd7\x8d\x32\x78\xf9\x46\x12\x17\xa6\x65\xb6\x7e\x42\x5d\xc1\xe5\x96\x82\x17\xe3\xc1\x34\xcd\x58\x66\x3b\x83\xa6\x82\x1d\xdc\x49\xb6\xc1\x8a\x8e\xb4\x90\x8f\xf7\x15\xfc\xf4\xb1\x73\xf5\xb2\x86\x7e\xbd\xa2\xa2\x5a\x49\x0a\x76\xb5\x55\x3a\x2f\xbc\x64\x00\xfb\x24\x4c\x19\x15\xc3\x57\xe0\xaa\xee\xdc\xdf\xb2\xd6\x48\xf8\x51\x58\x9e\x71\xb1\xcd\x8a\xf5\xa2\xa2\xf4\x43\xb8\x21\x5e\xaa\xcd\x54\x8b\xf2\xe3\x83\x1f\x48\x76\x20\x97\x71\xee\x3b\xb9\x12\xc6\xa2\x44\x9d\x67\x75\x23\xea\xe7\xec\x34\xa4\xb9\xea\xf2\x41\x48\x9e\xbb\xcf\xa2\xf0\x92\x23\xc4\x74\x64\xef\x50\x39\x2d\x4b\xa5\xfa\xc8\x01\xad\x49\x05\x6b\x49\x12\xff\xf6\x24\x1a\x9e\xcf\x28\x6f\xf1\xc5\xde\x28\x8e\x79\xf6\xab\xfb\xf4\xe5\xe2\x73\x56\x1c\xe5\x7d\xa3\x6d\x9f\x9b\xf6\xbd\x9c\xdc\x44\xc8\x82\x20\x19\xd4\xde\x36\xd4\xa5\xc4\x3f\x73\xef\xe4\x49\xf6\xe0\x1e\xca\xdd\xf5\x8e\xb7\x77\xc1\x85\xe0\x67\x7c\x1d\x6c\x75\x0a\x4d\x3c\x8d\xb6\x1c\x92\xc8\x4f\x73\x05\xcb\xce\x09\x68\x0f\x50\x90\x2d\x89\x6d\xc8\xf7\x99\x29\x15\xd3\x8f\x91\xa5\xa8\x80\xc9\xd7\x03\x14\x8b\x6a\x5f\x15\xa1\x35\x6e\xd4\x16\xff\x4f\x2f\x47\xb0\x66\xed\x10\xa9\x41\xfb\x43\x8b\x47\x21\x73\xe5\x7f\x2a\x08\x9f\xc3\xc2\x6d\x99\x8e\x5b\x4b\x9b\x49\x83\x4f\x2e\xe2\x2e\xd4\x94\x6e\x93\xef\x83\x11\xc4\x6f\xc8\x3f\x8c\x05\x03\x0a\x24\x18\xee\xa2\xc7\x6d\x8f\xbc\xd1\x47\x93\xc4\xb2\xed\x6c\x3e\xf5\xd5\xe0\x05\xf8\x87\x08\x42\x1f\x01\x02\x62\xbf\x4a\x51\xe7\x0d\x17\xa3\x91\xea\x06\x99\x0e\x31\x33\x3e\x38\x67\x67\x60\x15\x57\x55\x44\x18\x72\xdd\xf6\xe7\xf4\x7a\x5d\x2b\x92\x90\xdc\xf9\xd2\xdc\xe1\xb2\xfd\x73\x43\x5b\x84\x53\x42\x5a\x8b\x77\xa2\xf8\x9a\x14\xc6\xcd\xa9\x65\x7a\xfe\x3c\x0f\x1d\x84\xd0\x72\x29\xf7\x53\x8d\x38\x9c\x4e\x2c\x8e\x9d\xbb\x9b\x4c\x9e\xdb\x93\x93\x74\xcd\x03\xb0\x7b\x56\x8a\xdd\xf4\x62\x96\xf1\x68\xc7\x23\xe4\xe1\x8e\xfa\x55\xbf\xfa\x1b\x00\x00\xff\xff\x57\xdf\x50\x43\xa4\x06\x00\x00")

func button_ts_bytes() ([]byte, error) {
	return bindata_read(
		_button_ts,
		"button.ts",
	)
}

func button_ts() (*asset, error) {
	bytes, err := button_ts_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "button.ts", size: 1700, mode: os.FileMode(420), modTime: time.Unix(1435907487, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _control_box_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x55\xdd\x6e\xe3\x2c\x10\xbd\xef\x53\x20\x5f\x54\x8e\xd4\xfa\x05\xa2\xef\xa6\xfd\x72\xb7\xdb\xdd\x57\x20\x30\x89\x51\x09\x20\x18\xa7\x5b\xad\xfa\xee\x8b\xc1\x7f\x04\xdb\xc9\xaa\xab\xfa\x22\x0a\xc3\xcc\x39\x67\x06\x66\x38\x53\x4b\x9e\xb5\x42\xab\xe5\x93\xfe\x45\xfe\x23\xe5\xa1\x51\x0c\x85\x56\xa4\xdc\x90\xdf\x77\xc4\x7f\x83\x65\x74\x1c\xf6\xda\x0f\x6b\xe1\x2a\x90\x70\x02\x85\x1e\x81\x6b\xd6\xb4\x7f\x2b\x66\x81\x22\xec\xe2\x46\x59\x70\x71\x2e\x36\xdb\xd9\xa8\x8a\x49\xea\xdc\x0b\x3d\x81\x8f\x2f\x58\xa4\x79\xdc\x7b\x41\xb5\xe0\xf0\xa8\xad\x38\x0a\xe5\x8a\x8b\xe0\xce\x1c\x75\x2b\x78\x23\x3f\x06\x43\x79\x49\x34\xfa\x56\x94\xf3\xdd\xd9\x93\x7e\x13\x0e\x41\x81\x2d\x0b\xe7\x65\x30\xdc\x29\x6e\xb4\x50\x58\x3c\xc4\x90\xd4\x5a\xed\x85\xe2\x65\xbb\xb1\x59\xc1\x36\x0d\x96\xd3\xc4\x2e\x5d\xf7\x0d\xa2\x2f\x64\x94\xfb\x14\x16\x99\xd4\xe8\x73\x23\xd4\x4c\x36\xda\x80\x1a\x72\xa8\xf5\xdb\x77\x50\xcd\x8a\xfa\xfe\x08\x72\x20\x26\x05\x7b\xed\x91\xda\x83\xb8\x82\xb4\xa8\x88\x49\xed\xa0\x07\x0a\x8b\x15\x14\x2e\x9c\xa1\xc8\x6a\xb0\x5d\x99\x02\xd8\xff\x83\xb5\xaf\xd7\x47\xf8\x1d\xaf\x64\x65\xac\x46\x8d\xef\x06\x32\x05\x1e\x68\xbc\xd5\xaf\xf0\xfe\x40\x64\xb7\x93\x5d\xe3\x91\x3d\xcf\x23\x8d\xec\x54\x6c\x97\x65\xf4\x58\x01\x25\xd7\x40\xed\x71\x8d\x3e\x89\x1e\x23\xae\xd3\x5a\x38\xe9\x33\xfc\x83\x02\xcc\x00\xfd\x75\x0d\x1c\x60\xec\xca\x44\x42\xec\x98\x8c\x7b\xd2\x48\x43\x5c\xef\x3b\x7f\xd7\x16\xdc\xd6\x14\x31\x09\xd4\x76\x93\x22\x11\xb5\x26\x27\x04\x95\x37\xe5\x3b\x1d\x1a\x09\x3e\x2c\xd6\x3a\x1e\x71\x3e\x86\xe0\x16\xc2\xae\xc3\xaf\x50\x5d\x1d\xb4\x2d\xce\xcc\xa0\x05\x4f\x05\xa1\x01\xe1\x40\x1b\x89\xd3\x69\xe5\xc9\x51\x9b\x9f\x56\x1b\x7a\xa4\x2d\xf1\x74\xd3\x02\x36\x56\x91\x03\x95\x0e\x6e\x39\x14\x3f\x14\x3e\x9b\x42\x00\xe1\x5f\x2f\xbe\x1f\x8d\x9f\xd5\xbf\xf0\xd6\x7d\x51\x16\xfe\xbd\x49\x12\x30\xd4\xb6\xaf\xce\x24\x8b\x68\xa9\xa8\xf1\x0f\x0c\x7f\xae\x85\xe4\x73\x0f\xd4\xea\x44\xf4\xae\x08\x8b\x5d\x27\x0e\x24\x41\x24\xf7\xf7\x69\xe9\xa2\x82\x17\xcd\x93\xea\x66\x15\x1e\xdd\xba\x19\xb6\x28\x36\x08\x9e\xca\xee\x6a\x36\xaa\xdf\xde\x7d\x6c\xda\xa2\xfe\x09\x00\x00\xff\xff\x60\xa6\x6e\x5c\x29\x09\x00\x00")

func control_box_js_bytes() ([]byte, error) {
	return bindata_read(
		_control_box_js,
		"control_box.js",
	)
}

func control_box_js() (*asset, error) {
	bytes, err := control_box_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "control_box.js", size: 2345, mode: os.FileMode(420), modTime: time.Unix(1435907756, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _control_box_ts = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x55\x4d\x6e\xdb\x3c\x10\xdd\xfb\x14\x03\x2d\x02\x09\x48\x74\x00\x19\xdf\x26\xf9\x0c\x74\x11\xa7\x5d\xf4\x02\x34\x39\xb6\x89\xc8\xa4\x40\x52\x4e\x03\xc3\x77\x2f\x45\x52\x16\xa9\x9f\xa2\x45\xbc\x92\x44\xce\xbc\xf7\xe6\x57\xb4\x26\x5a\xc3\x8b\x14\x46\xc9\xfa\x59\xfe\x82\xcb\x0a\xa0\x51\xfc\x4c\x0c\x02\xd6\x78\x42\x61\x2a\xf8\xf6\x73\xfb\xba\xf1\x1f\xeb\x55\x64\xb0\x6b\x8d\x91\xa2\x82\x67\xf7\x5c\x47\x37\x52\xf1\x03\x17\xda\x22\x56\xf0\xfd\xf6\x9e\x38\x33\xae\x1b\x62\xe8\x11\x55\x05\x9b\xb3\x85\xfe\xff\x76\xe0\xec\xa8\x14\xda\xa8\x96\x1a\xa9\xf2\xa2\x93\x05\x60\x8e\x5c\x97\x41\x15\xfc\x07\x4c\xd2\xb6\x7b\x2d\xa9\x42\x8b\x18\x14\xe6\x19\xe3\xe7\xac\x58\x4f\x3c\x4a\x17\xec\x1b\x39\xa1\xf5\xcd\xa8\x8f\xf9\x69\x67\x83\x3e\x72\x86\x4f\x41\x72\xe6\xc8\x83\xe7\x10\x86\x75\x11\xf8\x11\xc5\x92\xc7\x0c\x83\x5d\x49\x18\x73\xd1\xbc\x72\x6d\x50\xa0\xca\x33\x6d\xf9\xa9\xd9\x08\xd6\x48\x2e\x4c\xf6\xe8\x5d\xd2\xd3\x72\xc7\x05\xcb\xbb\x8b\x62\x01\xb7\x69\x4d\x1e\x47\x53\xc4\x3a\x7d\x21\x82\x46\x5f\x8d\x44\x9f\xbf\xff\x1b\x8c\x19\xfd\xb2\x41\x71\x53\x7d\x94\x1f\x5b\x14\xed\x82\xde\x3e\xd3\x53\x10\x5a\x73\xfa\xde\xa3\x74\xf9\xfe\x03\xca\xa2\x12\x5a\x4b\x8d\x3d\x88\xfb\x48\x11\x06\x88\xa1\xb9\x42\x52\x46\x1d\xe6\xb3\x73\xed\x3c\x26\x34\xef\xf8\x59\x81\x6d\x3d\x2e\x0e\x8f\x50\x87\xd3\xd0\xa3\xbd\x51\x01\x97\x31\xd1\x54\xaf\x05\x1a\x00\x8a\xb5\xa5\x83\x5b\xd7\x3b\xcb\x94\x8a\xa8\x43\x60\x29\x2a\x20\xe2\x73\x86\x62\xe2\xed\xbc\x02\xb4\xc2\x93\x3c\xe3\x7d\x62\x59\xc0\x1a\x85\x63\x49\x35\x1a\x3f\x13\xb9\xef\xd5\x7e\xdc\x0b\xb8\xcc\xb6\xf1\xd8\x7e\xa6\xee\xb3\x26\x8e\x8c\xd6\x48\x54\x18\xc1\x7c\x89\xc1\x19\x45\xf5\x4d\x07\x2d\xc7\x3e\xc7\xb1\x7b\x9a\xd7\xe9\xc4\x62\x04\x17\x26\xa0\x03\xda\xca\x56\x63\x52\xb1\x7f\x58\x3a\x1d\x50\xb4\x74\x3a\x47\x2c\x1b\x85\xae\x51\x71\x4f\xda\xda\xf4\x33\x8c\xa5\x36\xb2\xf9\xa1\x64\x43\x0e\xc4\xf0\x61\xb8\x15\x9a\x56\x09\xd8\x93\x5a\x63\x94\x25\x3b\x18\x5f\x96\xe7\x50\xd8\x5d\x85\xf5\x63\xff\x65\x6d\xa3\x7d\x7d\x3f\x85\xdd\x82\x6c\x88\x1a\xff\xf4\xc2\xef\xc7\xdf\x94\xa4\xb1\x0b\x91\xbd\x1c\x79\xcd\xc6\xdb\x34\xc0\x30\x7b\x62\xf0\xd6\xa1\x7c\x0f\x89\x21\x3c\x3c\xa4\x81\x7a\xe0\x37\xc9\x30\x30\xc1\xd2\x7d\x18\xcc\x05\x72\x70\x7b\xe0\xba\xba\xae\x7e\x07\x00\x00\xff\xff\xa6\x00\x75\x7c\xd8\x07\x00\x00")

func control_box_ts_bytes() ([]byte, error) {
	return bindata_read(
		_control_box_ts,
		"control_box.ts",
	)
}

func control_box_ts() (*asset, error) {
	bytes, err := control_box_ts_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "control_box.ts", size: 2008, mode: os.FileMode(420), modTime: time.Unix(1435907487, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _endpoint_box_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x55\x4d\x6f\xdb\x30\x0c\xbd\xf7\x57\x68\x3e\x14\x0a\x10\xf8\x0f\x04\xbb\x6c\xcb\x69\x43\xb1\xc3\x6e\xc3\x0e\x9a\xcd\x24\x42\x1d\x49\x90\xe8\xac\xc5\x90\xff\x3e\x2a\x92\x6d\xc9\x1f\x85\x03\xac\x3e\x14\x02\xf5\x48\xbe\xc7\x3c\xb1\x17\x61\xd9\x5e\xd5\x46\x4b\x85\x9f\xf4\x0b\xfb\xc8\xf8\xa1\x55\x15\x4a\xad\x18\xdf\xb0\xbf\x0f\x8c\xbe\x3e\x92\x20\x39\xc4\x73\x07\xf2\x1f\x9e\xa4\x2b\xa1\x81\x33\x28\xa4\x52\xb5\xae\x5a\x7f\x2c\x2b\x0b\x02\x61\x1f\x2e\x78\x81\xb6\xd8\xec\x66\x93\xca\xaa\x11\xce\x3d\x89\x33\x50\x7a\xd1\xb5\x28\x46\xe0\x67\x78\x0d\x5c\x17\x1b\xd4\x93\x06\x21\x27\xaf\x4f\xb1\xf9\xd2\xa5\xa8\xeb\xfd\x85\x4a\x7d\x93\x0e\x41\x81\xe5\x45\xd5\xc8\xea\xb9\xd8\x06\x94\x23\xba\x15\x96\xbf\xa5\xaa\xb9\x0f\x6c\x96\xe4\x08\x63\x48\xc4\xe7\x93\x6c\x02\x30\xd6\x1f\xc3\x5b\xdb\xdc\x2d\x28\xe4\xe4\x82\x28\x36\x16\x14\x61\xef\x26\x28\xd4\x1f\xc3\x6b\xe9\x8c\xc0\xea\x04\x96\x68\x29\xf8\xc3\x6e\xcd\xbf\xf4\x51\x3e\x4e\x70\x80\x9d\xb9\x06\x67\x05\xcc\xf5\xf6\x37\xb1\x5e\x69\xac\x46\x8d\xaf\x06\x26\xb2\xa8\xdb\x60\x5f\x9a\xf5\x96\x35\xf1\x66\x62\xd3\x81\xe2\x74\x38\x79\x66\xa4\xb1\x7b\x83\x47\x57\xec\x56\x66\x4a\x42\xd8\xe3\x5b\xfd\xb3\xec\x21\x63\x45\x5f\x0b\x67\x7d\x81\xff\x30\x82\x99\x42\xf7\x4f\x21\xf9\x11\x33\x16\x73\xab\x42\x1e\x18\xff\x30\x77\xe1\x3f\x0b\xd8\x5a\x35\x58\xe4\xda\x9f\xa8\xc5\x0f\x78\xc1\xf4\x31\x6d\x59\x57\xc6\x07\x12\x63\x65\xd8\xe0\xd3\x04\x4b\x81\x89\xc9\x07\xf2\xdd\x71\x85\xea\xe3\x82\xea\x54\x54\x10\x94\x77\x59\x35\x50\xff\x2c\xf3\x59\xa6\x65\xe1\x67\xbf\x23\xbf\xd2\x2e\xfb\x45\xc8\xac\x85\x1f\xc8\xc2\xcb\x0c\x5e\x2b\x42\x07\x5a\x03\x90\x0c\x03\x88\x02\xdc\x1e\x2c\x1c\x44\xdb\x20\xcf\xee\x1c\x6a\xf3\xdd\x6a\x23\x8e\xc2\x53\x4a\x2f\xa3\xcc\x83\x68\x1c\xac\x90\x67\xda\x5c\x9b\x11\x16\x72\x33\x84\xc8\x74\xeb\xc4\x75\xb4\xea\x69\x12\x16\x61\xf1\x97\xf1\x3e\xcc\xfe\x6d\x3d\x3e\xe6\x1b\x2f\x50\x78\xd2\x35\x8c\x5d\xba\x00\x8b\x6f\x69\x91\xed\x60\xe8\xc8\x3b\x4e\x2d\xa1\xbf\x7b\xb8\x6e\xfc\x5c\xff\x05\x00\x00\xff\xff\x03\x62\xc2\x03\x9e\x07\x00\x00")

func endpoint_box_js_bytes() ([]byte, error) {
	return bindata_read(
		_endpoint_box_js,
		"endpoint_box.js",
	)
}

func endpoint_box_js() (*asset, error) {
	bytes, err := endpoint_box_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "endpoint_box.js", size: 1950, mode: os.FileMode(420), modTime: time.Unix(1435907756, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _endpoint_box_ts = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x55\xc1\x6e\xdb\x30\x0c\xbd\xe7\x2b\x38\x1f\x0a\x19\x08\xfc\x01\x31\x76\xd9\x56\x60\xc0\xda\x62\x87\xde\x86\x1d\x34\x9b\x49\x84\x3a\x92\x20\xc9\x59\x8b\x22\xff\x3e\x5a\x92\x1d\xcb\x4a\x82\x1d\xb6\x5b\x42\x3e\x3e\x3e\x4a\x8f\x72\xd3\x71\x6b\xe1\x5e\xb6\x5a\x09\xe9\x3e\xa9\x57\x78\x5f\x01\x68\x23\x8e\xdc\x21\x60\x87\x07\x94\x6e\x03\x5f\x9f\x1f\x1f\xee\xc3\x9f\x7a\x96\x97\xfc\x80\x54\x73\x35\xff\x82\x6f\xb7\xd2\xbd\xe9\x6e\xa5\x31\xaa\xda\x4c\xfa\xea\xd5\x2c\xdd\x0a\xab\xb9\x6b\xf6\x68\x08\x70\xa4\xda\x2f\x53\xc0\xe3\x1a\x25\xad\x33\x7d\xe3\x94\x61\x39\x55\x39\xcc\x09\xe0\xf6\xc2\x56\x71\x4c\xf8\x08\xad\x6a\xfa\xe1\x67\xd5\x18\xa4\x1e\x51\x14\x2b\x9c\x29\xca\x3a\x2b\xa8\xfc\xe9\x3d\xd1\x21\x50\x69\x31\xf6\x28\x7c\xf7\x88\x0c\x27\x70\x8b\xb9\x4d\x98\x03\x3e\x25\xa6\x58\x91\x43\x78\xdb\xfa\xa9\x1f\x84\x75\x28\xd1\xb0\xa2\xe9\x44\xf3\x52\xac\x03\xca\x92\xc6\xc6\x55\xbf\x84\x6c\xd9\x10\x28\x2f\xe9\xe7\x5a\x93\xea\xcf\x7b\xd1\x05\x50\xe4\x2e\xe7\x13\x84\x4b\xfa\xfb\x09\x02\x3e\x9d\x80\x62\x45\x0e\xf9\x2f\x13\x04\xee\x64\x82\xb3\x51\x48\x8b\xc4\xdf\x4b\xb7\xb0\x04\x6d\xd1\x8d\x1e\x99\x6c\xe3\x3b\x9f\x06\x50\xa6\x99\x4e\x6c\x03\xe4\x33\x21\x77\x6b\xe8\x62\x34\x1a\x72\x04\x95\xf0\xbe\x54\x92\x0f\x4f\x44\x67\x82\xb2\xa6\x76\x30\x59\xdc\x23\xd3\x56\xdc\xec\x62\x97\x72\x03\x5c\xbe\x5d\x68\x91\x55\xfb\xaa\x48\x6d\xf0\xa0\x8e\xf8\x6f\x66\xb9\xc2\xb5\x18\x87\x9a\x5e\x3a\xdb\xd9\x4a\x42\xd8\x49\xb1\x05\xf6\x01\x17\xc1\x41\xb1\xeb\x8d\x0c\x1e\x38\x85\x0b\x23\xbe\x67\x7c\x75\x73\xef\xae\xa7\x67\x63\x08\x44\xcb\x24\xb8\xe0\x90\x19\x8e\x02\x89\x03\xc6\x04\xb9\x05\xa7\x87\x27\xf6\xdc\xcd\x26\x28\xcf\xd2\xa3\xc8\x20\x31\x65\x99\x4a\x83\x9f\x19\x6e\xe0\x51\xf5\x16\x93\xbb\xf3\xd5\xf8\x63\x7a\x43\xbe\xd1\xca\xff\xa4\xfe\x09\xd3\x30\x50\x9d\xdb\x3a\x5c\x6f\x11\xe8\x69\x79\x70\x1c\x06\x2b\x6d\xd0\x5b\x1d\xb7\xbc\xef\x1c\x8b\xa7\x81\x95\x75\x4a\x7f\x37\x4a\xf3\x1d\x77\x42\xc9\x31\x11\xe5\x6f\x79\x67\x71\x92\xad\x7b\xc7\x34\x37\xcb\xcf\x40\x7c\x3f\x43\x26\x5f\xc3\xb8\x9f\xe7\xc5\x69\x29\xe2\x90\xcd\xef\x38\x79\x7b\xef\xee\xd2\xc5\x0e\xc4\x4f\xaa\xc5\x72\x34\xc0\x95\x7c\xb4\xdf\x95\xe6\xe0\xdd\x7e\x5a\x9d\x56\x7f\x02\x00\x00\xff\xff\xc6\x28\xa4\x77\xeb\x06\x00\x00")

func endpoint_box_ts_bytes() ([]byte, error) {
	return bindata_read(
		_endpoint_box_ts,
		"endpoint_box.ts",
	)
}

func endpoint_box_ts() (*asset, error) {
	bytes, err := endpoint_box_ts_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "endpoint_box.ts", size: 1771, mode: os.FileMode(420), modTime: time.Unix(1435907487, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _endpoints_box_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x95\xc1\x8e\xdb\x20\x10\x86\xef\x79\x0a\xea\xc3\xca\x91\xb6\xbc\x40\xd4\x4b\xdb\xdc\xaa\x55\xef\x55\x0f\xac\x19\x6f\x50\x09\x20\x18\xa7\x5d\xad\xfc\xee\x05\x63\x07\xb0\x1d\x6f\x54\xd5\x87\x95\x97\x61\xfe\xf9\x66\xf8\x4d\x2e\xcc\x92\xa3\xe2\x46\x0b\x85\xee\xb3\xfe\x43\x3e\x91\xba\xed\x54\x83\x42\x2b\x52\xef\xc9\xdb\x8e\xf8\xe7\xba\x92\x6f\xbd\x46\xc3\x83\x27\xe1\x28\x48\x38\x83\x42\xaf\xc1\x75\xd3\x85\x57\xda\x58\x60\x08\xc7\x18\xa8\x2b\x64\xcf\x12\xaa\xfd\x61\x35\x8f\x36\x92\x39\xf7\xc4\xce\xe0\x15\x2a\x29\x1c\x7e\x84\xa9\x5e\x35\x4b\xe1\xc2\x19\x86\xcd\x09\xac\xdf\xab\xe0\x37\x39\x5e\xbc\xc2\xd7\xeb\x6a\xbd\xa8\x31\x29\xf9\xfd\x6f\x7d\x0c\xf6\xc3\xdf\xbc\x27\x6a\xac\x46\x8d\xaf\x06\x28\xe3\x7c\xd0\xfc\xe6\x39\x40\x0d\x75\xd2\x60\x7e\xc1\xeb\x23\x91\x63\x64\x31\x87\x04\xb7\x50\x99\x65\x8e\x1c\x87\x2d\x90\x49\x6d\xd0\x59\x52\x30\xfb\xb2\x05\x50\x64\xa7\x8c\x7b\x0a\x5b\x38\xeb\x0b\xfc\x87\x21\xac\x08\xfd\xc3\x1c\x1c\xe0\x14\x29\x30\xa6\x93\xcd\x09\x82\xad\xa7\xf5\xe8\xea\xd2\x04\x3f\xa6\x37\xea\x39\x7e\x26\xab\x88\x96\xd4\x1f\xb2\xc4\x5c\x33\x3c\xa5\xe6\xe0\xbb\xb4\x92\x48\x0e\xb7\x92\xa8\xe9\xb0\xce\x3d\xbf\xb1\x75\x61\x9d\xca\xf9\xa4\x06\xab\xc7\xd8\x4c\xfc\x8f\x3e\x0b\xc5\x07\xc9\xfd\x4c\x6b\xab\x63\x0f\x9f\x95\x4a\x79\xfd\x6e\x8d\x24\x9b\xfc\xbc\xc7\xf7\x8e\x2c\x20\x96\xa7\x75\xd3\x28\xd1\xa1\xa9\x49\xc8\xfa\x01\x2f\x0a\xc3\x17\x0e\x2d\xeb\x24\xd6\x45\xcc\xa1\x36\xdf\xad\x36\xec\x85\x85\x22\x79\xd0\x02\x76\x56\x91\x96\x49\x07\xf7\x10\x37\x12\x58\xe9\xf2\x9c\xb7\xd5\x96\xd4\xc1\x5b\x7e\x86\x44\xa8\xd9\x88\xe7\x66\x99\x1d\x40\x98\x3b\xe5\xbe\x3b\x84\x9c\xb0\xbf\xe3\x9e\xda\x44\xf6\x96\x2a\x80\x0d\xb3\x50\x7e\x0d\x71\x85\x32\x63\xbc\xfa\x97\x93\x90\x7c\xcd\x83\xef\xdc\x42\x03\xf8\xcd\xc9\x84\x0f\xa7\xf8\x0d\x78\x78\x28\xef\xf6\xc8\xf0\xa4\x39\xac\x8f\x69\xb1\x6d\xbc\x35\x6e\xe2\xa6\xd9\x8d\xe0\xe3\x51\xe7\xfc\x87\x5d\xbf\x0f\xb3\xfe\x1b\x00\x00\xff\xff\x89\xe5\xfa\xcf\xe6\x06\x00\x00")

func endpoints_box_js_bytes() ([]byte, error) {
	return bindata_read(
		_endpoints_box_js,
		"endpoints_box.js",
	)
}

func endpoints_box_js() (*asset, error) {
	bytes, err := endpoints_box_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "endpoints_box.js", size: 1766, mode: os.FileMode(420), modTime: time.Unix(1435907756, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _endpoints_box_ts = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x54\xcb\x6e\xdb\x30\x10\xbc\xfb\x2b\xb6\x3a\x04\x12\x90\xf2\x03\x64\xe4\xd2\x36\x40\x0f\x49\xd0\x43\x6f\x41\x0e\x8c\xb4\x8e\x89\xca\x24\x41\x52\x6e\x03\x43\xff\xde\x15\x1f\x7a\x50\x0e\x7a\xe9\xcd\x16\x67\x67\x66\x77\x87\x6c\x3a\x6e\x2d\xdc\xcb\x56\x2b\x21\x9d\xfd\xa2\xfe\xc0\x65\x07\xa0\x8d\x38\x73\x87\x80\x1d\x9e\x50\xba\x1a\xbe\xff\x7c\x7c\xb8\x0f\x7f\xf6\xcb\xf3\x54\x58\xc3\x05\x9e\x7f\xe1\x7b\x0d\xd6\x19\x21\xdf\x5e\xea\x89\x94\x38\xf7\x30\xec\x77\x8b\xb2\x56\x58\xcd\x5d\x73\x44\x43\xb0\x33\x71\x7e\x9b\x3e\x78\x5c\xa3\x24\xd1\xf4\x8d\x53\xa6\xac\x46\x3f\x00\xee\x28\x2c\x8b\x76\xe0\x0e\x5a\xd5\xf4\xe3\x4f\xd6\x18\x24\xc6\x68\xad\x2c\x1c\x7f\xed\xb0\xa8\xf6\x9b\x1a\xe6\x3b\x7d\xe2\x27\xa4\xea\xa2\x13\xd6\x7d\x9e\xcc\x17\x5e\x34\xe2\x67\x6f\x04\x94\xf8\x3b\x37\x58\x56\x4b\xf4\xc4\x41\xe0\xcb\x30\xca\x0e\xe3\x29\x6f\x5b\x5f\xf6\x40\x3a\x28\xa9\x68\x31\x9a\x5b\xe8\xe2\xd7\xd8\x7c\x02\x55\x34\xc3\xcc\x02\xbb\x46\x34\x13\x54\x34\x58\x52\x4b\x78\x8f\x5c\x4b\x71\xf3\x16\x55\xaa\x1a\xb8\x7c\xbf\x22\xb1\xa9\xf6\x55\x91\xda\xe0\x49\x9d\xf1\xff\xf4\xf2\x01\x57\xd6\x0e\x89\x5a\x74\x29\x3c\x65\x1a\xf0\x9c\xa7\x0a\x42\x22\xce\xdc\x4c\xf9\x1b\x73\x7b\x97\x6d\xe4\x39\xfd\x62\x24\xf2\x12\x12\x21\x0e\x50\x7e\x5a\x14\x25\x2e\xc8\x98\xfc\xde\xe7\x2f\x93\x8b\x18\xac\x15\x9c\xe9\xde\x95\xcb\xa8\x5d\x05\x6d\x16\x59\x58\x82\x37\xae\xb8\x0d\xb6\xc3\x3f\xf6\x2a\x64\xeb\xc9\xaa\x14\xb3\x3c\x68\xeb\xb6\xc8\xeb\x42\x25\x08\x0f\xbb\x5c\xfc\xda\x40\xab\x29\xac\x41\xba\xc4\x1a\x1e\x55\x6f\x71\x95\x96\xed\xbd\x08\x31\x99\xdd\x63\x32\x8a\x4c\x1b\xf4\x77\x05\x0f\xbc\xef\x5c\x19\xe7\x80\xcc\x3a\xa5\x7f\x18\xa5\xf9\x1b\x77\x42\xc9\x74\x60\xd0\xf5\x46\xc2\x81\x77\x16\x27\x33\x4d\x87\x9c\xee\x58\x54\x3e\x28\x03\xe5\xb8\x68\xea\x15\x84\xcc\x46\x31\x6f\x2f\x1b\xd1\x38\x19\xd6\x92\x43\x87\x49\x6c\xf8\xe7\x9d\x1d\xd7\xa8\xb9\xc9\x9f\xbb\xf8\xfe\x84\x13\xc6\xb5\xa6\xf2\xaf\x47\xd1\xb5\xdb\x9d\x7b\x9a\x24\x1b\xbd\x8d\x89\x5b\xbd\x5d\x37\x37\xeb\x77\x29\x10\x3f\xa9\x16\xab\x75\x37\x9b\xf3\x78\x81\x3e\x10\x0f\x2d\x0e\xbb\x61\xf7\x37\x00\x00\xff\xff\x64\xe8\x78\x92\xd4\x05\x00\x00")

func endpoints_box_ts_bytes() ([]byte, error) {
	return bindata_read(
		_endpoints_box_ts,
		"endpoints_box.ts",
	)
}

func endpoints_box_ts() (*asset, error) {
	bytes, err := endpoints_box_ts_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "endpoints_box.ts", size: 1492, mode: os.FileMode(420), modTime: time.Unix(1435907487, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _event_dispatcher_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x52\xc1\x6a\xc3\x30\x0c\xbd\xf7\x2b\xd4\x9b\x03\xc3\x3f\x60\x7a\x5b\x6f\xfb\x83\xd2\x83\x69\x94\xc5\x2c\xb3\x83\xad\x04\x4a\xf1\xbf\xcf\x36\xa9\xeb\xb8\x1d\x81\xea\x10\x82\xf4\x9e\xf4\x9e\xe4\x59\x5a\x38\xce\xa8\xe9\x53\xb9\x51\xd2\xa5\x47\x0b\x07\x60\xdd\xa4\x2f\xa4\x8c\x06\xd6\xc0\x6d\x07\x21\x72\xa6\x42\x67\x40\x0c\xea\x95\xe3\x18\x01\x2e\x74\xb9\x79\x91\x2a\x3e\x7d\x2b\x1e\x1f\xad\x21\x43\xd7\x11\xb9\x6c\xdb\x54\xfc\x52\x8e\x50\x27\x01\x8f\xf9\x3f\x78\xfd\x80\x61\xa9\x94\xb3\xa2\xf2\x7b\xde\x89\x9c\x56\x1d\xb0\x7d\x64\x81\xd2\xa5\x9e\xa6\xe4\x56\x5a\x4f\x01\x7e\x0e\x53\x4f\xe7\x47\x1f\x9f\xff\xf2\x90\x80\xa8\x49\xe2\x19\xc5\xc7\xc9\xf5\x2c\x2b\x5e\x56\x20\x36\x76\xd0\x2e\xc9\x84\x78\x5e\x80\xb4\xdf\xa5\xfe\x68\xf2\x85\xc5\x0d\x87\xbc\x33\xf6\x28\x2f\x7d\x71\xdd\x21\x70\xc0\x22\x4d\x56\xc3\xc0\xe2\x14\x01\xbe\xa9\xb7\xb0\xa9\xde\xe2\xaf\x99\xf1\x8d\x23\xbe\x67\xe4\xc5\x21\x78\xa7\x06\x0a\xaf\x71\x6d\x6d\xd5\x25\xc6\xdd\x2a\xec\x0f\x59\x8f\x58\xa1\xfe\x75\xbf\x50\xab\x25\x88\x9d\x6f\x58\xa0\xfc\x05\x00\x00\xff\xff\x81\xd3\xa1\x62\x48\x03\x00\x00")

func event_dispatcher_js_bytes() ([]byte, error) {
	return bindata_read(
		_event_dispatcher_js,
		"event_dispatcher.js",
	)
}

func event_dispatcher_js() (*asset, error) {
	bytes, err := event_dispatcher_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "event_dispatcher.js", size: 840, mode: os.FileMode(420), modTime: time.Unix(1435907756, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _event_dispatcher_ts = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x92\x4d\x6e\x83\x30\x10\x85\xf7\x3e\xc5\xcb\xce\x96\x2a\x0e\x00\xa2\xab\x66\xd7\x1b\x44\x2c\x2c\x33\x04\xab\xd4\x20\xdb\x20\x45\x88\xbb\xd7\xfc\x36\x4e\xd3\x45\xbb\x41\x62\xfc\xfc\xde\x37\xe3\xd1\xc6\x93\xad\xa4\x22\x9c\x07\x32\xfe\x5d\x3b\x4f\x86\x2c\x46\x06\x70\x4a\xd7\xaa\x48\x21\xcd\x2d\x63\x13\x63\xaa\x91\xce\xad\xd5\x37\xed\x3a\xe9\x55\xbd\xa9\x3b\xab\x07\xe9\x09\x34\x9f\xb9\x14\x23\x2e\x1f\x74\x4b\xe1\xbc\xd5\xe6\x5a\xa4\x71\xc0\xa5\xc8\x30\x65\x2c\xdc\x53\xad\x09\x92\x5e\xf9\xd6\x72\xb1\x38\x01\xbe\xd6\x2e\x59\x8d\x90\x63\x0c\x42\x60\x9a\xc5\xb2\x2c\x23\x1b\x7e\x17\xf1\x82\x66\xab\x3e\x64\xed\xae\x83\xb4\x87\xc4\xfd\xe4\x59\x34\xba\x02\x3f\xcd\xae\xd0\xe6\x1e\x43\xec\x26\x11\xdc\xdc\x61\x11\x08\xf7\xdb\xd3\xf2\x3d\x32\xc2\xc9\xa3\x38\x8b\x15\x49\xd7\xbb\x9a\xef\xbf\xe2\xe8\xb3\xdc\x66\xbb\x30\xc6\x4d\x4a\x7b\x8d\x9e\x65\x3c\xb8\x9f\x50\xff\x0a\x9d\x54\xad\x3d\x4b\x15\xb2\x91\xbf\xa2\xe1\xc1\x55\x88\xef\x26\x16\x08\x4b\x9f\xed\x40\xff\x9f\xf7\x5f\x99\x9e\x8c\x2b\xa9\x74\x13\x16\x74\xa5\x1c\x03\x91\xef\xad\x41\x83\x53\x7e\x84\x87\x3d\x8a\xc0\x27\xf6\x15\x00\x00\xff\xff\x64\x79\x7c\xc1\xd4\x02\x00\x00")

func event_dispatcher_ts_bytes() ([]byte, error) {
	return bindata_read(
		_event_dispatcher_ts,
		"event_dispatcher.ts",
	)
}

func event_dispatcher_ts() (*asset, error) {
	bytes, err := event_dispatcher_ts_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "event_dispatcher.ts", size: 724, mode: os.FileMode(420), modTime: time.Unix(1435907487, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _init_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x91\xc1\x6e\xc2\x30\x0c\x86\xef\x3c\x85\xd5\x53\x90\x50\x5f\x00\xed\x32\xc4\x69\xd3\xb6\x3b\xe2\x10\x1a\x33\x45\x0b\x76\xe5\xa4\xd0\x6a\xda\xbb\x2f\x81\x74\x04\x54\x16\x09\x11\xd9\x9f\x7f\xff\x7f\x7a\xb2\x64\xf8\x54\x6b\x63\xd6\x47\xa4\xf0\x6a\x7d\x40\x42\x51\x95\x63\x6d\xaa\x05\xec\x3b\x6a\x82\x65\x02\x85\x73\xf8\x9e\x41\x3c\x47\x2d\xd0\x0a\xf7\xc3\xca\xd9\x38\x02\x4f\x40\x78\x82\x8f\x6b\x45\xcd\x97\x7f\xe0\x8e\xfb\x0c\xac\x98\x82\xb0\x7b\xe6\x7e\xec\xc7\xde\xc4\x62\x8f\x0e\x9b\xb0\x26\xd3\xb2\xa5\x30\x6d\x21\x9d\xc2\x42\xdd\xb5\x46\x07\x7c\x17\xfb\x69\x49\xe1\xa6\xe2\xf3\xed\x4d\x1f\xb0\xda\x2e\x20\x16\x30\xcb\xbd\xe0\x90\x2a\x57\xc9\x0b\x59\xea\x8e\xce\x3c\x86\x2c\x98\x99\xe5\x0d\xe2\xb8\xd1\x49\xa2\x16\x4c\x4f\xa5\x82\x74\x58\x20\x3f\x37\xbe\x45\xee\x37\x34\x4c\x9e\x1d\xd6\xb1\xc5\x72\x06\x8a\xd9\x7c\x1f\xff\xcb\xa4\x2e\xbe\xd3\xc5\x96\x57\xf7\x29\x7c\xb9\x64\xcf\x02\x2a\x7d\x81\x2f\x1c\xc0\x12\x4c\x20\x8f\x92\xfa\x4d\x9c\xd9\x96\x86\x66\x25\xde\x76\x41\x19\x6e\xba\x43\xf2\xb3\x63\x33\x8c\x76\xff\x89\xfc\x28\x6e\x8a\x98\x7e\xbf\x01\x00\x00\xff\xff\xde\x2a\x37\xca\x87\x02\x00\x00")

func init_js_bytes() ([]byte, error) {
	return bindata_read(
		_init_js,
		"init.js",
	)
}

func init_js() (*asset, error) {
	bytes, err := init_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "init.js", size: 647, mode: os.FileMode(420), modTime: time.Unix(1435907756, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _init_ts = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x52\x4b\x4e\xc3\x30\x10\xdd\xf7\x14\xa3\xac\x1c\xa9\xca\x01\x40\x65\x41\xd5\x15\x08\xd8\x57\x5d\xb8\xf1\x14\x59\xb8\x33\x91\xed\xb4\x8d\x50\xef\x8e\x7f\x69\x22\x3e\xc2\x9b\x24\xf3\x9e\xdf\xc7\xce\x59\x93\xe2\x73\x23\x95\xda\x9c\x90\xfc\xb3\x76\x1e\x09\xad\xa8\x0c\x4b\x55\x2d\xe1\xd0\x53\xeb\x35\x93\xc0\xfa\x73\x01\x70\x92\x16\x3a\xcb\x97\x61\x6d\x74\xa0\xc3\x0a\x08\xcf\xf0\x36\x4d\x44\x7d\xbf\x28\xbc\x3d\x5f\x0a\xbe\x66\xf2\x96\xcd\x23\x5f\x22\x0c\x11\xf9\xc5\xd1\xa1\xc1\xd6\x6f\x48\x75\xac\xc9\x07\x6f\x84\xd5\x03\x44\x57\x98\x7b\x36\x7d\xa7\xa4\xc7\x57\xab\xdf\x35\x89\x84\x02\xe0\xb6\xe2\x34\x78\x91\x47\xac\x76\xcb\x69\x8c\x45\xef\x09\x87\x69\x3e\xb6\x02\x91\x77\xdd\x41\x96\xab\x8b\x5d\x5c\x31\xa4\x43\x5f\x7c\x32\x2f\xa5\xcf\xcb\x70\x2b\xa3\x44\x63\x31\x1e\x95\xf0\xb6\xc7\x1b\x7c\xfd\x69\x84\xd6\xce\xd5\x5b\x26\xc7\x06\x9b\x30\x66\x9b\xc0\xdb\xde\xf4\x4c\x9f\xd7\x7c\x98\xf3\xf2\x26\x1c\x57\x8e\xe4\x72\xf7\xdb\x05\xe5\x84\x6e\xac\xb2\xdd\xd5\xa3\xdb\x81\x2d\x88\x78\x23\x1f\x38\x80\x26\x28\xcc\xff\xca\xba\x6d\xe0\xef\xbe\xe5\xca\xd4\xae\xf7\x42\x71\xdb\x1f\x63\xa4\x3d\xab\xa1\xb0\x4a\xef\xe9\xa7\x09\xbd\x46\x93\xbf\x1a\x47\xdd\xf0\x1a\xbb\x7e\x05\x00\x00\xff\xff\xcf\x5a\x9c\xe1\x8d\x02\x00\x00")

func init_ts_bytes() ([]byte, error) {
	return bindata_read(
		_init_ts,
		"init.ts",
	)
}

func init_ts() (*asset, error) {
	bytes, err := init_ts_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "init.ts", size: 653, mode: os.FileMode(420), modTime: time.Unix(1435907487, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _layout_css = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x56\xc9\x6e\xdb\x3c\x10\xbe\xfb\x29\x88\x9c\xfe\xbf\x08\x05\xc9\x88\xd2\x44\x06\x7a\xe8\x73\xf4\x42\x89\x94\x45\x84\x26\x05\x92\x8a\x95\x14\x7d\xf7\x72\xd1\xbe\x78\x69\xbc\xc0\x02\x39\xe2\xcc\x7c\xdf\x6c\x74\x90\x09\xae\xa5\x60\x30\x15\x35\xf8\xbd\x01\xa0\x14\x8a\x6a\x2a\x78\x02\x72\x5a\x13\xbc\x33\xa2\xdc\x1c\x81\x8a\x7e\x92\x04\x6c\xc3\x52\x5b\xd1\x27\xa4\x1c\x93\x3a\x01\xaf\xfe\x63\x65\x9a\xd4\x1a\x22\x46\xf7\x46\x97\x91\x5c\x77\xaa\x39\x3a\x50\xf6\x91\x80\x77\x22\x31\xe2\xc8\xca\x31\x55\x25\x43\x46\x96\x32\x91\xbd\x59\x89\x28\x51\x46\xb5\x91\x84\xc1\xf7\xdd\xe6\xcf\x66\x33\x44\x16\x14\x14\x13\x28\x24\xdd\x53\xae\x1c\xcc\x54\x68\x2d\x0e\x0e\x50\x6d\xd5\xad\xc3\x76\x37\x55\x56\x85\x38\x8e\x94\xb5\x28\x8d\x9f\x5e\xcd\x2d\xcd\xfb\xa2\x5d\xb7\xd6\xfd\x06\x65\x6f\x7b\x29\x2a\x8e\x61\x26\x98\x90\x16\x34\xb2\xa0\xa7\x7e\x32\x26\x14\xc1\xce\x43\xc7\x8f\x0b\x4e\x66\x27\xc1\x0f\x10\x30\xaa\xf4\x84\x91\xc4\x44\x42\x89\x30\xad\x94\xa1\xe2\x79\xcd\x9d\x1f\x0b\xaa\xc9\xae\x57\x30\x62\x86\x4a\x65\x92\xd3\xae\xec\xcb\x12\x61\x4c\xf9\x3e\x01\xb1\xb7\xb3\x90\xd6\x6b\x42\x38\x8a\xff\x12\xfa\xf3\x84\x45\x49\x38\x4c\x2b\xe3\x93\x37\x7c\x6b\xa8\x0a\x84\xc5\x31\x01\x51\x59\xbb\x9f\x21\x0d\xe4\x3e\x45\xff\x85\x8f\xee\x1b\xc4\xff\x9f\x09\x42\x56\x49\x65\x05\xa5\xa0\x5c\x13\xb9\xdb\xac\x44\x72\x18\x92\x67\xcf\x77\x5e\x83\x8c\x72\x02\x0b\xe2\x0b\xa1\x0d\xcb\xb8\xfa\xe7\xb1\x99\x72\x33\x5b\xa5\x91\xae\x7c\x5c\x3a\xa7\xab\xf9\x94\x3e\x1b\x53\x62\xce\xed\xb1\xc1\xf2\x1a\x86\x13\x28\x51\x9b\xb4\x21\xe4\x28\xbe\x06\x5f\x60\x68\x23\xe6\x50\x36\xce\x31\x92\x06\x1c\xfa\x38\x13\xf3\x11\xb4\x68\x06\xed\x65\x09\xd9\xf6\x32\x64\xae\x85\x86\x55\xd2\xd7\xad\x24\x0c\x69\xfa\xee\x10\xb8\x06\x86\xd1\xf3\xb0\x70\xbb\xed\x38\xae\x2d\x02\x87\xf2\x48\xb1\x2e\x9a\xf5\x30\x98\xcf\x67\xc7\xc6\x42\x01\x9f\x2e\xf9\x99\xfa\xa8\x65\xac\x39\xb7\x34\xab\x6f\xc3\xf6\x77\xcc\x6c\x2b\x60\xd3\x9d\x66\x98\x0c\x53\xd2\xd4\x92\x3f\xf3\xd4\xf4\x75\x23\x6b\x9b\xf9\xe9\x12\x26\xcb\x50\x92\x9c\x4a\x23\xcf\x0a\xca\xf0\x22\xac\xcb\x66\xd9\x90\x5a\xc0\xd1\x81\x38\x3b\x4b\xe5\xdc\xf5\xc6\x93\x6d\xff\xb5\xde\x5a\x37\x4e\x38\x76\x6d\x0f\xdf\xc8\xc7\xb0\x8c\x9b\xcc\xdf\xd2\xfc\xa9\x5e\xf9\x27\xa3\x93\xe9\x10\x5e\x0b\xd0\x4f\xe4\xde\xda\xba\x69\xcb\x3e\xfc\x0a\x75\x45\x18\xc9\x34\x4a\x99\xcf\xe4\x6c\xe2\xde\xc2\x72\x52\x08\xf3\xef\x60\x1a\xdf\x94\x55\x64\x65\x68\xda\x4b\x62\xbb\x0d\x1f\x81\x7f\xc4\xf1\x23\xf0\xb7\xc5\x4d\xd0\xa0\xcc\x4e\x9a\x21\x9c\xfe\xd6\x5d\xc6\x12\x59\x04\xee\x71\x73\x2c\xb9\x6e\x22\x73\x40\xd2\x9c\x85\x7e\xdc\xc5\xed\xb0\x33\x49\xe0\x66\xff\xf0\x6b\x1b\xff\x7c\x79\xb8\xc6\x69\xe7\xb2\xeb\xf6\x2f\xe4\x76\x6e\xec\x8e\x13\xed\x12\x1c\x37\x1f\x67\xbd\x65\x5f\xac\x9d\xcd\xbb\x54\x67\xef\xad\x29\xc6\xbb\xba\x3b\x39\x4e\x5a\xad\xf1\x80\x99\x5d\x7f\x7f\x03\x00\x00\xff\xff\x1c\x10\xf0\x37\x4b\x0c\x00\x00")

func layout_css_bytes() ([]byte, error) {
	return bindata_read(
		_layout_css,
		"layout.css",
	)
}

func layout_css() (*asset, error) {
	bytes, err := layout_css_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "layout.css", size: 3147, mode: os.FileMode(420), modTime: time.Unix(1429005731, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _origin_box_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\x3f\x6f\xdb\x3e\x10\xdd\xf3\x29\xf8\xd3\x10\xc8\x48\x22\xe0\x37\x1b\xed\xd0\xd6\x53\xd3\xb4\x28\xda\x29\xc8\xc0\x48\x67\x8b\x88\x42\x0a\x24\xe5\xc4\x28\xfc\xdd\x4b\x8a\xa2\xc4\x7f\xb2\x1a\x23\x1a\x0c\x99\xbc\x7b\xef\xdd\xf1\x78\xa7\x3d\xe6\xe8\x3b\x27\x3b\x42\x3f\xb1\x57\xf4\x01\xe5\xdb\x8e\x96\x92\x30\x8a\xf2\x15\xfa\x73\x81\xd4\x33\xae\x8c\x76\x39\xeb\xdf\xac\x81\x7e\x64\x4d\x44\x01\x0d\x3c\x03\x95\x0a\xa6\x62\x65\xa7\x5f\x8b\x92\x03\x96\xb0\x31\x1b\x79\x26\x79\xb6\x5a\x27\x9d\x8a\xb2\xc1\x42\xdc\xe1\x67\x50\xee\x99\x21\x40\x35\xa9\xe0\x06\x68\xd5\x32\x42\xa5\xc8\x02\x4f\xaa\x8c\x37\xcb\x94\x55\x44\xe9\x38\xfa\xb4\x7a\x23\x64\xb1\xfa\x70\xdb\x2a\x25\x9f\x6b\xd2\x54\x79\x88\x12\x12\x3c\xc1\xe1\x2c\x61\x93\x9f\xaf\xcb\xa6\xe0\x46\x19\x84\xfa\x1c\x1f\x5c\x55\x9b\xbd\x7a\xb9\x25\x42\x02\x05\x9e\x67\x65\x43\xca\xa7\xec\xda\x58\x8a\x9a\xbd\x7c\x03\xda\x15\x8f\x84\x9a\x18\x56\x73\x87\x11\x05\x3b\xb1\x44\x2e\x83\xb6\xb3\x02\x0e\x9c\xd3\x51\x47\x07\x3f\xab\x32\x80\x9b\x63\x13\x0a\x9d\xc2\x0b\xda\xd8\xff\xba\xa6\x67\x8d\x13\x69\x15\x4a\x41\x29\xc7\xbc\xf6\xff\x2c\xd8\xa9\xec\x8e\x90\x6d\x27\xff\x49\x71\x45\x44\x8b\x65\x59\x03\xb7\x92\xb5\x90\x2f\xe3\x6a\xa4\x5a\x80\x34\xd7\xd4\xde\x51\xb3\x7f\xec\x7f\xc7\x0b\x5c\xb4\x9c\x49\x26\x0f\x2d\x44\xc1\x29\x9e\xa9\x05\xa8\x53\xbf\x46\xcd\xb0\x13\x5d\xf7\x49\x5c\x9c\x22\xdf\x73\x10\xb1\x9e\x55\x61\xa1\x7a\x90\x58\x02\xe6\xbb\x53\xec\x9e\xf7\xe4\xb1\xc8\xca\xe1\x99\xed\xe1\x1d\xc2\x4f\x00\xbd\x35\x03\xe3\xc1\x79\x0a\xe2\x46\x4b\xb6\x28\xff\x2f\x5e\xd6\x0f\x07\xd9\x71\x3a\x15\xc4\x71\x7c\x53\xe0\xbf\xe0\x55\x46\x7d\xeb\x1a\x19\xa4\x7e\xcd\x29\x25\xcf\x7e\xba\xfa\xa3\xb9\xad\xda\xaf\x70\x38\xa7\x85\xa1\x0c\x5d\x25\xa0\xe6\x91\x24\x91\x8d\x46\x09\x7c\x7e\xff\xbc\x5d\x7b\x89\x09\xf6\x05\xba\xbc\x0c\x7d\x44\xd1\x00\xdd\xc9\x1a\x7d\x44\xff\x87\x09\x9c\x0f\xe0\x4a\x45\x80\xcc\x3d\xc7\x8f\x8d\x3b\x23\xa6\x24\x6f\x19\x47\xb9\x9e\xa7\x3a\x42\x75\x8e\x21\x71\x92\x6d\x92\xa5\x72\x6e\x5b\x48\x14\xc7\xbd\x82\x7c\x58\xa5\x48\x7b\x10\x66\x0b\xc7\xbc\x2c\xd6\xda\x2e\x59\x6b\xae\x3e\x53\x4a\x2e\xfa\x72\x01\x0f\xd3\xc5\xc3\x84\xb9\x6f\x84\xe4\xb8\xd7\x10\xc9\x71\x0f\x8a\x07\xfa\xce\x07\x5b\xdc\x35\xd2\x6d\x7b\x8a\x59\xb2\xf6\x07\x67\x2d\xde\x61\xcd\xea\x6d\xde\x0f\xd8\x9a\x29\x7b\x50\x5c\x4e\x48\x7d\xd5\xcf\x34\x5c\xd3\x4a\x32\xad\x48\xb5\x79\xf7\x6e\x0c\xa9\xd9\xe2\x46\xc0\x62\x52\xf4\x07\x4c\x94\x94\x37\xe5\x24\xf9\x09\x74\xb2\x8f\xb8\xc3\x68\xe1\x30\xac\xbc\x77\x4d\x99\x27\xc0\x49\xde\x09\xd1\x6a\x1c\x7a\x4a\x5b\xcc\xf5\x30\x74\xe4\x9a\x95\xc4\xc4\xf7\xe6\xe6\xa9\x09\xa3\x2c\x25\xcc\x9e\x83\xee\x1e\xde\x37\xac\xea\x1c\xde\xd9\x18\x01\x77\xac\x82\xf4\x3d\x8e\xcc\x86\xa1\x30\xab\x75\xba\xc7\x83\xea\xa1\xb0\x46\xf1\xeb\x8b\xe3\x4a\x1f\xcc\xdf\x00\x00\x00\xff\xff\x07\x85\xe3\xcb\xa3\x0b\x00\x00")

func origin_box_js_bytes() ([]byte, error) {
	return bindata_read(
		_origin_box_js,
		"origin_box.js",
	)
}

func origin_box_js() (*asset, error) {
	bytes, err := origin_box_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "origin_box.js", size: 2979, mode: os.FileMode(420), modTime: time.Unix(1435907756, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _origin_box_ts = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\x4f\x4f\xdc\x3e\x10\xbd\xf3\x29\xe6\x97\x03\x4a\x04\x44\xfa\x5d\x77\xd5\x1e\xda\x22\x55\x2a\xd0\xaa\xa2\x27\xc4\xc1\x24\xb3\xbb\x16\xc1\x8e\x6c\x67\x01\xa1\xfd\xee\x75\xfc\x2f\xb1\x93\xed\x2e\x12\x17\xc4\xda\x33\x6f\xde\x3c\x7b\x9e\x53\x35\x44\x4a\xf8\x29\xe8\x9a\xb2\x2f\xfc\x05\xde\x4e\x00\x5a\x41\xb7\x44\x21\x60\x83\x4f\xc8\xd4\x02\xbe\xdf\x5e\x5f\x5d\xda\x1f\xcb\xd1\x3e\x23\x4f\x78\x79\x20\xe6\x11\x5f\x0f\x85\x20\xab\x5b\x4e\x99\x9a\x8f\x9b\x09\x94\x0b\xb8\xf4\xff\x6a\xce\x63\x2c\x6e\x1a\x59\xb8\x86\xa2\xec\x9a\xca\x96\xa8\x6a\x83\x42\xa7\x6f\x35\xf6\xb7\xb0\x60\xe2\x2a\xce\xa4\x12\x5d\xa5\xb8\xc8\x63\x98\xa2\x17\x05\x40\x6d\xa8\x2c\x9d\x26\xf0\x09\x6a\x5e\x75\xfd\xbf\x65\x25\x50\xe3\x3b\xc2\x79\xa6\x44\x56\x2c\x27\x09\xa5\x11\xfa\x46\x2b\xa6\x53\x33\x8b\x0f\x1b\x5a\xe3\x45\xe8\x2a\x33\x34\x5c\xda\x48\xdb\x7f\xd5\xaa\xa3\x5a\xa3\xa4\xb8\x5e\xbf\x91\xcd\x90\x22\x6d\xab\xcb\x7f\xdd\xd0\xa6\xce\x53\x84\x62\x4c\x67\x38\xc6\xe3\xd9\x0c\x39\x31\x19\xdf\xf0\x85\x0e\xc8\xe6\xe3\x49\x5d\x9b\x23\xba\xa2\x52\x21\x43\x91\x67\x55\x43\xab\xc7\xec\xdc\x46\xca\x0d\x7f\xbe\x46\xd6\x95\x0f\x94\x59\xe2\xc5\x9c\xe4\x93\xee\x86\x0a\x51\x73\xc9\x05\x3c\xbe\xc3\x24\x71\xbe\x4d\x79\x94\xf0\x09\xd4\x2c\x3f\xa9\x61\x19\x3e\x47\x97\x3f\x9f\xe3\x23\x67\x04\x94\xba\x74\xa5\x82\x82\xe6\x97\x07\xda\xa7\x63\x80\x6b\x3b\x75\x98\xe6\x30\x60\x9e\x67\x3c\x65\x79\x14\x2d\x51\xd9\xe9\x72\xc3\x66\x0a\xef\xfa\x80\x09\x77\x7d\x6c\x0b\xd0\xb3\x49\xd9\xfa\x1c\x1a\xb7\xea\x86\xd8\x07\x15\xf0\x96\xb2\x98\x8a\xa0\x81\x06\x80\x62\xa9\xcb\x41\xb0\x05\x13\x19\x97\x22\x62\xed\xaa\x14\x0b\x20\xec\x75\xa6\xc4\x24\xdb\x64\x39\x68\x81\x4f\x7c\x8b\x1f\xd3\xcb\x1e\xac\xa4\x1d\x5d\x34\xd5\x35\x98\x18\x58\x17\xa3\x2b\xc8\xff\xe3\xd1\x52\xcf\x54\x75\x82\xd9\xa3\xdf\x99\xbf\x1a\xe6\x16\x5f\xd4\xc4\x15\xce\x9d\xc5\x9a\x35\x77\x59\xa2\xd8\x61\xc6\x42\xa8\xbf\x34\x3f\xf0\xf5\xbd\xfe\x00\xd9\xd9\x14\x64\xde\x98\x4a\x45\x55\xd3\x03\x24\x09\x7f\x7e\x5f\x2d\x43\xe7\xc9\x9e\x84\xd3\xd3\x34\x5e\x96\x0d\xb2\xb5\xda\xc0\x67\xf8\x7f\x50\x68\x3f\xe3\x33\x4d\x19\xec\x3c\x91\x87\xc6\xdb\xec\xce\x72\x5c\x71\x01\xf9\x96\x88\xfe\x1d\x04\xed\xf8\x69\xad\xa4\xc0\xc0\x41\x6b\xea\xa7\x73\x42\xfa\x4e\x83\xdd\x17\x51\x1d\x93\xed\x5e\x15\xaf\x40\x18\xa8\x75\xb8\x12\x85\xbf\x0d\xae\xac\x3d\xf7\x71\x76\x48\xf2\x1e\x9b\xe3\x02\xae\x79\x27\x31\x1a\x84\xe3\xde\xb7\x1e\xe3\x22\xf5\x41\x2c\x5b\x81\xc6\x19\x70\x45\xba\x46\x79\x07\xc3\x52\x2a\xde\xfe\x12\xbc\x25\x6b\xa2\x28\x67\x61\xe3\xce\xe1\xf5\xe8\xd9\xbd\xc6\x1f\xf1\x35\xf7\x70\x39\x35\x21\x3b\x90\x59\xcf\x40\x7b\x9e\xbf\xa9\xae\xdf\x15\x69\x24\x86\x4e\xfb\x57\xd8\x74\xfa\xbe\xe6\x26\x8f\xb7\x17\x2e\xb2\xd6\x5e\xbe\x3d\xca\x0d\x75\x3f\xa0\xcf\xa8\x68\xe8\xd8\x10\xea\xcd\xbb\x25\x22\xfd\xb4\x72\x5f\x35\x76\x67\xe6\x41\x0a\x0e\xef\x60\x6a\xbd\xa2\x30\x1f\xfb\x48\xf4\x45\xa4\x27\x29\xd2\xcc\x02\xdf\xf0\x1a\x8b\xf8\x8e\x4f\xf6\x9d\xb9\xed\x29\x6e\x1d\x69\x77\xb2\x3b\xf9\x1b\x00\x00\xff\xff\xbd\xa0\xf3\xd1\xac\x0a\x00\x00")

func origin_box_ts_bytes() ([]byte, error) {
	return bindata_read(
		_origin_box_ts,
		"origin_box.ts",
	)
}

func origin_box_ts() (*asset, error) {
	bytes, err := origin_box_ts_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "origin_box.ts", size: 2732, mode: os.FileMode(420), modTime: time.Unix(1435907487, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _origins_box_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x55\xcd\x6e\x9c\x30\x10\xbe\xef\x53\x38\x1c\x22\x90\x52\xbf\x00\xca\xa5\xed\xde\xda\xe4\x01\xa2\x1c\x1c\x3c\xbb\x58\x65\x6d\x64\xcc\xa6\x51\xc4\xbb\xd7\xc6\x80\xff\x80\x34\x55\x39\xec\x8f\x3d\xf3\xcd\xe7\x6f\xbe\x31\x57\x22\xd1\xa3\x64\x67\xc6\xbb\xaf\xe2\x37\xba\x47\xf9\xa9\xe7\x95\x62\x82\xa3\xbc\x40\xef\x07\xa4\x9f\x65\xc5\x05\x2e\x7b\xe6\x51\x35\xeb\x30\x34\x70\x01\xae\x34\x02\x15\x55\x6f\x7e\xe2\x4a\x02\x51\x70\xb4\x1b\x79\xa6\xc8\x4b\x03\x59\x51\xae\xe6\xe1\xaa\x21\x5d\xf7\x40\x2e\xa0\x11\xb2\x86\x75\xea\x8b\xb0\xd5\xb2\x28\x81\xb2\xae\x25\xaa\xaa\x41\xea\x48\x0e\xaf\xe8\x78\xd5\xf9\xdf\x97\xd5\x3c\xae\x30\xe1\xe8\xe8\xf7\xc1\x6e\x0d\xe3\xa7\x3b\x0d\x6e\xa5\x50\x42\xbd\xb5\x80\x09\xa5\x23\xde\x0f\xcd\x00\xf8\x58\xc3\x09\xf2\x0b\xde\xee\x50\x33\xed\x24\x0a\x38\x62\x09\x4a\x94\x39\xb1\x28\xb7\x69\xcc\x58\x23\x4a\xca\x81\xc8\xf3\x5e\xf9\x20\xdb\x65\x7c\x5c\x56\xc2\x45\x5c\xe1\x3f\x08\xb0\x02\xf4\x69\x0d\x3a\x50\x76\x3d\xa0\x60\xbb\xe9\xd7\x36\x16\xb6\xab\xd6\xc1\x7e\xd3\x9f\xec\x37\xe6\xda\x58\xcf\xce\x17\xec\x84\xf2\x9b\x25\xc7\x07\x33\x8f\x0f\x66\x0c\xf6\x38\xff\x9f\x8b\x97\xeb\xe1\xb8\xed\x55\xee\x9b\x7a\x33\x30\xf1\x47\xd6\xd5\xe2\x35\xbb\xb3\xdc\x6b\x46\xe1\x27\xf0\x1e\xbf\x30\x4e\x47\xc0\xe2\x33\x48\xba\x78\xa5\x8e\x9c\xb6\x82\x71\x35\x63\x86\xab\xdb\xc8\x9b\xe2\x69\x2d\x96\xaa\x2e\x65\x38\xa4\x94\x96\xbe\x85\x72\xed\xb5\x7a\x3e\x71\xd0\x69\xf0\xfb\x72\x12\x12\xe5\xa6\xd3\x86\x0c\xd2\x9e\xf0\x89\xc6\x0d\x74\x8e\x88\xed\x10\xf9\x60\xf6\xc2\x74\xd0\xf3\xc2\xbc\x18\x0f\x8d\x6e\xee\x11\x3c\x65\x76\xd7\xdc\x4d\xd9\x73\x5c\x2a\xd1\x6c\xac\xb0\x1c\x28\x8f\xe4\x1d\x22\xe5\xf6\xfd\xef\xb7\x6c\x5b\x9a\x60\xf6\xec\xc8\xa7\x26\x80\xbf\xe8\x42\xd5\x00\x09\xe7\xfd\x9f\x3b\xb0\x22\x09\xd5\x94\x14\xf8\x82\x0c\x1f\xde\xd3\x3b\x64\xf5\xac\x05\x54\x5b\x22\xcd\xc4\x79\x3c\xec\x0a\x26\x6d\x0b\x9c\x7e\xab\x59\x43\xd7\x86\x73\xf7\x16\x1e\x29\x6f\x2a\x62\x9c\x13\xbc\xfb\x6e\x6f\xc3\x77\x9a\x65\xf0\x20\x28\xac\xea\x93\x86\x4d\xf7\xe6\x26\xd9\xc4\x38\x12\x54\x2f\xfd\x17\x73\x79\x18\x0a\xa3\xf1\x9f\x00\x00\x00\xff\xff\x0f\xd0\x61\xe6\xd8\x07\x00\x00")

func origins_box_js_bytes() ([]byte, error) {
	return bindata_read(
		_origins_box_js,
		"origins_box.js",
	)
}

func origins_box_js() (*asset, error) {
	bytes, err := origins_box_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "origins_box.js", size: 2008, mode: os.FileMode(420), modTime: time.Unix(1435907756, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _origins_box_ts = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x54\xb1\x6e\xdb\x30\x10\xdd\xfd\x15\x17\x0d\x81\x08\xa4\xfa\x00\x19\x59\xda\x1a\xe8\x90\xa4\x4b\x37\xc3\x03\x23\x5e\x6c\xa2\x32\x29\x50\xb4\xd3\xc0\xd0\xbf\x97\x14\x8f\x92\x28\xd9\x68\x0b\x74\x4a\x4c\xde\xbd\xf7\xee\xde\x13\xab\x9a\xb7\x2d\x7c\x37\x72\x2f\x55\xfb\x59\xff\x82\xcb\x0a\xa0\x31\xf2\xcc\x2d\x02\xd6\x78\x44\x65\x4b\xf8\xf6\xe3\xf9\x69\x13\x7e\xac\x27\xf7\x3a\xb4\x95\x70\x81\xad\xe2\x47\x2c\xa1\xb5\x46\xaa\xfd\xae\x24\x44\x07\xb8\x86\x6e\xbd\x9a\xf4\x08\xd9\x36\xdc\x56\x07\x34\x25\x6c\xce\x0e\xf0\xeb\x70\xd0\xd7\x55\x5a\x39\x90\x53\x65\xb5\xc9\x99\x17\x03\x60\x0f\xb2\x2d\x48\x0b\x3c\x82\xd0\xd5\xc9\xff\x5b\x54\x06\x1d\x22\xe9\xca\x33\xcb\x5f\x6b\xcc\xd8\x7a\xd1\x53\xf4\x43\xbe\x38\x81\xae\x3b\xab\x65\x6b\x3f\x91\xf2\xac\xa7\xa4\xea\x51\x99\x2b\x53\xf8\x3e\x97\x97\xb3\x69\x35\x21\xb8\xd2\x4b\xe7\x29\x3b\x7f\xc7\x85\xe8\x9b\x9e\x1c\x07\x2a\xd7\xf2\x13\x3f\xe2\x52\x1e\xa0\xa6\x53\x1a\x3c\x16\x31\xb7\xbe\x99\x80\xe2\x1a\xd0\x08\xc0\xdc\x52\x1d\x5b\xac\xef\x2b\x53\x2a\x6e\xf6\xc4\xc2\x4a\xe0\xea\xe3\x0a\xc5\xa2\xbb\xef\x22\x68\x83\x47\x7d\xc6\xff\x33\xcb\x0d\xac\xd9\x38\x8e\xb4\x45\x1b\x62\x93\x87\xe5\xc6\x14\x31\x08\x39\x38\x73\x43\x91\xf3\x41\x7d\x4c\x7c\xd8\x86\xbf\x85\x8f\xe1\x2e\x44\x40\xbe\x41\x7e\x37\xd4\x47\x10\x48\x20\xbc\xcd\x43\x54\x89\x96\x12\x34\x29\x2c\x9a\x93\xcd\xa7\x89\xba\x52\xb2\x70\x2c\x6b\x0f\xfa\x3d\x7b\x08\x2a\x0f\x52\xe0\x33\xaa\x53\xf1\x2a\x95\xe8\xa1\xd8\xdf\x61\x38\xc2\xca\x6e\x94\x68\xb4\x54\x36\xa2\xa5\xa7\x29\x26\x81\xde\xdc\x8d\x1b\x7a\x20\x0c\x0a\xba\x55\xaa\x62\x6e\x03\x1b\xe2\x1d\xa7\xc8\x31\x86\x8b\x96\xfa\xa6\x0d\xe4\xde\x1e\x4f\x01\x52\x25\xf4\xe3\xe6\x47\x03\xe7\xee\x4d\x6c\x0b\xc6\x91\xe4\xfd\xa0\x85\xf5\xf2\xe1\xee\x11\x70\x9b\x85\x5b\xff\x45\x67\xbb\x11\x1e\xae\x60\x0e\x9b\xcf\x87\x7d\x77\xc3\xd4\x94\xba\xe9\x32\x17\xa3\x25\x69\x0e\xdf\xca\xd2\x15\x1c\x77\x54\xd5\xc8\xdd\x53\xf1\x6f\x8b\xb9\xa2\x5b\x38\x0e\x8b\x51\x75\xf7\x87\x87\xc7\x07\xb4\xe1\x66\xfe\x58\xd3\x03\x1a\x6e\x0a\xde\x34\xa8\xc4\x97\x83\xac\xc5\x32\xcd\x3d\x4c\x24\x25\x61\xde\x88\xe4\xf1\xbd\xbf\x4f\x1f\xd6\x00\xfc\xa2\x05\xb2\x64\x94\xe5\x3d\xbd\x02\x37\xc8\xa3\x1d\xdd\xea\x77\x00\x00\x00\xff\xff\x74\xdc\xb8\x3f\x90\x06\x00\x00")

func origins_box_ts_bytes() ([]byte, error) {
	return bindata_read(
		_origins_box_ts,
		"origins_box.ts",
	)
}

func origins_box_ts() (*asset, error) {
	bytes, err := origins_box_ts_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "origins_box.ts", size: 1680, mode: os.FileMode(420), modTime: time.Unix(1435907487, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _status_box_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x53\xcd\x6e\xf2\x30\x10\xbc\xf3\x14\xfe\x7c\x40\x8e\xbe\x36\xdc\x1b\xf5\xd2\x8a\x53\x2b\x2a\xf5\xe7\x01\xac\x64\x29\x56\x83\x6d\xd9\x1b\x04\xaa\x78\xf7\x3a\x31\x89\x71\x52\x53\x7c\x00\x6b\x3d\xbb\x33\xcc\x2c\x3b\x6e\xc8\x1b\x72\x6c\xec\x83\xda\x93\x7b\xc2\xd6\x8d\x2c\x51\x28\x49\x58\x46\xbe\x67\xc4\x9d\xa1\x32\xe0\x98\x32\xe2\x53\xc8\x1e\xd0\x1e\xdc\x08\x9b\x43\x0d\x5b\x90\xe8\xc6\x54\xaa\x6c\xda\x6b\x5e\x1a\xe0\x08\x4b\xff\xc0\x68\x25\x76\x34\x2b\x7e\xed\xca\xcb\x9a\x5b\xbb\xe2\x5b\x70\xfd\xd4\x76\x5c\x34\x40\x17\x0b\x8f\x96\x0e\xb0\xfc\x93\xc7\x6a\x2e\x69\x76\xa9\x39\xa6\x6b\x1f\xe8\x04\xde\x2b\xe3\x5a\x83\xac\x1e\x37\xa2\xae\xd8\x78\xce\x39\x49\xfc\xbb\xbe\xe0\x70\xad\xd0\x22\xd5\x19\xab\x74\x22\xb4\x12\x12\x6f\x1d\x80\x26\x5c\x9c\x68\x0d\xc3\xc6\x34\x16\xf0\xa5\x0b\xb2\xcf\xd3\xbf\x1f\xbb\xcf\x21\xec\x5c\x1b\x85\x0a\x0f\x1a\x42\x83\x13\x13\xf6\x64\xba\x0c\x62\x4d\xd8\xbf\x69\xb9\x3d\x06\xb0\x31\x32\x08\x39\x0e\x37\x37\xfc\x1d\xf6\x38\x16\x7d\x43\xfc\xa0\xce\x73\xf2\x9f\xd0\x3b\x42\xdd\xd7\xa9\xd8\x3b\xf2\x04\x87\x0b\x26\xa2\xc0\xba\x35\xf0\x9a\x49\x1f\xaf\xcf\xd7\xef\x67\x42\xca\x68\x80\xea\x3d\xf3\x97\x93\xcb\x45\xd2\x66\xdd\x60\x64\xb0\xe6\xa6\x4d\xef\xcc\x49\x5f\x99\x66\x0d\x51\xd0\x17\x28\x2a\x87\x44\x88\x58\xc6\x01\x46\xff\xe8\xf9\x3c\xf6\xc2\x0b\x58\xa9\x0a\xc6\x01\x27\x60\xb9\x81\xad\xda\x41\x52\x6b\xd8\x85\x93\x6a\xbf\x28\x41\x7c\x31\x3b\x66\xcc\x81\x7f\x02\x00\x00\xff\xff\xcc\x00\xab\xe9\xb1\x04\x00\x00")

func status_box_js_bytes() ([]byte, error) {
	return bindata_read(
		_status_box_js,
		"status_box.js",
	)
}

func status_box_js() (*asset, error) {
	bytes, err := status_box_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "status_box.js", size: 1201, mode: os.FileMode(420), modTime: time.Unix(1435907756, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _status_box_ts = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x53\x4d\x6f\xea\x30\x10\xbc\xf3\x2b\xf6\xf9\x80\x12\xf1\x5e\xb8\x13\xbd\x4b\x2b\xa4\x4a\xa5\x54\x6a\xe9\x0f\x88\x92\x6d\xb1\x1a\xec\xc8\xde\x20\x50\xc5\x7f\xaf\x63\x3b\x21\x9f\x2d\x07\x14\xe2\x9d\x9d\x99\x9d\x75\xd2\x3c\xd1\x1a\x5e\x29\xa1\x52\xdf\xc9\x13\x7c\xcd\x00\x0a\xc5\x8f\x09\x21\x60\x8e\x07\x14\xb4\x82\x87\xdd\xd3\x66\xed\x5e\x62\x53\x5f\x2e\x1b\x88\x48\x0e\xb8\x1e\x81\xb5\x58\x3e\xf1\x3c\x86\x88\x67\x2d\x8c\x54\xfc\x83\x8b\x15\x3c\xdb\xa7\x2d\xa5\x52\x68\x52\x65\x4a\x52\x05\xdd\x72\x58\x79\x04\xa0\x3d\xd7\x91\xb7\x08\xff\x21\x93\x69\x59\xfd\x8d\x52\x85\x86\xd2\xab\x04\x2c\xe3\x47\x16\xc6\x83\x8e\xc8\x0e\xbe\x35\xf6\x4d\x2f\xd3\x76\x7e\x66\x85\xed\x7c\x16\xda\x1a\xee\x07\x01\x5d\x24\x82\x85\x53\x8d\x5d\x9d\xaa\xc0\x3a\xd0\xda\x4e\x52\x14\x28\xb2\xfb\x3d\xcf\xb3\xa0\xcf\x51\x93\x5f\x87\xb8\x66\xfa\xab\xb1\x78\xac\xab\xeb\xca\x08\x17\x92\x0b\xfa\x67\x00\x6c\x24\xaa\x81\xb7\x2b\x51\xe8\x23\xb3\xc7\x1a\xc9\x6d\xc8\x2f\xcc\x6a\x5f\x2a\x40\xbf\xd2\xac\x12\xdc\x2e\xf9\x3b\x04\x7f\x64\xe7\x08\x40\x21\x95\x4a\x38\x3f\x17\x27\x63\x78\x76\x78\xa2\xbe\x8b\xbf\xfe\x02\xd9\xd0\x60\x01\x6c\x05\xcc\x3c\xfc\x61\x3d\xde\x23\x9e\x27\xd2\x20\x4e\x79\x95\xc4\x2d\x2c\x6f\x2f\x9b\xdb\x6e\x13\xb0\xc5\xd0\x40\x3b\x2e\x57\x6d\x64\x9b\xb0\x8a\x92\x82\x22\x51\xfd\x0f\xc6\x5f\x7b\x57\x19\xee\x04\x9b\x85\x78\x9a\xcc\x9c\x10\x06\xed\x88\x3b\x9f\xcc\x7c\xde\x1d\xc1\x11\x6f\x65\x86\x61\xbd\x81\x89\x7a\xa4\xf0\x20\x8f\x38\x21\x5e\xc9\x57\xbf\xcb\xec\x3b\x00\x00\xff\xff\xc5\xb2\x5a\xc0\x5c\x04\x00\x00")

func status_box_ts_bytes() ([]byte, error) {
	return bindata_read(
		_status_box_ts,
		"status_box.ts",
	)
}

func status_box_ts() (*asset, error) {
	bytes, err := status_box_ts_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "status_box.ts", size: 1116, mode: os.FileMode(420), modTime: time.Unix(1435907487, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _tsconfig_json = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x90\x41\x4b\xc4\x30\x10\x85\xef\xfd\x15\x6b\x8f\x45\x52\x16\xf4\xe2\x4d\x3c\x88\x20\xf8\x03\x44\x4a\xda\xce\xae\x23\xe9\x4c\xc8\x4c\x8b\x22\xfb\xdf\x4d\x9b\x75\xed\x6e\x8b\x39\xbe\xef\xbd\x97\xbc\x7c\x67\x9b\x78\xf2\x01\x82\x20\x53\x7e\xb7\xc9\xb7\xe6\xc6\x6c\xf3\xeb\xa4\x37\xdc\x79\x74\x10\x5e\xbc\x46\x2c\x91\xa7\xc0\x04\xd5\x86\x3d\xe8\x98\x01\xb9\x3d\x26\x26\xd0\x71\xdb\x3b\x18\x41\xcc\x77\x4c\x1f\x32\xa7\x2d\x34\xce\x06\xab\xe9\xbe\x9d\x75\x02\x33\x4a\xfc\xd4\x79\x87\x0d\xea\x3d\x7d\xad\xf0\x00\x1d\x0f\xf0\x10\x7b\x81\x74\x7c\x90\x86\xfe\x3c\xff\x8c\xf5\x6f\x6e\x92\x0f\xc7\x2d\xbb\x38\x44\x1e\x1d\x8f\xf4\xf5\x2f\x60\xca\xa2\x28\x0b\xa3\x67\x6f\xbc\x32\x25\x71\x0b\x55\x5a\x22\x27\xcb\xe4\x78\x9b\x17\x5e\x96\x55\x69\xf2\x45\x9f\x29\xad\xc7\x85\x56\xf7\xaa\x2b\xd6\x86\x49\x03\xbb\xaa\xe6\xcf\x05\x03\x6a\x3d\x23\xe9\xbf\x50\xd6\xe9\x10\x7f\xac\x6a\x51\xbc\xd5\xe6\x1d\xc2\xc2\x80\x84\xba\x10\x39\xe0\x1e\x69\xb5\x30\xa1\xf5\xcb\x44\xad\xf6\x27\x94\xbe\x2d\x3b\x64\x3f\x01\x00\x00\xff\xff\x8b\x69\xca\xba\x6f\x02\x00\x00")

func tsconfig_json_bytes() ([]byte, error) {
	return bindata_read(
		_tsconfig_json,
		"tsconfig.json",
	)
}

func tsconfig_json() (*asset, error) {
	bytes, err := tsconfig_json_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "tsconfig.json", size: 623, mode: os.FileMode(420), modTime: time.Unix(1435907487, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"_common.js": common_js,
	"_common.ts": common_ts,
	"api.js": api_js,
	"api.ts": api_ts,
	"button.js": button_js,
	"button.ts": button_ts,
	"control_box.js": control_box_js,
	"control_box.ts": control_box_ts,
	"endpoint_box.js": endpoint_box_js,
	"endpoint_box.ts": endpoint_box_ts,
	"endpoints_box.js": endpoints_box_js,
	"endpoints_box.ts": endpoints_box_ts,
	"event_dispatcher.js": event_dispatcher_js,
	"event_dispatcher.ts": event_dispatcher_ts,
	"init.js": init_js,
	"init.ts": init_ts,
	"layout.css": layout_css,
	"origin_box.js": origin_box_js,
	"origin_box.ts": origin_box_ts,
	"origins_box.js": origins_box_js,
	"origins_box.ts": origins_box_ts,
	"status_box.js": status_box_js,
	"status_box.ts": status_box_ts,
	"tsconfig.json": tsconfig_json,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() (*asset, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"_common.js": &_bintree_t{common_js, map[string]*_bintree_t{
	}},
	"_common.ts": &_bintree_t{common_ts, map[string]*_bintree_t{
	}},
	"api.js": &_bintree_t{api_js, map[string]*_bintree_t{
	}},
	"api.ts": &_bintree_t{api_ts, map[string]*_bintree_t{
	}},
	"button.js": &_bintree_t{button_js, map[string]*_bintree_t{
	}},
	"button.ts": &_bintree_t{button_ts, map[string]*_bintree_t{
	}},
	"control_box.js": &_bintree_t{control_box_js, map[string]*_bintree_t{
	}},
	"control_box.ts": &_bintree_t{control_box_ts, map[string]*_bintree_t{
	}},
	"endpoint_box.js": &_bintree_t{endpoint_box_js, map[string]*_bintree_t{
	}},
	"endpoint_box.ts": &_bintree_t{endpoint_box_ts, map[string]*_bintree_t{
	}},
	"endpoints_box.js": &_bintree_t{endpoints_box_js, map[string]*_bintree_t{
	}},
	"endpoints_box.ts": &_bintree_t{endpoints_box_ts, map[string]*_bintree_t{
	}},
	"event_dispatcher.js": &_bintree_t{event_dispatcher_js, map[string]*_bintree_t{
	}},
	"event_dispatcher.ts": &_bintree_t{event_dispatcher_ts, map[string]*_bintree_t{
	}},
	"init.js": &_bintree_t{init_js, map[string]*_bintree_t{
	}},
	"init.ts": &_bintree_t{init_ts, map[string]*_bintree_t{
	}},
	"layout.css": &_bintree_t{layout_css, map[string]*_bintree_t{
	}},
	"origin_box.js": &_bintree_t{origin_box_js, map[string]*_bintree_t{
	}},
	"origin_box.ts": &_bintree_t{origin_box_ts, map[string]*_bintree_t{
	}},
	"origins_box.js": &_bintree_t{origins_box_js, map[string]*_bintree_t{
	}},
	"origins_box.ts": &_bintree_t{origins_box_ts, map[string]*_bintree_t{
	}},
	"status_box.js": &_bintree_t{status_box_js, map[string]*_bintree_t{
	}},
	"status_box.ts": &_bintree_t{status_box_ts, map[string]*_bintree_t{
	}},
	"tsconfig.json": &_bintree_t{tsconfig_json, map[string]*_bintree_t{
	}},
}}

// Restore an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// Restore assets under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        if err != nil { // File
                return RestoreAsset(dir, name)
        } else { // Dir
                for _, child := range children {
                        err = RestoreAssets(dir, path.Join(name, child))
                        if err != nil {
                                return err
                        }
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

